<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>第一个微信小程序应用示例</title>
      <link href="/RookieRoom/2022/03/28/create_wechat_first/"/>
      <url>/RookieRoom/2022/03/28/create_wechat_first/</url>
      
        <content type="html"><![CDATA[<h4 id="具体部分"><a href="#具体部分" class="headerlink" title="具体部分"></a>具体部分</h4><span id="more"></span><blockquote><p>wxml部分</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--miniprogram/pages/index/index.wxml--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;movie&quot;</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;moveList&#125;&#125;&quot;</span> <span class="attr">wx:key</span>=<span class="string">&quot;item&quot;</span> &gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">&#x27;&#123;&#123;item.ImgSrc&#125;&#125;&#x27;</span> <span class="attr">class</span>=<span class="string">&quot;movie-img&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;movie-info&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;movie-title&quot;</span>&gt;</span>&#123;&#123;item.CN_Title&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span> <span class="tag">&lt;<span class="name">text</span> <span class="attr">style</span>=<span class="string">&quot;color:&#x27;#00A65F&#x27;&quot;</span>&gt;</span> Top&#123;&#123;item.uid&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">text</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;item.EN_Title !== &#x27; &#x27;&#125;&#125;&quot;</span>&gt;</span>别名：&#123;&#123;item.EN_Title&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">text</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;item.EN_Title == &#x27; &#x27;&#125;&#125;&quot;</span>&gt;</span>别名：暂无<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span>&gt;</span>观众评分：</span><br><span class="line">      <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;movie-score&quot;</span>&gt;</span> &#123;&#123;item.Rating&#125;&#125;分<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span>&gt;</span>评分人数：</span><br><span class="line">      <span class="tag">&lt;<span class="name">text</span> &gt;</span>&#123;&#123;item.Judge&#125;&#125; <span class="tag">&lt;<span class="name">text</span> &gt;</span>人评价<span class="tag">&lt;/<span class="name">text</span>&gt;</span> <span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;item.Inq !== &#x27; &#x27;&#125;&#125;&quot;</span>&gt;</span>点评: “&#123;&#123;item.Inq&#125;&#125;”<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;item.Inq == &#x27; &#x27;&#125;&#125;&quot;</span>&gt;</span>点评: 暂无<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> &gt;</span>详情链接:<span class="tag">&lt;<span class="name">text</span> <span class="attr">style</span>=<span class="string">&quot;color:blue&quot;</span> <span class="attr">data-text</span>=<span class="string">&quot;&#123;&#123;item.Link&#125;&#125;&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;textPaste&quot;</span>&gt;</span>点击复制<span class="tag">&lt;/<span class="name">text</span>&gt;</span> <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">&lt;/view &gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;has-no-more&quot;</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;end&#125;&#125;&quot;</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center;font-size:20rpx;&quot;</span>&gt;</span>---没有更多了---<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;gotop&quot;</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;ToTop&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;btn-gotop&quot;</span> <span class="attr">style</span>=<span class="string">&quot;&quot;</span>&gt;</span>顶部<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>wxss部分</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* miniprogram/pages/index/index.wxss */</span></span><br><span class="line"><span class="selector-class">.movie</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.movie-img</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200</span>rpx;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300</span>rpx;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">20</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.movie-info</span>&#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">28</span>rpx;</span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">1.8</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.movie-title</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#666</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">40</span>rpx;</span><br><span class="line">  <span class="attribute">font-weight</span>: bolder;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.movie-score</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#faaf00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.movie-comment</span>&#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">60</span>rpx;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#E54847</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">26</span>rpx;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">120</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#808080</span>;</span><br><span class="line">  <span class="attribute">border</span>: black;</span><br><span class="line">  <span class="attribute">margin-left</span>:<span class="number">85%</span>;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">48px</span>; </span><br><span class="line">  <span class="attribute">height</span>: <span class="number">48px</span>;</span><br><span class="line">  <span class="attribute">position</span>:fixed; </span><br><span class="line">  <span class="attribute">bottom</span>:<span class="number">40px</span>; </span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">opacity</span>:<span class="number">0.5</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.btn-gotop</span> </span><br><span class="line">  &#123; </span><br><span class="line">  <span class="attribute">color</span>:white; </span><br><span class="line">  <span class="attribute">position</span>:absolute;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">0.8rem</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">0.4rem</span></span><br><span class="line">  &#125; </span><br></pre></td></tr></table></figure><blockquote><p>js部分</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// miniprogram/pages/index/index.js</span></span><br><span class="line"><span class="keyword">const</span> db = wx.<span class="property">cloud</span>.<span class="title function_">database</span>()</span><br><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 页面的初始数据</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">data</span>: &#123;    </span><br><span class="line">      <span class="attr">moveList</span>:[],</span><br><span class="line">      <span class="attr">start</span>:<span class="number">0</span>,</span><br><span class="line">      <span class="attr">cout</span>:<span class="number">20</span>,</span><br><span class="line">      <span class="title class_">ToTop</span>:<span class="literal">false</span>,</span><br><span class="line">      <span class="attr">end</span>:<span class="literal">false</span>,</span><br><span class="line">      <span class="attr">s</span>:<span class="string">&#x27;&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">textPaste</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="comment">//点击复制</span></span><br><span class="line">    wx.<span class="title function_">setClipboardData</span>(&#123;</span><br><span class="line">      <span class="attr">data</span>: e.<span class="property">currentTarget</span>.<span class="property">dataset</span>.<span class="property">text</span>,</span><br><span class="line">      <span class="attr">success</span>:<span class="keyword">function</span>(<span class="params">res</span>)&#123;</span><br><span class="line">         wx.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;复制成功&#x27;</span>,</span><br><span class="line">         &#125;)</span><br><span class="line">        <span class="comment">/*wx.getClipboardData(&#123;//获取复制内容</span></span><br><span class="line"><span class="comment">          success: function(res)&#123;</span></span><br><span class="line"><span class="comment">            console.log(res.data)</span></span><br><span class="line"><span class="comment">          &#125;</span></span><br><span class="line"><span class="comment">        &#125;)*/</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"> &#125;,</span><br><span class="line">  <span class="attr">onPageScroll</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123; <span class="comment">// 获取滚动条当前位置</span></span><br><span class="line">    <span class="keyword">if</span>(e.<span class="property">scrollTop</span>&gt;<span class="number">400</span>)&#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">         <span class="title class_">ToTop</span>:<span class="literal">true</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">        <span class="title class_">ToTop</span>:<span class="literal">false</span></span><br><span class="line">     &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br><span class="line">  <span class="attr">gotop</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="comment">//返回顶部</span></span><br><span class="line">    <span class="keyword">if</span> (wx.<span class="property">pageScrollTo</span>) &#123;  </span><br><span class="line">      wx.<span class="title function_">pageScrollTo</span>(&#123;</span><br><span class="line">        <span class="attr">scrollTop</span>: <span class="number">0</span></span><br><span class="line">      &#125;);    </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      wx.<span class="title function_">showModal</span>(&#123;</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&#x27;提示&#x27;</span>,</span><br><span class="line">        <span class="attr">content</span>: <span class="string">&#x27;当前微信版本过低，无法使用该功能，请升级到最新微信版本后重试。&#x27;</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">K</span>:<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    wx.<span class="title function_">showLoading</span>(&#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;加载中&#x27;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">var</span> start = <span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">start</span>;</span><br><span class="line">    <span class="keyword">var</span> cout =<span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">cout</span>;</span><br><span class="line">    db.<span class="title function_">collection</span>(<span class="string">&#x27;douban&#x27;</span>).<span class="title function_">skip</span>(start).<span class="title function_">limit</span>(cout).<span class="title function_">get</span>().<span class="title function_">then</span>(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">        <span class="attr">moveList</span>:<span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">moveList</span>.<span class="title function_">concat</span>(res.<span class="property">data</span>),</span><br><span class="line">        <span class="attr">start</span>:start+cout</span><br><span class="line">      &#125;);</span><br><span class="line">      wx.<span class="title function_">hideLoading</span>();</span><br><span class="line">    &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 生命周期函数--监听页面加载</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">onLoad</span>: <span class="keyword">function</span> (<span class="params">options</span>) &#123;</span><br><span class="line">    </span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 生命周期函数--监听页面初次渲染完成</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">onReady</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">K</span>();</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 生命周期函数--监听页面显示</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">onShow</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 生命周期函数--监听页面隐藏</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">onHide</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 生命周期函数--监听页面卸载</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">onUnload</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 页面相关事件处理函数--监听用户下拉动作</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">onPullDownRefresh</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    </span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 页面上拉触底事件的处理函数</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">onReachBottom</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">K</span>();</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">start</span>&gt;=<span class="number">240</span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">            <span class="attr">end</span>:<span class="literal">true</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 用户点击右上角分享</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">onShareAppMessage</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VSCode中给方法添加注释头(C#)</title>
      <link href="/RookieRoom/2022/03/28/csharp_addzhushi/"/>
      <url>/RookieRoom/2022/03/28/csharp_addzhushi/</url>
      
        <content type="html"><![CDATA[<p>使用C# XML Documentation Comments插件<br>快捷键 &#x2F;&#x2F;&#x2F;</p><span id="more"></span><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> </span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;a&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;b&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">DoSomething</span>(<span class="params"><span class="built_in">float</span> a,<span class="built_in">string</span> b</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>转自：<a href="https://blog.csdn.net/hbflyhbfly/article/details/86542362">https://blog.csdn.net/hbflyhbfly/article/details/86542362</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> 有趣的编程知识 </tag>
            
            <tag> 插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>钩子程序</title>
      <link href="/RookieRoom/2022/03/28/gouzichengxu/"/>
      <url>/RookieRoom/2022/03/28/gouzichengxu/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><blockquote><p>​            钩子(Hook)，是Windows消息处理机制的一个平台，应用程序可以在上面设置子程序以监视指定窗口的某种消息，而且所监视的窗口可以是其他进程所创建的。当消息到达后，在目标窗口处理函数之前处理它。钩子机制允许应用程序截获处理Windows消息或特定事件。<br>中文名钩子程序外文名Hook类    型处理消息的程序段平    台Windows消息处理机制的一个平台</p></blockquote><span id="more"></span><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><p>1 基本概念<br>2 运行机制<br>3 分类<br>4 常用类型</p><h3 id="1-基本概念编辑"><a href="#1-基本概念编辑" class="headerlink" title="1.基本概念编辑"></a>1.基本概念编辑</h3><p>在某种操作后弹出的关于钩子程序的界面<br>在某种操作后弹出的关于钩子程序的界面<br>钩子实际上是一个处理消息的程序段，通过系统调用，把它挂入系统。每当特定的消息发出，在没有到达目的窗口前，钩子程序就先捕获该消息，亦即钩子函数先得到控制权。这时钩子函数即可以加工处理（改变）该消息，也可以不作处理而继续传递该消息，还可以强制结束消息的传递。<br>钩子也可以理解为WINDOWS留给我们的后门，比如你想控制键盘，在DOS时代很简单通过INT即可，而WINDOWS时代不允许我们直接操作硬件；由于WINDOWS是消息驱动，所以我们可以拦截键盘消息以达到控制键盘的目的。控制自己进程的消息固然很简单，但是要控制所有进程消息就要利用钩子了。将钩子函数放在DLL中，所有的有关键盘的消息都必须经过钩子函数过滤，这样你就可以为所欲为了。<br>WINDOWS下的钩子程序就像DOS下的TSR(内存驻留程序)一样，用来截获WINDOWS下的消息。</p><h3 id="2-运行机制编辑"><a href="#2-运行机制编辑" class="headerlink" title="2.运行机制编辑"></a>2.运行机制编辑</h3><p>每一个Hook(钩子)都有一个与之相关联的指针列表，称之为钩子链表，由系统来维护。这个列表的指针指向指定的，应用程序定义的，被Hook子程调用的回调函数，也就是该钩子的各个处理子程。当与指定的Hook类型关联的消息发生时，系统就把这个消息传递到Hook子程。 一些Hook子程可以只监视消息，或者修改消息，或者停止消息的前进，避免这些消息传递到下一个Hook子程或者目的窗口。最近安装的钩子放在链的开始， 而最早安装的钩子放在最后，也就是后加入的先获得控制权。<br>Windows 并不要求钩子子程的卸载顺序一定得和安装顺序相反。每当有一个钩子被卸载，Windows 便释放其占用的内存，并更新整个Hook链表。如果程序安装了钩子，但是在尚未卸载钩子之前就结束了，那么系统会自动为它做卸载钩子的操作。</p><h3 id="3-分类编辑"><a href="#3-分类编辑" class="headerlink" title="3.分类编辑"></a>3.分类编辑</h3><p>按事件分类<br>有如下的几种常用类型<br>（1）键盘钩子和低级键盘钩子可以监视各种键盘消息。<br>（2） 鼠标钩子和低级鼠标钩子可以监视各种鼠标消息。<br>（3） 外壳钩子可以监视各种Shell事件消息。比如启动和关闭应用程序。<br>（4）日志钩子可以记录从系统消息队列中取出的各种事件消息。<br>（5） 窗口过程钩子监视所有从系统消息队列发往目标窗口的消息。<br>此外，还有一些特定事件的钩子提供给我们使用，不一一列举。<br>按使用范围分类<br>主要有线程钩子和系统钩子<br>（1） 线程钩子监视指定线程的事件消息。<br>（2）系统钩子监视系统中的所有线程的事件消息。因为系统钩子会影响系统中所有的应用程序，所以钩子函数必须放在独立的动态链接库(DLL)中。这是系统钩子和线程钩子很大的不同之处。<br>几点需要说明的地方：<br>（1） 如果对于同一事件（如鼠标消息）既安装了线程钩子又安装了系统钩子，那么系统会自动先调用线程钩子，然后调用系统钩子。<br>（2） 对同一事件消息可安装多个钩子处理过程，这些钩子处理过程形成了钩子链。当前钩子处理结束后应把钩子信息传递给下一个钩子函数。而且最近安装的钩子放在链的开始，而最早安装的钩子放在最后，也就是后加入的先获得控制权。<br>（3） 钩子特别是系统钩子会消耗消息处理时间，降低系统性能。只有在必要的时候才安装钩子，在使用完毕后要及时卸载。</p><h3 id="4-常用类型编辑"><a href="#4-常用类型编辑" class="headerlink" title="4.常用类型编辑"></a>4.常用类型编辑</h3><p>WH_CALLWNDPROC<br>1、WH_CALLWNDPROC和WH_CALLWNDPROCRET Hooks<br>WH_CALLWNDPROC和WH_CALLWNDPROCRET Hooks使你可以监视发送到窗口过程的消息。系统在消息发送到接收窗口过程之前调用WH_CALLWNDPROC Hook子程，并且在窗口过程处理完消息之后调用WH_CALLWNDPROCRET Hook子程。<br>WH_CALLWNDPROCRET Hook传递指针到CWPRETSTRUCT结构，再传递到Hook子程。CWPRETSTRUCT结构包含了来自处理消息的窗口过程的返回值，同样也包括了与这个消息关联的消息参数。<br>WH_CBT Hook<br>在以下事件之前，系统都会调用WH_CBT Hook子程，这些事件包括：</p><ol><li>激活，建立，销毁，最小化，最大化，移动，改变尺寸等窗口事件；</li><li>完成系统指令；</li><li>来自系统消息队列中的移动鼠标，键盘事件；</li><li>设置输入焦点事件；</li><li>同步系统消息队列事件。<br>Hook子程的返回值确定系统是否允许或者防止这些操作中的一个。<br>WH_DEBUG Hook<br>在系统调用系统中与其他Hook关联的Hook子程之前，系统会调用WH_DEBUG Hook子程。你可以使用这个Hook来决定是否允许系统调用与其他Hook关联的Hook子程。<br>WH_FOREGROUNDIDLE Hook<br>当应用程序的前台线程处于空闲状态时，可以使用WH_FOREGROUNDIDLE Hook执行低优先级的任务。当应用程序的前台线程大概要变成空闲状态时，系统就会调用WH_FOREGROUNDIDLE Hook子程。<br>WH_GETMESSAGE Hook<br>应用程序使用WH_GETMESSAGE Hook来监视从GetMessage or PeekMessage函数返回的消息。你可以使用WH_GETMESSAGE Hook去监视鼠标和键盘输入，以及其他发送到消息队列中的消息。<br>WH_JOURNALPLAYBACK Hook<br>WH_JOURNALPLAYBACK Hook使应用程序可以插入消息到系统消息队列。可以使用这个Hook回放通过使用WH_JOURNALRECORD Hook记录下来的连续的鼠标和键盘事件。只要WH_JOURNALPLAYBACK Hook已经安装，正常的鼠标和键盘事件就是无效的。<br>WH_JOURNALPLAYBACK Hook是全局Hook，它不能象线程特定Hook一样使用。 WH_JOURNALPLAYBACK Hook返回超时值，这个值告诉系统在处理来自回放Hook当前消息之前需要等待多长时间（毫秒）。这就使Hook可以控制实时事件的回放。<br>WH_JOURNALPLAYBACK是system-wide local hooks，它们不会被注射到任何行程位址空间。（估计按键精灵是用这个hook做的）<br>WH_JOURNALRECORD Hook<br>WH_JOURNALRECORD Hook用来监视和记录输入事件。典型的，可以使用这个Hook记录连续的鼠标和键盘事件，然后通过使用WH_JOURNALPLAYBACK Hook来回放。<br>WH_JOURNALRECORD Hook是全局Hook，它不能象线程特定Hook一样使用。<br>WH_JOURNALRECORD是system-wide local hooks，它们不会被注射到任何行程位址空间。<br>WH_KEYBOARD Hook<br>在应用程序中，WH_KEYBOARD Hook用来监视WM_KEYDOWN and WM_KEYUP消息，这些消息通过GetMessage or PeekMessage function返回。可以使用这个Hook来监视输入到消息队列中的键盘消息。<br>WH_KEYBOARD_LL Hook<br>WH_KEYBOARD_LL Hook监视输入到线程消息队列中的键盘消息。<br>WH_MOUSE Hook<br>WH_MOUSE Hook监视从GetMessage 或者 PeekMessage 函数返回的鼠标消息。使用这个Hook监视输入到消息队列中的鼠标消息。<br>WH_MOUSE_LL Hook<br>WH_MOUSE_LL Hook监视输入到线程消息队列中的鼠标消息。<br>WH_MSGFILTER &#x2F; hooks<br>WH_MSGFILTER 和 WH_SYSMSGFILTER Hooks<br>WH_MSGFILTER 和 WH_SYSMSGFILTER Hooks使我们可以监视菜单，滚动条，消息框，对话框消息并且发现用户使用ALT+TAB or ALT+ESC 组合键切换窗口。<br>WH_MSGFILTER Hook只能监视传递到菜单，滚动条，消息框的消息，以及传递到通过安装了Hook子程的应用程序建立的对话框的消息。<br>WH_SYSMSGFILTER Hook监视所有应用程序消息。<br>WH_MSGFILTER 和 WH_SYSMSGFILTER Hooks使我们可以在模式循环期间过滤消息，这等价于在主消息循环中过滤消息。通过调用CallMsgFilter function可以直接的调用WH_MSGFILTER Hook。通过使用这个函数，应用程序能够在模式循环期间使用相同的代码去过滤消息，如同在主消息循环里一样。<br>WH_SHELL Hook<br>外壳应用程序可以使用WH_SHELL Hook去接收重要的通知。当外壳应用程序是激活的并且当顶层窗口建立或者销毁时，系统调用WH_SHELL Hook子程。<br>WH_SHELL 共有5钟情况：</li><li>只要有个top-level、unowned 窗口被产生、起作用、或是被摧毁；</li><li>当Taskbar需要重画某个按钮；</li><li>当系统需要显示关于Taskbar的一个程序的最小化形式；</li><li>键盘布局状态改变；</li><li>当使用者按Ctrl+Esc去执行Task Manager（或相同级别的程序）。<br>按照惯例，外壳应用程序都不接收WH_SHELL消息。所以，在应用程序能够接收WH_SHELL消息之前，应用程序必须调用SystemParametersInfo function注册它自己。</li></ol><p>转自：<a href="https://baike.baidu.com/item/%E9%92%A9%E5%AD%90%E7%A8%8B%E5%BA%8F/10772325">https://baike.baidu.com/item/钩子程序/10772325</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 有趣的编程知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jq在线引用地址大全</title>
      <link href="/RookieRoom/2022/03/28/jq_src/"/>
      <url>/RookieRoom/2022/03/28/jq_src/</url>
      
        <content type="html"><![CDATA[<p>1.官网jquery压缩版引用地址:</p><span id="more"></span><p>　3.1.1版本:</p><p>　　<script src="https://code.jquery.com/jquery-3.1.1.min.js"></script></p><p>   3.0.0版本:</p><p>　　<script src="https://code.jquery.com/jquery-3.0.0.min.js"></script></p><p>　2.1.4版本:</p><p>　　<script src="http://code.jquery.com/jquery-2.1.4.min.js"></script></p><p>2.百度压缩版引用地址:</p><p>　　<script src="http://libs.baidu.com/jquery/2.1.4/jquery.min.js"></script></p><p>3.微软压缩版引用地址:</p><p>　　<script src="http://ajax.aspnetcdn.com/ajax/jquery/jquery-2.1.4.min.js"></script></p><br /><p>转自：<a href="https://blog.csdn.net/weixin_42630877/article/details/83096998">https://blog.csdn.net/weixin_42630877&#x2F;article&#x2F;details&#x2F;83096998</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单使用Node.js连接MySql数据库进行增删改查</title>
      <link href="/RookieRoom/2022/03/28/nodejs_test/"/>
      <url>/RookieRoom/2022/03/28/nodejs_test/</url>
      
        <content type="html"><![CDATA[<p>##连接数据库</p><span id="more"></span><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入mysql（既然要使用它，当然要引入啦）</span></span><br><span class="line"><span class="keyword">const</span> mysql = <span class="built_in">require</span>(<span class="string">&#x27;mysql&#x27;</span>); </span><br><span class="line"> </span><br><span class="line"><span class="comment">//连接mysql,option可很具情况自行配置</span></span><br><span class="line"><span class="keyword">const</span> option = &#123;</span><br><span class="line">  <span class="attr">host</span>: <span class="string">&quot;主机地址&quot;</span>,</span><br><span class="line">  <span class="attr">user</span>: <span class="string">&quot;Mysql用户名&quot;</span>,</span><br><span class="line">  <span class="attr">password</span>: <span class="string">&quot;Mysql用户密码&quot;</span>,</span><br><span class="line">  <span class="attr">database</span>: <span class="string">&quot;数据库名称&quot;</span>,</span><br><span class="line">  <span class="attr">port</span>: <span class="string">&#x27;端口号&#x27;</span>,</span><br><span class="line">  <span class="attr">connectTimeout</span>: <span class="number">5000</span>, <span class="comment">// 连接超时</span></span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> connection = mysql.<span class="title function_">createConnection</span>(option);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//连接开始</span></span><br><span class="line">connection.<span class="title function_">connect</span>(<span class="keyword">function</span>(<span class="params">err</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(err)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;连接失败&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;连接成功&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>##增</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> userAddSql = <span class="string">&#x27;INSERT INTO userinfo(Id,UserName,UserPass) VALUES(0,?,?)&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> userAddSql_Params = [<span class="string">&#x27;Wilson&#x27;</span>,<span class="string">&#x27;abcd&#x27;</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//增</span></span><br><span class="line"> connection.<span class="title function_">query</span>(userAddSql,userAddSql_Params,<span class="keyword">function</span>(<span class="params">err,result</span>)&#123;</span><br><span class="line"> <span class="keyword">if</span>(err)&#123;</span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[INSERT ERROR] - &#x27;</span>,err.<span class="property">message</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;--------------------------INSERT----------------------------&#x27;</span>);</span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;INSERT  ID:&#x27;</span>,result);</span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-----------------------------------------------------------------\n\n&#x27;</span>);</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure><p>##改</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> userModSql = <span class="string">&#x27;UPDATE userinfo SET UserName =?,UserPass = ?  WHERE Id = ?&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> userModSql_Params = [<span class="string">&#x27;钟馗&#x27;</span>,<span class="string">&#x27;5678&#x27;</span>,<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//改</span></span><br><span class="line"></span><br><span class="line">connection.<span class="title function_">query</span>(userModSql,userModSql_Params,<span class="keyword">function</span>(<span class="params">err,result</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(err)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[UPDATE ERROR] - &#x27;</span>,err.<span class="property">message</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125; </span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;--------------------------UPDATE----------------------------&#x27;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;UPDATE affectedRows&#x27;</span>,result);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-----------------------------------------------------------------\n\n&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>##查</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> userGetSql = <span class="string">&#x27;SELECT * FROM userinfo&#x27;</span>;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">//查</span></span><br><span class="line"> connection.<span class="title function_">query</span>(userGetSql,<span class="keyword">function</span>(<span class="params">err,result</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(err)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[SELECT ERROR] - &#x27;</span>,err.<span class="property">message</span>);</span><br><span class="line"> <span class="keyword">return</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;--------------------------SELECT----------------------------&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);        </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-----------------------------------------------------------------\n\n&#x27;</span>);  </span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure><p>##删</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> userDelSql = <span class="string">&#x27;DELETE FROM userinfo&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//删</span></span><br><span class="line">connection.<span class="title function_">query</span>(userDelSql,<span class="keyword">function</span>(<span class="params">err,result</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (err) &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[DELETE ERROR] - &#x27;</span>,err.<span class="property">message</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;--------------------------DELETE----------------------------&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;DELETE affectedRows&#x27;</span>,result);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-----------------------------------------------------------------\n\n&#x27;</span>);  </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>##结束连接</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">connection.<span class="title function_">end</span>()</span><br></pre></td></tr></table></figure><p>##完整代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//引入mysql（既然要使用它，当然要引入啦）</span></span><br><span class="line"><span class="keyword">const</span> mysql = <span class="built_in">require</span>(<span class="string">&#x27;mysql&#x27;</span>); </span><br><span class="line"> </span><br><span class="line"><span class="comment">//连接mysql,option可很具情况自行配置</span></span><br><span class="line"><span class="keyword">const</span> option = &#123;</span><br><span class="line">  <span class="attr">host</span>: <span class="string">&quot;101.201.145.134&quot;</span>,</span><br><span class="line">  <span class="attr">user</span>: <span class="string">&quot;TestDB&quot;</span>,</span><br><span class="line">  <span class="attr">password</span>: <span class="string">&quot;Wa8emaaN7ShSkcyR&quot;</span>,</span><br><span class="line">  <span class="attr">database</span>: <span class="string">&quot;TestDB&quot;</span>,</span><br><span class="line">  <span class="attr">port</span>: <span class="string">&#x27;3306&#x27;</span>,</span><br><span class="line">  <span class="attr">connectTimeout</span>: <span class="number">5000</span>, <span class="comment">// 连接超时</span></span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> connection = mysql.<span class="title function_">createConnection</span>(option);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//连接开始</span></span><br><span class="line">connection.<span class="title function_">connect</span>(<span class="keyword">function</span>(<span class="params">err</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(err)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;连接失败&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;连接成功&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">//这里就是增删改查的地方啦</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">var</span> userAddSql = <span class="string">&#x27;INSERT INTO userinfo(Id,UserName,UserPass) VALUES(0,?,?)&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> userAddSql_Params = [<span class="string">&#x27;Wilson&#x27;</span>,<span class="string">&#x27;abcd&#x27;</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//增</span></span><br><span class="line">connection.<span class="title function_">query</span>(userAddSql,userAddSql_Params,<span class="keyword">function</span>(<span class="params">err,result</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(err)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[INSERT ERROR] - &#x27;</span>,err.<span class="property">message</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;--------------------------INSERT----------------------------&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;INSERT  ID:&#x27;</span>,result);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-----------------------------------------------------------------\n\n&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> <span class="keyword">var</span> userModSql = <span class="string">&#x27;UPDATE userinfo SET UserName =?,UserPass = ?  WHERE Id = ?&#x27;</span>;</span><br><span class="line"> <span class="keyword">var</span> userModSql_Params = [<span class="string">&#x27;钟馗&#x27;</span>,<span class="string">&#x27;5678&#x27;</span>,<span class="number">1</span>];</span><br><span class="line"> </span><br><span class="line"> <span class="comment">//改</span></span><br><span class="line"> </span><br><span class="line"> connection.<span class="title function_">query</span>(userModSql,userModSql_Params,<span class="keyword">function</span>(<span class="params">err,result</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(err)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[UPDATE ERROR] - &#x27;</span>,err.<span class="property">message</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125; </span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;--------------------------UPDATE----------------------------&#x27;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;UPDATE affectedRows&#x27;</span>,result);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-----------------------------------------------------------------\n\n&#x27;</span>);</span><br><span class="line"> &#125;);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> <span class="keyword">var</span> userGetSql = <span class="string">&#x27;SELECT * FROM userinfo&#x27;</span>;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">//查</span></span><br><span class="line"> connection.<span class="title function_">query</span>(userGetSql,<span class="keyword">function</span>(<span class="params">err,result</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(err)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[SELECT ERROR] - &#x27;</span>,err.<span class="property">message</span>);</span><br><span class="line"> <span class="keyword">return</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;--------------------------SELECT----------------------------&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);        </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-----------------------------------------------------------------\n\n&#x27;</span>);  </span><br><span class="line"> &#125;);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> <span class="keyword">var</span> userDelSql = <span class="string">&#x27;DELETE FROM userinfo&#x27;</span>;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">//删</span></span><br><span class="line"> connection.<span class="title function_">query</span>(userDelSql,<span class="keyword">function</span>(<span class="params">err,result</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (err) &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[DELETE ERROR] - &#x27;</span>,err.<span class="property">message</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;--------------------------DELETE----------------------------&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;DELETE affectedRows&#x27;</span>,result);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-----------------------------------------------------------------\n\n&#x27;</span>);  </span><br><span class="line"> &#125;);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> <span class="comment">//结束连接</span></span><br><span class="line"> connection.<span class="title function_">end</span>()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>学自：<em><a href="https://www.cnblogs.com/zhongweiv/p/nodejs_mysql.html">https://www.cnblogs.com/zhongweiv/p/nodejs_mysql.html</a></em></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>字符串和Unicode互转</title>
      <link href="/RookieRoom/2022/03/28/string_to_unicode/"/>
      <url>/RookieRoom/2022/03/28/string_to_unicode/</url>
      
        <content type="html"><![CDATA[<h4 id="字符串转Unicode"><a href="#字符串转Unicode" class="headerlink" title="字符串转Unicode"></a>字符串转Unicode</h4><span id="more"></span><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> 字符串转Unicode</span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;source&quot;&gt;</span>源字符串<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>Unicode编码后的字符串<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">StringUnicode</span>(<span class="params"><span class="built_in">string</span> source</span>)</span></span><br><span class="line">       &#123;</span><br><span class="line">           <span class="built_in">byte</span>[] bytes = Encoding.Unicode.GetBytes(source);</span><br><span class="line">           StringBuilder stringBuilder = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">           <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; bytes.Length; i += <span class="number">2</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               stringBuilder.AppendFormat(<span class="string">&quot;\\u&#123;0&#125;&#123;1&#125;&quot;</span>, bytes[i + <span class="number">1</span>].ToString(<span class="string">&quot;x&quot;</span>).PadLeft(<span class="number">2</span>, <span class="string">&#x27;0&#x27;</span>), bytes[i].ToString(<span class="string">&quot;x&quot;</span>).PadLeft(<span class="number">2</span>, <span class="string">&#x27;0&#x27;</span>));</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">return</span> stringBuilder.ToString();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Unicode转字符串"><a href="#Unicode转字符串" class="headerlink" title="Unicode转字符串"></a>Unicode转字符串</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> Unicode转字符串</span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;source&quot;&gt;</span>经过Unicode编码的字符串<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>正常字符串<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">UnicodeString</span>(<span class="params"><span class="built_in">string</span> source</span>)</span></span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="keyword">new</span> Regex(<span class="string">@&quot;\\u([0-9A-F]&#123;4&#125;)&quot;</span>, RegexOptions.IgnoreCase | RegexOptions.Compiled).Replace(</span><br><span class="line">               source, x =&gt; <span class="built_in">string</span>.Empty + Convert.ToChar(Convert.ToUInt16(x.Result(<span class="string">&quot;$1&quot;</span>), <span class="number">16</span>)));</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> 有趣的编程知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将获取到的秒数转换为年月日时分秒</title>
      <link href="/RookieRoom/2022/03/28/time_convert/"/>
      <url>/RookieRoom/2022/03/28/time_convert/</url>
      
        <content type="html"><![CDATA[<p>代码如下</p><span id="more"></span><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Nowtime</span>(time)&#123;</span><br><span class="line">    <span class="comment">//年=12个月  月=30天  天=24小时   小时=60分钟  分钟=60秒</span></span><br><span class="line">    <span class="comment">//12*30*24*60*60</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">var</span> y=<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>*<span class="number">30</span>*<span class="number">12</span>,m=<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>*<span class="number">30</span>,d=<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>,h=<span class="number">60</span>*<span class="number">60</span>,mm=<span class="number">60</span>;</span><br><span class="line">    <span class="comment">//年</span></span><br><span class="line">    <span class="keyword">var</span> Y =<span class="title class_">Math</span>.<span class="title function_">floor</span>(time/y);</span><br><span class="line">    <span class="comment">//月</span></span><br><span class="line">    <span class="keyword">var</span> M = <span class="title class_">Math</span>.<span class="title function_">floor</span>(time/m)-(Y*m);</span><br><span class="line">    M=M&lt;<span class="number">10</span>?<span class="string">&quot;0&quot;</span>+<span class="attr">M</span>:M;</span><br><span class="line">    <span class="comment">//日</span></span><br><span class="line">    <span class="keyword">var</span> D = <span class="title class_">Math</span>.<span class="title function_">floor</span>(time/d)-(((Y*m*d)+(M*d)));</span><br><span class="line">    D=D&lt;<span class="number">10</span>?<span class="string">&quot;0&quot;</span>+<span class="attr">D</span>:D;</span><br><span class="line">    <span class="comment">//时</span></span><br><span class="line">    <span class="keyword">var</span> H =<span class="title class_">Math</span>.<span class="title function_">floor</span>(time/h)-(((Y*m*d*h)+(M*d*h)+(D*h)));</span><br><span class="line">    H=H&lt;<span class="number">10</span>?<span class="string">&quot;0&quot;</span>+<span class="attr">H</span>:H;</span><br><span class="line">    <span class="comment">//分</span></span><br><span class="line">    <span class="keyword">var</span> <span class="title class_">Mm</span> = <span class="title class_">Math</span>.<span class="title function_">floor</span>(time/mm)-(((Y*m*d*h*mm)+(M*d*h*mm)+(D*h*mm)+(H*mm)));</span><br><span class="line">    <span class="title class_">Mm</span>=<span class="title class_">Mm</span>&lt;<span class="number">10</span>?<span class="string">&quot;0&quot;</span>+<span class="title class_">Mm</span>:<span class="title class_">Mm</span>;</span><br><span class="line">    <span class="comment">//秒</span></span><br><span class="line">    <span class="keyword">var</span> S = time%mm;</span><br><span class="line">    S=S&lt;<span class="number">10</span>?<span class="string">&quot;0&quot;</span>+<span class="attr">S</span>:S;</span><br><span class="line">    <span class="keyword">var</span> data=Y +<span class="string">&quot;年&quot;</span>+ M+<span class="string">&quot;月&quot;</span> + D +<span class="string">&quot;日&quot;</span> + H +<span class="string">&quot;:&quot;</span> + <span class="title class_">Mm</span> +<span class="string">&quot;:&quot;</span> + S;</span><br><span class="line">    <span class="keyword">return</span> data;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> 有趣的编程知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单在Unity中使用c#扩展方法</title>
      <link href="/RookieRoom/2022/03/28/unity_kuozhanfangfa/"/>
      <url>/RookieRoom/2022/03/28/unity_kuozhanfangfa/</url>
      
        <content type="html"><![CDATA[<h3 id="扩展方法声明"><a href="#扩展方法声明" class="headerlink" title="扩展方法声明"></a>扩展方法声明</h3><span id="more"></span><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">MyHelp</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">MyClass</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 返回Hello World</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;x&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>Hello World<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">Print</span>(<span class="params"><span class="keyword">this</span> Transform x</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;Hello World&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="扩展方法调用"><a href="#扩展方法调用" class="headerlink" title="扩展方法调用"></a>扩展方法调用</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> MyHelp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Test</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> _Test()</span><br><span class="line">    &#123;</span><br><span class="line">        transform.Print();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> 有趣的编程知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇博客</title>
      <link href="/RookieRoom/2022/03/26/FirstBlog/"/>
      <url>/RookieRoom/2022/03/26/FirstBlog/</url>
      
        <content type="html"><![CDATA[<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Console.WriteLine(<span class="string">&quot;Hello,World&quot;</span>);<span class="comment">//你好,世界</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最全的C#图片处理帮助类ImageHelper.cs</title>
      <link href="/RookieRoom/2020/08/13/EV4CfMIoF/"/>
      <url>/RookieRoom/2020/08/13/EV4CfMIoF/</url>
      
        <content type="html"><![CDATA[<h2 id="方法介绍："><a href="#方法介绍：" class="headerlink" title="方法介绍："></a>方法介绍：</h2><ul>     <li>生成缩略图</li>     <li>图片水印处理方法</li>     <li>图片水印位置处理方法</li>     <li>文字水印处理方法</li>     <li>文字水印位置的方法</li>     <li>调整光暗</li>     <li>反色处理</li>     <li>浮雕处理</li>     <li>拉伸图片</li>     <li>滤色处理</li>     <li>左右翻转</li>     <li>上下翻转</li>     <li>压缩到指定尺寸</li>     <li>转换为黑白图片</li>     <li>获取图片中的各帧</li></ul><span id="more"></span><h2 id="代码如下："><a href="#代码如下：" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Drawing.Imaging;</span><br><span class="line"><span class="keyword">using</span> System.Drawing.Drawing2D;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">HelloCsharp.Utilities</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ImageClass</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ImageClass</span>()</span></span><br><span class="line">&#123; &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">region</span> 缩略图</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 生成缩略图</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span>源图路径（物理路径） <span class="doctag">///</span>缩略图路径（物理路径） <span class="doctag">///</span>缩略图宽度 <span class="doctag">///</span>缩略图高度 <span class="doctag">///</span>生成缩略图的方式 public static void MakeThumbnail(string originalImagePath, string thumbnailPath, int width, int height, string mode)</span></span><br><span class="line">&#123;</span><br><span class="line">System.Drawing.Image originalImage = System.Drawing.Image.FromFile(originalImagePath);</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> towidth = width;</span><br><span class="line"><span class="built_in">int</span> toheight = height;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">int</span> y = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">int</span> ow = originalImage.Width;</span><br><span class="line"><span class="built_in">int</span> oh = originalImage.Height;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (mode)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;HW&quot;</span>:  <span class="comment">//指定高宽缩放（可能变形）</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;W&quot;</span>:   <span class="comment">//指定宽，高按比例</span></span><br><span class="line">toheight = originalImage.Height * width / originalImage.Width;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;H&quot;</span>:   <span class="comment">//指定高，宽按比例</span></span><br><span class="line">towidth = originalImage.Width * height / originalImage.Height;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;Cut&quot;</span>: <span class="comment">//指定高宽裁减（不变形）</span></span><br><span class="line"><span class="keyword">if</span> ((<span class="built_in">double</span>)originalImage.Width / (<span class="built_in">double</span>)originalImage.Height &amp;gt; (<span class="built_in">double</span>)towidth / (<span class="built_in">double</span>)toheight)</span><br><span class="line">&#123;</span><br><span class="line">oh = originalImage.Height;</span><br><span class="line">ow = originalImage.Height * towidth / toheight;</span><br><span class="line">y = <span class="number">0</span>;</span><br><span class="line">x = (originalImage.Width - ow) / <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">ow = originalImage.Width;</span><br><span class="line">oh = originalImage.Width * height / towidth;</span><br><span class="line">x = <span class="number">0</span>;</span><br><span class="line">y = (originalImage.Height - oh) / <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="literal">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//新建一个bmp图片</span></span><br><span class="line">System.Drawing.Image bitmap = <span class="keyword">new</span> System.Drawing.Bitmap(towidth, toheight);</span><br><span class="line"></span><br><span class="line"><span class="comment">//新建一个画板</span></span><br><span class="line">System.Drawing.Graphics g = System.Drawing.Graphics.FromImage(bitmap);</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置高质量插值法</span></span><br><span class="line">g.InterpolationMode = System.Drawing.Drawing2D.InterpolationMode.High;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置高质量,低速度呈现平滑程度</span></span><br><span class="line">g.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.HighQuality;</span><br><span class="line"></span><br><span class="line"><span class="comment">//清空画布并以透明背景色填充</span></span><br><span class="line">g.Clear(System.Drawing.Color.Transparent);</span><br><span class="line"></span><br><span class="line"><span class="comment">//在指定位置并且按指定大小绘制原图片的指定部分</span></span><br><span class="line">g.DrawImage(originalImage, <span class="keyword">new</span> System.Drawing.Rectangle(<span class="number">0</span>, <span class="number">0</span>, towidth, toheight), <span class="keyword">new</span> System.Drawing.Rectangle(x, y, ow, oh), System.Drawing.GraphicsUnit.Pixel);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//以jpg格式保存缩略图</span></span><br><span class="line">bitmap.Save(thumbnailPath, System.Drawing.Imaging.ImageFormat.Jpeg);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (System.Exception e)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">throw</span> e;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">finally</span></span><br><span class="line">&#123;</span><br><span class="line">originalImage.Dispose();</span><br><span class="line">bitmap.Dispose();</span><br><span class="line">g.Dispose();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">region</span> 图片水印</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 图片水印处理方法</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span>需要加载水印的图片路径（绝对路径） <span class="doctag">///</span>水印图片（绝对路径） <span class="doctag">///</span>水印位置（传送正确的代码） public static string ImageWatermark(string path, string waterpath, string location)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">string</span> kz_name = Path.GetExtension(path);</span><br><span class="line"><span class="keyword">if</span> (kz_name == <span class="string">&quot;.jpg&quot;</span> || kz_name == <span class="string">&quot;.bmp&quot;</span> || kz_name == <span class="string">&quot;.jpeg&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">DateTime time = DateTime.Now;</span><br><span class="line"><span class="built_in">string</span> filename = <span class="string">&quot;&quot;</span> + time.Year.ToString() + time.Month.ToString() + time.Day.ToString() + time.Hour.ToString() + time.Minute.ToString() + time.Second.ToString() + time.Millisecond.ToString();</span><br><span class="line">Image img = Bitmap.FromFile(path);</span><br><span class="line">Image waterimg = Image.FromFile(waterpath);</span><br><span class="line">Graphics g = Graphics.FromImage(img);</span><br><span class="line">ArrayList loca = GetLocation(location, img, waterimg);</span><br><span class="line">g.DrawImage(waterimg, <span class="keyword">new</span> Rectangle(<span class="built_in">int</span>.Parse(loca[<span class="number">0</span>].ToString()), <span class="built_in">int</span>.Parse(loca[<span class="number">1</span>].ToString()), waterimg.Width, waterimg.Height));</span><br><span class="line">waterimg.Dispose();</span><br><span class="line">g.Dispose();</span><br><span class="line"><span class="built_in">string</span> newpath = Path.GetDirectoryName(path) + filename + kz_name;</span><br><span class="line">img.Save(newpath);</span><br><span class="line">img.Dispose();</span><br><span class="line">File.Copy(newpath, path, <span class="literal">true</span>);</span><br><span class="line"><span class="keyword">if</span> (File.Exists(newpath))</span><br><span class="line">&#123;</span><br><span class="line">File.Delete(newpath);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> path;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 图片水印位置处理方法</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span>水印位置 <span class="doctag">///</span>需要添加水印的图片 <span class="doctag">///</span>水印图片 private static ArrayList GetLocation(string location, Image img, Image waterimg)</span></span><br><span class="line">&#123;</span><br><span class="line">ArrayList loca = <span class="keyword">new</span> ArrayList();</span><br><span class="line"><span class="built_in">int</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">int</span> y = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (location == <span class="string">&quot;LT&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">x = <span class="number">10</span>;</span><br><span class="line">y = <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (location == <span class="string">&quot;T&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">x = img.Width / <span class="number">2</span> - waterimg.Width / <span class="number">2</span>;</span><br><span class="line">y = img.Height - waterimg.Height;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (location == <span class="string">&quot;RT&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">x = img.Width - waterimg.Width;</span><br><span class="line">y = <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (location == <span class="string">&quot;LC&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">x = <span class="number">10</span>;</span><br><span class="line">y = img.Height / <span class="number">2</span> - waterimg.Height / <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (location == <span class="string">&quot;C&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">x = img.Width / <span class="number">2</span> - waterimg.Width / <span class="number">2</span>;</span><br><span class="line">y = img.Height / <span class="number">2</span> - waterimg.Height / <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (location == <span class="string">&quot;RC&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">x = img.Width - waterimg.Width;</span><br><span class="line">y = img.Height / <span class="number">2</span> - waterimg.Height / <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (location == <span class="string">&quot;LB&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">x = <span class="number">10</span>;</span><br><span class="line">y = img.Height - waterimg.Height;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (location == <span class="string">&quot;B&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">x = img.Width / <span class="number">2</span> - waterimg.Width / <span class="number">2</span>;</span><br><span class="line">y = img.Height - waterimg.Height;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">x = img.Width - waterimg.Width;</span><br><span class="line">y = img.Height - waterimg.Height;</span><br><span class="line">&#125;</span><br><span class="line">loca.Add(x);</span><br><span class="line">loca.Add(y);</span><br><span class="line"><span class="keyword">return</span> loca;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">region</span> 文字水印</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 文字水印处理方法</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span>图片路径（绝对路径） <span class="doctag">///</span>字体大小 <span class="doctag">///</span>水印文字 <span class="doctag">///</span>颜色 <span class="doctag">///</span>水印位置 public static string LetterWatermark(string path, int size, string letter, Color color, string location)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="meta">#<span class="keyword">region</span></span></span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> kz_name = Path.GetExtension(path);</span><br><span class="line"><span class="keyword">if</span> (kz_name == <span class="string">&quot;.jpg&quot;</span> || kz_name == <span class="string">&quot;.bmp&quot;</span> || kz_name == <span class="string">&quot;.jpeg&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">DateTime time = DateTime.Now;</span><br><span class="line"><span class="built_in">string</span> filename = <span class="string">&quot;&quot;</span> + time.Year.ToString() + time.Month.ToString() + time.Day.ToString() + time.Hour.ToString() + time.Minute.ToString() + time.Second.ToString() + time.Millisecond.ToString();</span><br><span class="line">Image img = Bitmap.FromFile(path);</span><br><span class="line">Graphics gs = Graphics.FromImage(img);</span><br><span class="line">ArrayList loca = GetLocation(location, img, size, letter.Length);</span><br><span class="line">Font font = <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, size);</span><br><span class="line">Brush br = <span class="keyword">new</span> SolidBrush(color);</span><br><span class="line">gs.DrawString(letter, font, br, <span class="built_in">float</span>.Parse(loca[<span class="number">0</span>].ToString()), <span class="built_in">float</span>.Parse(loca[<span class="number">1</span>].ToString()));</span><br><span class="line">gs.Dispose();</span><br><span class="line"><span class="built_in">string</span> newpath = Path.GetDirectoryName(path) + filename + kz_name;</span><br><span class="line">img.Save(newpath);</span><br><span class="line">img.Dispose();</span><br><span class="line">File.Copy(newpath, path, <span class="literal">true</span>);</span><br><span class="line"><span class="keyword">if</span> (File.Exists(newpath))</span><br><span class="line">&#123;</span><br><span class="line">File.Delete(newpath);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> path;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 文字水印位置的方法</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span>位置代码 <span class="doctag">///</span>图片对象 <span class="doctag">///</span>宽(当水印类型为文字时,传过来的就是字体的大小) <span class="doctag">///</span>高(当水印类型为文字时,传过来的就是字符的长度) private static ArrayList GetLocation(string location, Image img, int width, int height)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="meta">#<span class="keyword">region</span></span></span><br><span class="line"></span><br><span class="line">ArrayList loca = <span class="keyword">new</span> ArrayList();  <span class="comment">//定义数组存储位置</span></span><br><span class="line"><span class="built_in">float</span> x = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">float</span> y = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (location == <span class="string">&quot;LT&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">loca.Add(x);</span><br><span class="line">loca.Add(y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (location == <span class="string">&quot;T&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">x = img.Width / <span class="number">2</span> - (width * height) / <span class="number">2</span>;</span><br><span class="line">loca.Add(x);</span><br><span class="line">loca.Add(y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (location == <span class="string">&quot;RT&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">x = img.Width - width * height;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (location == <span class="string">&quot;LC&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">y = img.Height / <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (location == <span class="string">&quot;C&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">x = img.Width / <span class="number">2</span> - (width * height) / <span class="number">2</span>;</span><br><span class="line">y = img.Height / <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (location == <span class="string">&quot;RC&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">x = img.Width - height;</span><br><span class="line">y = img.Height / <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (location == <span class="string">&quot;LB&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">y = img.Height - width - <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (location == <span class="string">&quot;B&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">x = img.Width / <span class="number">2</span> - (width * height) / <span class="number">2</span>;</span><br><span class="line">y = img.Height - width - <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">x = img.Width - width * height;</span><br><span class="line">y = img.Height - width - <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line">loca.Add(x);</span><br><span class="line">loca.Add(y);</span><br><span class="line"><span class="keyword">return</span> loca;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">region</span> 调整光暗</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 调整光暗</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span>原始图片 <span class="doctag">///</span>原始图片的长度 <span class="doctag">///</span>原始图片的高度 <span class="doctag">///</span>增加或减少的光暗值 public Bitmap LDPic(Bitmap mybm, int width, int height, int val)</span></span><br><span class="line">&#123;</span><br><span class="line">Bitmap bm = <span class="keyword">new</span> Bitmap(width, height);<span class="comment">//初始化一个记录经过处理后的图片对象</span></span><br><span class="line"><span class="built_in">int</span> x, y, resultR, resultG, resultB;<span class="comment">//x、y是循环次数，后面三个是记录红绿蓝三个值的</span></span><br><span class="line">Color pixel;</span><br><span class="line"><span class="keyword">for</span> (x = <span class="number">0</span>; x &amp;lt; width; x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (y = <span class="number">0</span>; y &amp;lt; height; y++)</span><br><span class="line">&#123;</span><br><span class="line">pixel = mybm.GetPixel(x, y);<span class="comment">//获取当前像素的值</span></span><br><span class="line">resultR = pixel.R + val;<span class="comment">//检查红色值会不会超出[0, 255]</span></span><br><span class="line">resultG = pixel.G + val;<span class="comment">//检查绿色值会不会超出[0, 255]</span></span><br><span class="line">resultB = pixel.B + val;<span class="comment">//检查蓝色值会不会超出[0, 255]</span></span><br><span class="line">bm.SetPixel(x, y, Color.FromArgb(resultR, resultG, resultB));<span class="comment">//绘图</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> bm;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">region</span> 反色处理</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 反色处理</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span>原始图片 <span class="doctag">///</span>原始图片的长度 <span class="doctag">///</span>原始图片的高度 public Bitmap RePic(Bitmap mybm, int width, int height)</span></span><br><span class="line">&#123;</span><br><span class="line">Bitmap bm = <span class="keyword">new</span> Bitmap(width, height);<span class="comment">//初始化一个记录处理后的图片的对象</span></span><br><span class="line"><span class="built_in">int</span> x, y, resultR, resultG, resultB;</span><br><span class="line">Color pixel;</span><br><span class="line"><span class="keyword">for</span> (x = <span class="number">0</span>; x &amp;lt; width; x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (y = <span class="number">0</span>; y &amp;lt; height; y++)</span><br><span class="line">&#123;</span><br><span class="line">pixel = mybm.GetPixel(x, y);<span class="comment">//获取当前坐标的像素值</span></span><br><span class="line">resultR = <span class="number">255</span> - pixel.R;<span class="comment">//反红</span></span><br><span class="line">resultG = <span class="number">255</span> - pixel.G;<span class="comment">//反绿</span></span><br><span class="line">resultB = <span class="number">255</span> - pixel.B;<span class="comment">//反蓝</span></span><br><span class="line">bm.SetPixel(x, y, Color.FromArgb(resultR, resultG, resultB));<span class="comment">//绘图</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> bm;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">region</span> 浮雕处理</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 浮雕处理</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span>原始图片 <span class="doctag">///</span>原始图片的长度 <span class="doctag">///</span>原始图片的高度 public Bitmap FD(Bitmap oldBitmap, int Width, int Height)</span></span><br><span class="line">&#123;</span><br><span class="line">Bitmap newBitmap = <span class="keyword">new</span> Bitmap(Width, Height);</span><br><span class="line">Color color1, color2;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> x = <span class="number">0</span>; x &amp;lt; Width - <span class="number">1</span>; x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> y = <span class="number">0</span>; y &amp;lt; Height - <span class="number">1</span>; y++) &#123; <span class="built_in">int</span> r = <span class="number">0</span>, g = <span class="number">0</span>, b = <span class="number">0</span>; color1 = oldBitmap.GetPixel(x, y); color2 = oldBitmap.GetPixel(x + <span class="number">1</span>, y + <span class="number">1</span>); r = Math.Abs(color1.R - color2.R + <span class="number">128</span>); g = Math.Abs(color1.G - color2.G + <span class="number">128</span>); b = Math.Abs(color1.B - color2.B + <span class="number">128</span>); <span class="keyword">if</span> (r &amp;gt; <span class="number">255</span>) r = <span class="number">255</span>;</span><br><span class="line"><span class="keyword">if</span> (r &amp;lt; <span class="number">0</span>) r = <span class="number">0</span>; <span class="keyword">if</span> (g &amp;gt; <span class="number">255</span>) g = <span class="number">255</span>;</span><br><span class="line"><span class="keyword">if</span> (g &amp;lt; <span class="number">0</span>) g = <span class="number">0</span>; <span class="keyword">if</span> (b &amp;gt; <span class="number">255</span>) b = <span class="number">255</span>;</span><br><span class="line"><span class="keyword">if</span> (b &amp;lt; <span class="number">0</span>) b = <span class="number">0</span>;</span><br><span class="line">newBitmap.SetPixel(x, y, Color.FromArgb(r, g, b));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> newBitmap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">region</span> 拉伸图片</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 拉伸图片</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span>原始图片 <span class="doctag">///</span>新的宽度 <span class="doctag">///</span>新的高度 public static Bitmap ResizeImage(Bitmap bmp, int newW, int newH)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">Bitmap bap = <span class="keyword">new</span> Bitmap(newW, newH);</span><br><span class="line">Graphics g = Graphics.FromImage(bap);</span><br><span class="line">g.InterpolationMode = System.Drawing.Drawing2D.InterpolationMode.HighQualityBicubic;</span><br><span class="line">g.DrawImage(bap, <span class="keyword">new</span> Rectangle(<span class="number">0</span>, <span class="number">0</span>, newW, newH), <span class="keyword">new</span> Rectangle(<span class="number">0</span>, <span class="number">0</span>, bap.Width, bap.Height), GraphicsUnit.Pixel);</span><br><span class="line">g.Dispose();</span><br><span class="line"><span class="keyword">return</span> bap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">region</span> 滤色处理</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 滤色处理</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span>原始图片 <span class="doctag">///</span>原始图片的长度 <span class="doctag">///</span>原始图片的高度 public Bitmap FilPic(Bitmap mybm, int width, int height)</span></span><br><span class="line">&#123;</span><br><span class="line">Bitmap bm = <span class="keyword">new</span> Bitmap(width, height);<span class="comment">//初始化一个记录滤色效果的图片对象</span></span><br><span class="line"><span class="built_in">int</span> x, y;</span><br><span class="line">Color pixel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (x = <span class="number">0</span>; x &amp;lt; width; x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (y = <span class="number">0</span>; y &amp;lt; height; y++)</span><br><span class="line">&#123;</span><br><span class="line">pixel = mybm.GetPixel(x, y);<span class="comment">//获取当前坐标的像素值</span></span><br><span class="line">bm.SetPixel(x, y, Color.FromArgb(<span class="number">0</span>, pixel.G, pixel.B));<span class="comment">//绘图</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> bm;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">region</span> 左右翻转</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 左右翻转</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span>原始图片 <span class="doctag">///</span>原始图片的长度 <span class="doctag">///</span>原始图片的高度 public Bitmap RevPicLR(Bitmap mybm, int width, int height)</span></span><br><span class="line">&#123;</span><br><span class="line">Bitmap bm = <span class="keyword">new</span> Bitmap(width, height);</span><br><span class="line"><span class="built_in">int</span> x, y, z; <span class="comment">//x,y是循环次数,z是用来记录像素点的x坐标的变化的</span></span><br><span class="line">Color pixel;</span><br><span class="line"><span class="keyword">for</span> (y = height - <span class="number">1</span>; y &amp;gt;= <span class="number">0</span>; y--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (x = width - <span class="number">1</span>, z = <span class="number">0</span>; x &amp;gt;= <span class="number">0</span>; x--)</span><br><span class="line">&#123;</span><br><span class="line">pixel = mybm.GetPixel(x, y);<span class="comment">//获取当前像素的值</span></span><br><span class="line">bm.SetPixel(z++, y, Color.FromArgb(pixel.R, pixel.G, pixel.B));<span class="comment">//绘图</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> bm;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">region</span> 上下翻转</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 上下翻转</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span>原始图片 <span class="doctag">///</span>原始图片的长度 <span class="doctag">///</span>原始图片的高度 public Bitmap RevPicUD(Bitmap mybm, int width, int height)</span></span><br><span class="line">&#123;</span><br><span class="line">Bitmap bm = <span class="keyword">new</span> Bitmap(width, height);</span><br><span class="line"><span class="built_in">int</span> x, y, z;</span><br><span class="line">Color pixel;</span><br><span class="line"><span class="keyword">for</span> (x = <span class="number">0</span>; x &amp;lt; width; x++) &#123; <span class="keyword">for</span> (y = height - <span class="number">1</span>, z = <span class="number">0</span>; y &amp;gt;= <span class="number">0</span>; y--)</span><br><span class="line">&#123;</span><br><span class="line">pixel = mybm.GetPixel(x, y);<span class="comment">//获取当前像素的值</span></span><br><span class="line">bm.SetPixel(x, z++, Color.FromArgb(pixel.R, pixel.G, pixel.B));<span class="comment">//绘图</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> bm;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">region</span> 压缩图片</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 压缩到指定尺寸</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span>原文件 <span class="doctag">///</span>新文件 public bool Compress(string oldfile, string newfile)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">System.Drawing.Image img = System.Drawing.Image.FromFile(oldfile);</span><br><span class="line">System.Drawing.Imaging.ImageFormat thisFormat = img.RawFormat;</span><br><span class="line">Size newSize = <span class="keyword">new</span> Size(<span class="number">100</span>, <span class="number">125</span>);</span><br><span class="line">Bitmap outBmp = <span class="keyword">new</span> Bitmap(newSize.Width, newSize.Height);</span><br><span class="line">Graphics g = Graphics.FromImage(outBmp);</span><br><span class="line">g.CompositingQuality = CompositingQuality.HighQuality;</span><br><span class="line">g.SmoothingMode = SmoothingMode.HighQuality;</span><br><span class="line">g.InterpolationMode = InterpolationMode.HighQualityBicubic;</span><br><span class="line">g.DrawImage(img, <span class="keyword">new</span> Rectangle(<span class="number">0</span>, <span class="number">0</span>, newSize.Width, newSize.Height), <span class="number">0</span>, <span class="number">0</span>, img.Width, img.Height, GraphicsUnit.Pixel);</span><br><span class="line">g.Dispose();</span><br><span class="line">EncoderParameters encoderParams = <span class="keyword">new</span> EncoderParameters();</span><br><span class="line"><span class="built_in">long</span>[] quality = <span class="keyword">new</span> <span class="built_in">long</span>[<span class="number">1</span>];</span><br><span class="line">quality[<span class="number">0</span>] = <span class="number">100</span>;</span><br><span class="line">EncoderParameter encoderParam = <span class="keyword">new</span> EncoderParameter(System.Drawing.Imaging.Encoder.Quality, quality);</span><br><span class="line">encoderParams.Param[<span class="number">0</span>] = encoderParam;</span><br><span class="line">ImageCodecInfo[] arrayICI = ImageCodecInfo.GetImageEncoders();</span><br><span class="line">ImageCodecInfo jpegICI = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> x = <span class="number">0</span>; x &amp;lt; arrayICI.Length; x++)</span><br><span class="line"><span class="keyword">if</span> (arrayICI[x].FormatDescription.Equals(<span class="string">&quot;JPEG&quot;</span>))</span><br><span class="line">&#123;</span><br><span class="line">jpegICI = arrayICI[x]; <span class="comment">//设置JPEG编码</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">img.Dispose();</span><br><span class="line"><span class="keyword">if</span> (jpegICI != <span class="literal">null</span>) outBmp.Save(newfile, System.Drawing.Imaging.ImageFormat.Jpeg);</span><br><span class="line">outBmp.Dispose();</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">region</span> 图片灰度化</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Color <span class="title">Gray</span>(<span class="params">Color c</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">int</span> rgb = Convert.ToInt32((<span class="built_in">double</span>)(((<span class="number">0.3</span> * c.R) + (<span class="number">0.59</span> * c.G)) + (<span class="number">0.11</span> * c.B)));</span><br><span class="line"><span class="keyword">return</span> Color.FromArgb(rgb, rgb, rgb);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">region</span> 转换为黑白图片</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 转换为黑白图片</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span>要进行处理的图片 <span class="doctag">///</span>图片的长度 <span class="doctag">///</span>图片的高度 public Bitmap BWPic(Bitmap mybm, int width, int height)</span></span><br><span class="line">&#123;</span><br><span class="line">Bitmap bm = <span class="keyword">new</span> Bitmap(width, height);</span><br><span class="line"><span class="built_in">int</span> x, y, result; <span class="comment">//x,y是循环次数，result是记录处理后的像素值</span></span><br><span class="line">Color pixel;</span><br><span class="line"><span class="keyword">for</span> (x = <span class="number">0</span>; x &amp;lt; width; x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (y = <span class="number">0</span>; y &amp;lt; height; y++)</span><br><span class="line">&#123;</span><br><span class="line">pixel = mybm.GetPixel(x, y);<span class="comment">//获取当前坐标的像素值</span></span><br><span class="line">result = (pixel.R + pixel.G + pixel.B) / <span class="number">3</span>;<span class="comment">//取红绿蓝三色的平均值</span></span><br><span class="line">bm.SetPixel(x, y, Color.FromArgb(result, result, result));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> bm;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">region</span> 获取图片中的各帧</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 获取图片中的各帧</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span>图片路径 <span class="doctag">///</span>保存路径 public void GetFrames(string pPath, string pSavedPath)</span></span><br><span class="line">&#123;</span><br><span class="line">Image gif = Image.FromFile(pPath);</span><br><span class="line">FrameDimension fd = <span class="keyword">new</span> FrameDimension(gif.FrameDimensionsList[<span class="number">0</span>]);</span><br><span class="line"><span class="built_in">int</span> count = gif.GetFrameCount(fd); <span class="comment">//获取帧数(gif图片可能包含多帧，其它格式图片一般仅一帧)</span></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &amp;lt; count; i++)    <span class="comment">//以Jpeg格式保存各帧</span></span><br><span class="line">&#123;</span><br><span class="line">gif.SelectActiveFrame(fd, i);</span><br><span class="line">gif.Save(pSavedPath + <span class="string">&quot;\\frame_&quot;</span> + i + <span class="string">&quot;.jpg&quot;</span>, ImageFormat.Jpeg);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JSON序列化和JSON反序列化和ajax一直返回error的解决方案</title>
      <link href="/RookieRoom/2020/08/12/-sBSOb8Xu/"/>
      <url>/RookieRoom/2020/08/12/-sBSOb8Xu/</url>
      
        <content type="html"><![CDATA[<p>一、JSON.stringify()序列化和JSON.parse()反序列化</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> K = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data);<span class="comment">//JSON.stringify() 将JavaScript 对象转换为 JSON 字符</span></span><br><span class="line"><span class="title function_">alert</span>(K);</span><br><span class="line"><span class="keyword">var</span> data1 = <span class="string">&#x27;&#123;&quot;name&quot;:&quot;chunlynn&quot; ,&quot;age&quot;: 27, &quot;sex&quot;: &quot;man&quot; ,&quot;qq&quot;:&quot;277539687&quot;&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> <span class="title class_">Kx</span> = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(K);<span class="comment">//JSON.parse()将JSON字符串转为一个对象</span></span><br><span class="line">layer.<span class="title function_">alert</span>(<span class="title class_">Kx</span>[<span class="number">0</span>][<span class="string">&#x27;id&#x27;</span>] + <span class="title class_">Kx</span>[<span class="number">0</span>][<span class="string">&#x27;username&#x27;</span>]);</span><br></pre></td></tr></table></figure><span id="more"></span><p>二、ajax的注意事项</p><blockquote><p>简单来说就是，在用ajax提交数据后，获取返回的结果，一定要保证后台返回时，尽量全部代码在异常处理代码中，设置出现异常返回提醒或者其他东西，不然一旦你一点代码出问题，哪怕接收的参数处理出现问题，ajax都会因为得不到后台处理该异常，一直返回error</p></blockquote><p>前台：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">$.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">                    <span class="comment">//几个参数需要注意一下</span></span><br><span class="line">                    <span class="attr">type</span>: <span class="string">&quot;post&quot;</span>,<span class="comment">//方法类型</span></span><br><span class="line">                    <span class="attr">url</span>: <span class="string">&quot;/Home/Add/&quot;</span>,<span class="comment">//url</span></span><br><span class="line">                    <span class="attr">data</span>: &#123; <span class="string">&quot;json&quot;</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data.<span class="property">field</span>) &#125;,</span><br><span class="line">                    <span class="attr">dataType</span>: <span class="string">&#x27;text&#x27;</span>,</span><br><span class="line">                    <span class="attr">async</span>: <span class="literal">false</span>,</span><br><span class="line">                    <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">result</span>) &#123;</span><br><span class="line">                        <span class="variable language_">console</span>.<span class="title function_">log</span>(result);<span class="comment">//打印服务端返回的数据(调试用)</span></span><br><span class="line">                        <span class="keyword">if</span> (<span class="string">&quot;&quot;</span> != result) &#123;</span><br><span class="line">                            <span class="keyword">if</span> (index == <span class="literal">null</span>) &#123;</span><br><span class="line">                                <span class="title function_">alert</span>(<span class="string">&#x27;失败，失败原因：&#x27;</span> + result);</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">else</span> &#123;</span><br><span class="line">                            parent.<span class="property">layer</span>.<span class="title function_">msg</span>(<span class="string">&#x27;失败，失败原因：&#x27;</span> + result, &#123; <span class="attr">time</span>: <span class="number">1000</span>,<span class="attr">shade</span>: <span class="number">0.3</span> &#125;)</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="keyword">if</span> (index == <span class="literal">null</span>) &#123;</span><br><span class="line">                                <span class="title function_">alert</span>(<span class="string">&#x27;添加成功&#x27;</span> + result)</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">else</span> &#123;</span><br><span class="line">                                parent.<span class="property">layer</span>.<span class="title function_">msg</span>(<span class="string">&#x27;添加成功&#x27;</span> + result, &#123; <span class="attr">time</span>: <span class="number">1000</span>, <span class="attr">shade</span>: <span class="number">0.3</span> &#125;)</span><br><span class="line">                            &#125;</span><br><span class="line">                            </span><br><span class="line">                           <span class="comment">// window.location.replace(&quot;AddPage&quot;);</span></span><br><span class="line">                            <span class="comment">//同步更新表格和缓存对应的值 </span></span><br><span class="line">                        &#125;;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="attr">error</span>: <span class="keyword">function</span> (<span class="params">error</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (index == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="title function_">alert</span>(<span class="string">&#x27;请稍后再试&#x27;</span>)</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span> &#123;</span><br><span class="line">                            parent.<span class="property">layer</span>.<span class="title function_">msg</span>(<span class="string">&#x27;请稍后再试&#x27;</span>, &#123; <span class="attr">time</span>: <span class="number">1000</span>, <span class="attr">shade</span>: <span class="number">0.3</span> &#125;)</span><br><span class="line">                        &#125;                </span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br></pre></td></tr></table></figure><p>后台：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 添加</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">Add</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> bug = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">try</span>  <span class="comment">//一定要加这个</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">string</span> json = Request.Form[<span class="string">&quot;json&quot;</span>];</span><br><span class="line">           Newtonsoft.Json.Linq.JObject jobject =<span class="comment">//这里解析出问题也会报错，可以建个新页面测试功能，查找bug</span></span><br><span class="line">                   (Newtonsoft.Json.Linq.JObject)Newtonsoft.Json.JsonConvert.DeserializeObject(json);</span><br><span class="line"></span><br><span class="line">                <span class="built_in">string</span> name = jobject[<span class="string">&quot;username&quot;</span>].ToString();</span><br><span class="line">                <span class="built_in">string</span> sex = jobject[<span class="string">&quot;sex&quot;</span>].ToString();</span><br><span class="line">                <span class="built_in">string</span> Province = jobject[<span class="string">&quot;Province&quot;</span>].ToString();</span><br><span class="line">                <span class="built_in">string</span> City = jobject[<span class="string">&quot;City&quot;</span>].ToString();</span><br><span class="line">                <span class="built_in">string</span> Counties = jobject[<span class="string">&quot;Counties&quot;</span>].ToString();<span class="comment">//就像我这里出了问题一直报错</span></span><br><span class="line">                <span class="built_in">string</span> Sign = jobject[<span class="string">&quot;Sign&quot;</span>].ToString();</span><br><span class="line">                <span class="built_in">int</span> Experience = Convert.ToInt32(jobject[<span class="string">&quot;Experience&quot;</span>]);</span><br><span class="line">                <span class="built_in">int</span> Score = Convert.ToInt32(jobject[<span class="string">&quot;Score&quot;</span>]); ;</span><br><span class="line">                <span class="built_in">int</span> Classify = Convert.ToInt32(jobject[<span class="string">&quot;Classify&quot;</span>]);</span><br><span class="line">             </span><br><span class="line">                <span class="keyword">if</span> (SQL.Add(name, sex, Province, City, Counties, Sign, Experience, Score, Classify, <span class="keyword">out</span> bug))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span> bug;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span> bug;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (Exception)</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;检查表单格式&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">           </span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> 前端 </tag>
            
            <tag> javascript </tag>
            
            <tag> html </tag>
            
            <tag> Json </tag>
            
            <tag> 有趣的编程知识 </tag>
            
            <tag> mvc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c#压缩图片</title>
      <link href="/RookieRoom/2020/07/16/FkjvP9E8C/"/>
      <url>/RookieRoom/2020/07/16/FkjvP9E8C/</url>
      
        <content type="html"><![CDATA[<h2 id="代码如下："><a href="#代码如下：" class="headerlink" title="代码如下："></a>代码如下：</h2><span id="more"></span><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Drawing.Imaging;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Net;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Image_Compression</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Image_Compression</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&amp;nbsp;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//原图片路径</span></span><br><span class="line"><span class="built_in">string</span> OldImgPath = <span class="string">@&quot;C:\Users\98468\Desktop\tu\&quot;</span>;</span><br><span class="line"><span class="comment">//保存压缩后图片路径</span></span><br><span class="line"><span class="built_in">string</span> NewImgPath = <span class="string">@&quot;C:\Users\98468\Desktop\su\&quot;</span>;</span><br><span class="line"><span class="comment">//压缩质量（数字越小压缩率越高）1-100</span></span><br><span class="line"><span class="built_in">int</span> ImgQuality = <span class="number">90</span>;</span><br><span class="line"><span class="comment">//压缩图片最大大小</span></span><br><span class="line"><span class="built_in">int</span> ImgSize = <span class="number">200</span>;</span><br><span class="line"><span class="comment">//最大分辨率高 默认是0</span></span><br><span class="line"><span class="built_in">int</span> resolution_Max_H = <span class="number">1024</span>;</span><br><span class="line"><span class="comment">//最大分辨率宽 默认是0</span></span><br><span class="line"><span class="built_in">int</span> resolution_Max_W = <span class="number">1024</span>;</span><br><span class="line"><span class="comment">//调用压缩图片方法</span></span><br><span class="line">Image_Compression_Main(OldImgPath, NewImgPath, ImgSize, ImgQuality, resolution_Max_H, resolution_Max_W);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"><span class="doctag">///</span> &amp;lt;summary&amp;gt;</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 压缩图片</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> &amp;lt;/summary&amp;gt;</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> &amp;lt;param name=&quot;OldImgPath&quot;&amp;gt;原图片路径&amp;lt;/param&amp;gt;</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> &amp;lt;param name=&quot;NewImgPath&quot;&amp;gt;保存压缩后图片路径&amp;lt;/param&amp;gt;</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> &amp;lt;param name=&quot;ImgSize&quot;&amp;gt;压缩图片最大大小&amp;lt;/param&amp;gt;</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> &amp;lt;param name=&quot;ImgQuality&quot;&amp;gt;压缩质量（数字越小压缩率越高）1-100&amp;lt;/param&amp;gt;</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> &amp;lt;param name=&quot;resolution_Max_H&quot;&amp;gt;最大分辨率高 默认是0&amp;lt;/param&amp;gt;</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> &amp;lt;param name=&quot;resolution_Max_W&quot;&amp;gt;最大分辨率宽 默认是0&amp;lt;/param&amp;gt;</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Image_Compression_Main</span>(<span class="params"><span class="built_in">string</span> OldImgPath, <span class="built_in">string</span> NewImgPath, <span class="built_in">int</span> ImgSize, <span class="built_in">int</span> ImgQuality = <span class="number">90</span>, <span class="built_in">int</span> resolution_Max_H = <span class="number">0</span>, <span class="built_in">int</span> resolution_Max_W = <span class="number">0</span></span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//获取图片文件路径</span></span><br><span class="line">DirectoryInfo path = <span class="keyword">new</span> DirectoryInfo(OldImgPath);</span><br><span class="line"><span class="comment">//遍历指定路径目录下文件</span></span><br><span class="line"><span class="keyword">foreach</span> (FileInfo File <span class="keyword">in</span> path.GetFiles())</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//规定输入文件格式</span></span><br><span class="line"><span class="keyword">if</span> (File.Extension == <span class="string">&quot;.Png&quot;</span> || File.Extension == <span class="string">&quot;.png&quot;</span> || File.Extension == <span class="string">&quot;.Jpg&quot;</span> || File.Extension == <span class="string">&quot;.jpg&quot;</span> || File.Extension == <span class="string">&quot;.JPEG&quot;</span> || File.Extension == <span class="string">&quot;.jpeg&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//分辨率处理</span></span><br><span class="line"><span class="built_in">int</span> resolution_Min_Multiple = <span class="number">2</span>;</span><br><span class="line"><span class="comment">//拼接具体的文件路径</span></span><br><span class="line"><span class="built_in">string</span> FilePath = OldImgPath + File.Name;</span><br><span class="line"><span class="comment">//文件大小</span></span><br><span class="line"><span class="built_in">double</span> FileSize = GetFileSize(FilePath);</span><br><span class="line">Console.WriteLine(FileSize);</span><br><span class="line"><span class="keyword">if</span> (<span class="number">1</span> - FileSize &amp;lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ((<span class="number">1</span> - (FileSize / <span class="number">100</span>))<span class="number">-1</span> &amp;lt; <span class="number">-10</span>)<span class="comment">//1000MB之外</span></span><br><span class="line">&#123;</span><br><span class="line">Console.WriteLine(<span class="string">$@&quot;图片:&#x27;<span class="subst">&#123;FilePath&#125;</span>&#x27;太大了！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> ((<span class="number">1</span> - (FileSize / <span class="number">100</span>)) &amp;lt;= <span class="number">0</span> &amp;amp;&amp;amp; (<span class="number">1</span> - (FileSize / <span class="number">100</span>))<span class="number">-1</span> &amp;gt; <span class="number">-10</span>)<span class="comment">//1000MB之内</span></span><br><span class="line">&#123;</span><br><span class="line">resolution_Min_Multiple = <span class="number">16</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> ((<span class="number">1</span> - (FileSize / <span class="number">10</span>)) &amp;lt;= <span class="number">0</span> &amp;amp;&amp;amp; (<span class="number">1</span> - (FileSize / <span class="number">10</span>))<span class="number">-1</span> &amp;gt; <span class="number">-10</span>)<span class="comment">//100以内</span></span><br><span class="line">&#123;</span><br><span class="line">resolution_Min_Multiple = <span class="number">8</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> ((<span class="number">1</span> - FileSize) &amp;lt;= <span class="number">0</span> &amp;amp;&amp;amp; (<span class="number">1</span> - FileSize)<span class="number">-1</span> &amp;lt; <span class="number">-1</span>)<span class="comment">//10以内</span></span><br><span class="line">&#123;</span><br><span class="line">resolution_Min_Multiple = <span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (FileSize &amp;lt; ImgSize /<span class="number">1024</span>)<span class="comment">//如果太小则不压缩直接传递</span></span><br><span class="line">&#123;</span><br><span class="line">File.CopyTo(NewImgPath+Path.GetFileNameWithoutExtension(File.Name)+<span class="string">&quot;.jpg&quot;</span>,<span class="literal">true</span>);</span><br><span class="line">Console.WriteLine(<span class="string">$@&quot;图片:&#x27;<span class="subst">&#123;File.Name&#125;</span>&#x27;压缩完成！&quot;</span>);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判断文件大小，确定是否压缩，如果大小满足则直接保存到新路径，如果不满足则进行压缩操作</span></span><br><span class="line"><span class="keyword">if</span> (CompressImage(FilePath, NewImgPath + Path.GetFileNameWithoutExtension(File.Name) + <span class="string">&quot;.jpg&quot;</span>, resolution_Max_H, resolution_Max_W, resolution_Min_Multiple, ImgQuality, ImgSize))<span class="comment">//压缩成功</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">Console.WriteLine(<span class="string">$@&quot;图片:&#x27;<span class="subst">&#123;File.Name&#125;</span>&#x27;压缩完成！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="comment">//压缩失败</span></span><br><span class="line">&#123;</span><br><span class="line">Console.WriteLine(<span class="string">$@&quot;图片:&#x27;<span class="subst">&#123;File.Name&#125;</span>&#x27;压缩失败！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"><span class="doctag">///</span> &amp;lt;summary&amp;gt;</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 获取图片文件大小</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> &amp;lt;/summary&amp;gt;</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> &amp;lt;param name=&quot;path&quot;&amp;gt;图片路径&amp;lt;/param&amp;gt;</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> &amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt;</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">double</span> <span class="title">GetFileSize</span>(<span class="params"><span class="built_in">string</span> path</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">System.IO.FileInfo fileInfo = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">fileInfo = <span class="keyword">new</span> System.IO.FileInfo(path);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception e)</span><br><span class="line">&#123;</span><br><span class="line">Console.WriteLine(<span class="string">$@&quot;获取图片<span class="subst">&#123;path&#125;</span>大小失败 Getcatch&quot;</span>);</span><br><span class="line">Console.WriteLine(e);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (fileInfo != <span class="literal">null</span> &amp;amp;&amp;amp; fileInfo.Exists)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//所得文件MB大小</span></span><br><span class="line"><span class="built_in">double</span> Length = (System.Math.Floor(fileInfo.Length / <span class="number">1024.0</span> / <span class="number">1024.0</span>) + System.Math.Floor(fileInfo.Length / <span class="number">1024.0</span> % <span class="number">1024.0</span> / <span class="number">10</span>) / <span class="number">100</span>);</span><br><span class="line"><span class="keyword">if</span> (Length &amp;gt; <span class="number">1000</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> Length;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">Console.WriteLine(<span class="string">$@&quot;获取图片<span class="subst">&#123;path&#125;</span>大小失败 Getelse&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"><span class="doctag">///</span> &amp;lt;summary&amp;gt;</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 无损压缩图片</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> &amp;lt;/summary&amp;gt;</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> &amp;lt;param name=&quot;sFile&quot;&amp;gt;原图片地址&amp;lt;/param&amp;gt;</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> &amp;lt;param name=&quot;dFile&quot;&amp;gt;保存压缩后图片路径&amp;lt;/param&amp;gt;</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> &amp;lt;param name=&quot;resolution_Max_H&quot;&amp;gt;最大分辨率高&amp;lt;/param&amp;gt;</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> &amp;lt;param name=&quot;resolution_Max_W&quot;&amp;gt;最大分辨率宽&amp;lt;/param&amp;gt;</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> &amp;lt;param name=&quot;resolution_Min_Multiple&quot;&amp;gt;分辨率缩小倍数&amp;lt;/param&amp;gt;</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> &amp;lt;param name=&quot;flag&quot;&amp;gt;压缩质量（数字越小压缩率越高）1-100&amp;lt;/param&amp;gt;</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> &amp;lt;param name=&quot;size&quot;&amp;gt;压缩后图片的最大大小&amp;lt;/param&amp;gt;</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> &amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt;</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="title">CompressImage</span>(<span class="params"><span class="built_in">string</span> sFile, <span class="built_in">string</span> dFile, <span class="built_in">int</span> resolution_Max_H = <span class="number">0</span>, <span class="built_in">int</span> resolution_Max_W = <span class="number">0</span>, <span class="built_in">int</span> resolution_Min_Multiple = <span class="number">1</span>, <span class="built_in">int</span> flag = <span class="number">90</span>, <span class="built_in">int</span> size = <span class="number">300</span></span>)</span></span><br><span class="line">&#123;</span><br><span class="line">Image iSource = Image.FromFile(sFile);</span><br><span class="line">ImageFormat tFormat = iSource.RawFormat;</span><br><span class="line"><span class="meta">#<span class="keyword">region</span> 旧代码</span></span><br><span class="line"><span class="comment">//设置图片高宽</span></span><br><span class="line"><span class="built_in">int</span> dHeight = iSource.Height / resolution_Min_Multiple;<span class="comment">//分辨率高度</span></span><br><span class="line"><span class="built_in">int</span> dWidth = iSource.Width / resolution_Min_Multiple; <span class="comment">//分辨率宽度</span></span><br><span class="line"><span class="comment">//判断是否为手动设置最大分辨率高宽</span></span><br><span class="line"><span class="comment">//判断处理后的分辨率高度是否大于手动设置的分辨率高度,如果大于则设置为指定高度</span></span><br><span class="line"><span class="keyword">if</span> (resolution_Max_H != <span class="number">0</span> &amp;amp;&amp;amp; iSource.Height / resolution_Min_Multiple &amp;gt; resolution_Max_H)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//赋值为手动设置的分辨率的高</span></span><br><span class="line">dHeight = resolution_Max_H;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判断处理后的分辨率宽度是否大于手动设置的分辨率宽度，如果大于则设置为指定宽度</span></span><br><span class="line"><span class="keyword">if</span> (resolution_Max_W != <span class="number">0</span> &amp;amp;&amp;amp; iSource.Width / resolution_Min_Multiple &amp;gt; resolution_Max_W)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//赋值为手动设置的分辨率的宽</span></span><br><span class="line">dWidth = resolution_Max_W;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (resolution_Max_H == <span class="number">0</span> &amp;amp;&amp;amp; resolution_Max_W == <span class="number">0</span>)<span class="comment">//如果为空则继续赋值为原处理后的分辨率高宽</span></span><br><span class="line">&#123;</span><br><span class="line">dHeight = iSource.Height / resolution_Min_Multiple;<span class="comment">//分辨率高度</span></span><br><span class="line">dWidth = iSource.Width / resolution_Min_Multiple; <span class="comment">//分辨率宽度</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">&amp;nbsp;</span><br><span class="line"></span><br><span class="line">Bitmap ob = <span class="keyword">new</span> Bitmap(dWidth, dHeight);</span><br><span class="line">Graphics g = Graphics.FromImage(ob);</span><br><span class="line"></span><br><span class="line">g.Clear(Color.WhiteSmoke);</span><br><span class="line">g.CompositingQuality = System.Drawing.Drawing2D.CompositingQuality.HighQuality;</span><br><span class="line">g.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.HighQuality;</span><br><span class="line">g.InterpolationMode = System.Drawing.Drawing2D.InterpolationMode.HighQualityBicubic;</span><br><span class="line"><span class="comment">//绘制图片</span></span><br><span class="line"><span class="meta">#<span class="keyword">region</span> 旧代码</span></span><br><span class="line">g.DrawImage(iSource, <span class="keyword">new</span> Rectangle(<span class="number">0</span>, <span class="number">0</span>, dWidth, dHeight), <span class="number">0</span>, <span class="number">0</span>, iSource.Width, iSource.Height, GraphicsUnit.Pixel);</span><br><span class="line"><span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">g.Dispose();</span><br><span class="line"></span><br><span class="line"><span class="comment">//以下代码为保存图片时，设置压缩质量</span></span><br><span class="line">EncoderParameters ep = <span class="keyword">new</span> EncoderParameters();</span><br><span class="line"><span class="built_in">long</span>[] qy = <span class="keyword">new</span> <span class="built_in">long</span>[<span class="number">1</span>];</span><br><span class="line">qy[<span class="number">0</span>] = flag;<span class="comment">//设置压缩的比例1-100</span></span><br><span class="line">EncoderParameter eParam = <span class="keyword">new</span> EncoderParameter(System.Drawing.Imaging.Encoder.Quality, qy);</span><br><span class="line">ep.Param[<span class="number">0</span>] = eParam;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">ImageCodecInfo[] arrayICI = ImageCodecInfo.GetImageEncoders();</span><br><span class="line">ImageCodecInfo jpegICIinfo = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> x = <span class="number">0</span>; x &amp;lt; arrayICI.Length; x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (arrayICI[x].FormatDescription.Equals(<span class="string">&quot;JPEG&quot;</span>))</span><br><span class="line">&#123;</span><br><span class="line">jpegICIinfo = arrayICI[x];</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (jpegICIinfo != <span class="literal">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">ob.Save(dFile, jpegICIinfo, ep);<span class="comment">//dFile是压缩后的新路径</span></span><br><span class="line">FileInfo fi = <span class="keyword">new</span> FileInfo(dFile);</span><br><span class="line"><span class="keyword">if</span> (fi.Length &amp;gt; <span class="number">1024</span> * size)</span><br><span class="line">&#123;</span><br><span class="line">flag = flag - <span class="number">10</span>;</span><br><span class="line">CompressImage(sFile, dFile, resolution_Max_H, resolution_Max_W, resolution_Min_Multiple, flag, size);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">ob.Save(dFile, tFormat);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception ex)</span><br><span class="line">&#123;</span><br><span class="line">Console.WriteLine(ex.Message + <span class="string">&quot;,堆栈:&quot;</span> + ex.StackTrace + <span class="string">&quot;InnerException:&quot;</span> + ex.InnerException);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">finally</span></span><br><span class="line">&#123;</span><br><span class="line">iSource.Dispose();</span><br><span class="line">ob.Dispose();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&amp;nbsp;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&amp;nbsp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">A</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main1</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">string</span> pathPerc = <span class="string">@&quot;C:\Users\98468\Desktop\su\1.jpg&quot;</span>;</span><br><span class="line"><span class="built_in">string</span> source = <span class="string">@&quot;C:\Users\98468\Desktop\tu\微信图片_20200723111503.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (!File.Exists(pathPerc))</span><br><span class="line">&#123;</span><br><span class="line">File.Create(pathPerc).Close();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">File.Delete(pathPerc);</span><br><span class="line">File.Create(pathPerc).Close();</span><br><span class="line">&#125;</span><br><span class="line">getThumImage(source, <span class="number">50</span>, <span class="number">2</span>, pathPerc);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">region</span> getThumImage</span></span><br><span class="line"><span class="comment">/**/</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> &amp;lt;summary&amp;gt;</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 生成缩略图</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> &amp;lt;/summary&amp;gt;</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> &amp;lt;param name=&quot;sourceFile&quot;&amp;gt;原始图片文件&amp;lt;/param&amp;gt;</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> &amp;lt;param name=&quot;quality&quot;&amp;gt;质量压缩比&amp;lt;/param&amp;gt;</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> &amp;lt;param name=&quot;multiple&quot;&amp;gt;收缩倍数&amp;lt;/param&amp;gt;</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> &amp;lt;param name=&quot;outputFile&quot;&amp;gt;输出文件名&amp;lt;/param&amp;gt;</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> &amp;lt;returns&amp;gt;成功返回true,失败则返回false&amp;lt;/returns&amp;gt;</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="title">getThumImage</span>(<span class="params">String sourceFile, <span class="built_in">long</span> quality, <span class="built_in">int</span> multiple, String outputFile</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">long</span> imageQuality = quality;</span><br><span class="line">Bitmap sourceImage = <span class="keyword">new</span> Bitmap(sourceFile);</span><br><span class="line">ImageCodecInfo myImageCodecInfo = GetEncoderInfo(<span class="string">&quot;image/jpeg&quot;</span>);</span><br><span class="line">System.Drawing.Imaging.Encoder myEncoder = System.Drawing.Imaging.Encoder.Quality;</span><br><span class="line">EncoderParameters myEncoderParameters = <span class="keyword">new</span> EncoderParameters(<span class="number">1</span>);</span><br><span class="line">EncoderParameter myEncoderParameter = <span class="keyword">new</span> EncoderParameter(myEncoder, imageQuality);</span><br><span class="line">myEncoderParameters.Param[<span class="number">0</span>] = myEncoderParameter;</span><br><span class="line"><span class="built_in">float</span> xWidth = sourceImage.Width;</span><br><span class="line"><span class="built_in">float</span> yWidth = sourceImage.Height;</span><br><span class="line">Bitmap newImage = <span class="keyword">new</span> Bitmap((<span class="built_in">int</span>)(xWidth / multiple), (<span class="built_in">int</span>)(yWidth / multiple));</span><br><span class="line">Graphics g = Graphics.FromImage(newImage);</span><br><span class="line"></span><br><span class="line">g.DrawImage(sourceImage, <span class="number">0</span>, <span class="number">0</span>, xWidth / multiple, yWidth / multiple);</span><br><span class="line">g.Dispose();</span><br><span class="line">newImage.Save(outputFile, myImageCodecInfo, myEncoderParameters);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endregion</span> getThumImage</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**/</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> &amp;lt;summary&amp;gt;</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 获取图片编码信息</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> &amp;lt;/summary&amp;gt;</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> ImageCodecInfo <span class="title">GetEncoderInfo</span>(<span class="params">String mimeType</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">int</span> j;</span><br><span class="line">ImageCodecInfo[] encoders;</span><br><span class="line">encoders = ImageCodecInfo.GetImageEncoders();</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &amp;lt; encoders.Length; ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (encoders[j].MimeType == mimeType)</span><br><span class="line"><span class="keyword">return</span> encoders[j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> 有趣的编程知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c#获取图片文件大小（亦可获取其他文件大小）</title>
      <link href="/RookieRoom/2020/07/16/LkDd9fT3J/"/>
      <url>/RookieRoom/2020/07/16/LkDd9fT3J/</url>
      
        <content type="html"><![CDATA[<h2 id="代码如下："><a href="#代码如下：" class="headerlink" title="代码如下："></a>代码如下：</h2><span id="more"></span> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 获取图片文件大小</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;path&quot;&gt;</span>图片路径<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">double</span> <span class="title">GetFileSize</span>(<span class="params"><span class="built_in">string</span> path</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    System.IO.FileInfo fileInfo = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        fileInfo = <span class="keyword">new</span> System.IO.FileInfo(path);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">$@&quot;获取图片<span class="subst">&#123;path&#125;</span>大小失败 Getcatch&quot;</span>);</span><br><span class="line">        Console.WriteLine(e);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (fileInfo != <span class="literal">null</span> &amp;&amp; fileInfo.Exists)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//if ((int)System.Math.Ceiling(fileInfo.Length / 1024.0) &gt;= 1024)</span></span><br><span class="line">        <span class="comment">//&#123;</span></span><br><span class="line">        <span class="comment">//    Console.WriteLine((System.Math.Floor(fileInfo.Length / 1024.0 / 1024.0) + System.Math.Floor(fileInfo.Length / 1024.0 % 1024.0/10)/100) + &quot;MB&quot;);</span></span><br><span class="line">        <span class="comment">//    return (System.Math.Floor(fileInfo.Length / 1024.0 ) );</span></span><br><span class="line">        <span class="comment">//&#125;</span></span><br><span class="line">        <span class="comment">// Console.WriteLine(System.Math.Ceiling(fileInfo.Length / 1024.0)+&quot;kb&quot;);</span></span><br><span class="line">        <span class="keyword">return</span> System.Math.Ceiling(fileInfo.Length / <span class="number">1024.0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">$@&quot;获取图片<span class="subst">&#123;path&#125;</span>大小失败 Getelse&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> 有趣的编程知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#获取pdf文档的页数</title>
      <link href="/RookieRoom/2020/07/01/nNpEgVB_z/"/>
      <url>/RookieRoom/2020/07/01/nNpEgVB_z/</url>
      
        <content type="html"><![CDATA[<p>[操作pdf文档]之C#判断pdf文档的页数：</p><span id="more"></span><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 获取pdf文档的页数</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;filePath&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>-1表示文件不存在<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> <span class="title">GetPDFofPageCount</span>(<span class="params"><span class="built_in">string</span> filePath</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> count = <span class="number">-1</span>;<span class="comment">//-1表示文件不存在</span></span><br><span class="line">    <span class="keyword">if</span> (File.Exists(filePath))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">using</span> (FileStream fs = <span class="keyword">new</span> FileStream(filePath, FileMode.Open, FileAccess.Read))</span><br><span class="line">        &#123;</span><br><span class="line">            StreamReader reader = <span class="keyword">new</span> StreamReader(fs);</span><br><span class="line">            <span class="comment">//从流的当前位置到末尾读取流</span></span><br><span class="line">            <span class="built_in">string</span> pdfText = reader.ReadToEnd();</span><br><span class="line">            Regex rgx = <span class="keyword">new</span> Regex(<span class="string">@&quot;/Type\s*/Page[^s]&quot;</span>);</span><br><span class="line">            MatchCollection matches = rgx.Matches(pdfText);</span><br><span class="line">            count = matches.Count;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>转自：<a href="https://blog.csdn.net/weixin_34037515/article/details/86193239">https://blog.csdn.net/weixin_34037515&#x2F;article&#x2F;details&#x2F;86193239</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> 有趣的编程知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单使用Tesseract文字识别</title>
      <link href="/RookieRoom/2020/06/12/SVJLeGHuD/"/>
      <url>/RookieRoom/2020/06/12/SVJLeGHuD/</url>
      
        <content type="html"><![CDATA[<h2 id="一-简单使用Tesseract文字识别"><a href="#一-简单使用Tesseract文字识别" class="headerlink" title="一 .简单使用Tesseract文字识别"></a><strong>一 .简单使用Tesseract文字识别</strong></h2><h3 id="1-创建项目"><a href="#1-创建项目" class="headerlink" title="1.创建项目"></a>1.创建项目</h3><p><img src="https://img2018.cnblogs.com/blog/1153773/201905/1153773-20190508142803014-674497751.png" alt="img"></p><span id="more"></span><h3 id="2-引用Tesseract-ocr库"><a href="#2-引用Tesseract-ocr库" class="headerlink" title="2.引用Tesseract-ocr库"></a>2.引用Tesseract-ocr库</h3><p><img src="https://img2018.cnblogs.com/blog/1153773/201905/1153773-20190508142943294-1728988883.png" alt="img"></p><h3 id="3-下载语言文件"><a href="#3-下载语言文件" class="headerlink" title="3.下载语言文件"></a>3.下载语言文件</h3><p> 下载地址 <a href="https://github.com/tesseract-ocr/tesseract/wiki/Data-Files#data-files-for-version-302">https://github.com/tesseract-ocr/tesseract/wiki/Data-Files#data-files-for-version-302</a></p><p> 目前下载中文做实验</p><p>  <img src="https://img2018.cnblogs.com/blog/1153773/201905/1153773-20190508143507243-1565725637.png" alt="img"></p><h3 id="4-代码部分"><a href="#4-代码部分" class="headerlink" title="4.代码部分"></a>4.代码部分</h3><p>static void Main(string[] args)<br>{<br>var img &#x3D; new Bitmap(@”F:\1557288016(1).png”);  &#x2F;&#x2F;需要识别的图片</p><p>&#x2F;&#x2F;F:\test\ConsoleApp1\TesseractDemo\tessdata 为语言包存放路径</p><p>var ocr &#x3D; new TesseractEngine(@”F:\test\ConsoleApp1\TesseractDemo\tessdata”, “chi_sim”, EngineMode.Default);  &#x2F;&#x2F;使用chi_sim中文语言包做测试</p><p>var page &#x3D; ocr.Process(img);<br>Console.Write(page.GetText());<br>Console.ReadKey();</p><p>}</p><h3 id="5-运行结果"><a href="#5-运行结果" class="headerlink" title="5.运行结果"></a>5.运行结果</h3><p>图片：<img src="https://img2018.cnblogs.com/blog/1153773/201905/1153773-20190508144840846-996649405.png" alt="img"></p><p>识别结果：<img src="https://img2018.cnblogs.com/blog/1153773/201905/1153773-20190508144918064-616351977.png" alt="img"></p><p>6.在原图没任何处理 字库没训练下的结果识别率还不是很理想.</p><h2 id="二-使用-jTessBoxEditor-进行简单数训练"><a href="#二-使用-jTessBoxEditor-进行简单数训练" class="headerlink" title="二. 使用 jTessBoxEditor 进行简单数训练"></a><strong>二. 使用 jTessBoxEditor 进行简单数训练</strong></h2><h3 id="1-安装-jTessBoxEditor"><a href="#1-安装-jTessBoxEditor" class="headerlink" title="1.安装 jTessBoxEditor"></a>1.安装 jTessBoxEditor</h3><p> 下载jTessBoxEditor，地址<a href="https://sourceforge.net/projects/vietocr/files/jTessBoxEditor/">https://sourceforge.net/projects/vietocr/files/jTessBoxEditor/</a></p><p>  <img src="https://img2018.cnblogs.com/blog/1153773/201905/1153773-20190508145646924-818208451.png" alt="img"></p><p>  解压后得到jTessBoxEditor</p><p>  <img src="https://img2018.cnblogs.com/blog/1153773/201905/1153773-20190508145748768-50104443.png" alt="img"></p><h3 id="2-由于这是由Java开发的，所以要先安装JRE-这里不阐述"><a href="#2-由于这是由Java开发的，所以要先安装JRE-这里不阐述" class="headerlink" title="2.由于这是由Java开发的，所以要先安装JRE 这里不阐述"></a>2.由于这是由Java开发的，所以要先安装JRE 这里不阐述</h3><h3 id="3-准备样本图片-两个不同字体的字母"><a href="#3-准备样本图片-两个不同字体的字母" class="headerlink" title="3.准备样本图片 两个不同字体的字母"></a>3.准备样本图片 两个不同字体的字母</h3><p>  <img src="https://img2018.cnblogs.com/blog/1153773/201905/1153773-20190508150239099-520003011.png" alt="img"></p><p>  <img src="https://img2018.cnblogs.com/blog/1153773/201905/1153773-20190508150340652-93852914.png" alt="img"></p><h3 id="4-将图片转换成tif-tiff格式-可百度在线图片转换tiff"><a href="#4-将图片转换成tif-tiff格式-可百度在线图片转换tiff" class="headerlink" title="4.将图片转换成tif\tiff格式 可百度在线图片转换tiff**"></a>4.将图片转换成tif\tiff格式 可百度在线图片转换tiff**</h3><p>**</p><p><img src="https://img2018.cnblogs.com/blog/1153773/201905/1153773-20190508150659179-1801374647.png" alt="img"></p><h3 id="5-合并tiff样本图片"><a href="#5-合并tiff样本图片" class="headerlink" title="5.合并tiff样本图片"></a>5.合并tiff样本图片</h3><p> 刚解压的目录找到一个【train.bat】打开 jTessBoxEditor &gt;【Tools】&gt;【Merge TIFF】 打开对话框选择两个tiff样本图片</p><p><img src="https://img2018.cnblogs.com/blog/1153773/201905/1153773-20190508151139481-256332761.png" alt="img"></p><p>点击打开弹出保存合并后图片路径选择 这里我们命名为num.font.exp0.tif</p><p><img src="https://img2018.cnblogs.com/blog/1153773/201905/1153773-20190508151322410-1328446665.png" alt="img"></p><h3 id="6-生成BOX文件"><a href="#6-生成BOX文件" class="headerlink" title="6.生成BOX文件"></a>6.生成BOX文件</h3><p>由于没有设置环境变量暂时把所有样本图片放到jTessBoxEditor\tesseract-ocr 方便cmd命令</p><p><img src="https://img2018.cnblogs.com/blog/1153773/201905/1153773-20190508151701014-704583755.png" alt="img"></p><p>cmd定位到样本图片位置执行 命令：tesseract num.font.exp0.tif num.font.exp0 batch.nochop makebox 出现下面说明成功</p><p><img src="https://img2018.cnblogs.com/blog/1153773/201905/1153773-20190508151843818-17531748.png" alt="img"></p><p>语法说明</p><p>【语法】：tesseract [lang].[fontname].exp[num].tif [lang].[fontname].exp[num] batch.nochop makebox</p><p>【语法】：lang为语言名称，fontname为字体名称，num为序号；在tesseract中，一定要注意格式</p><h3 id="7-定义字符配置文件"><a href="#7-定义字符配置文件" class="headerlink" title="7.定义字符配置文件"></a>7.定义字符配置文件</h3><p>还在在jTessBoxEditor\tesseract-ocr文件夹内，新建一个文本文件，名为font_properties，删掉.txt，用记事本打开，写入内容为：</p><p>font 0 0 0 0 0</p><p> 语法说明</p><p>【语法】：<fontname> <italic> <bold> <fixed> <serif> <fraktur><br>【语法】：fontname为字体名称，italic为斜体，bold为黑体字，<br>fixed为默认字体，serif为衬线字体，fraktur德文黑字体，<br>1和0代表有和无，精细区分时可使用</p><h3 id="8-字符矫正"><a href="#8-字符矫正" class="headerlink" title="8.字符矫正"></a>8.字符矫正</h3><p>打开 jTessBoxEditor&gt;【BOX Editor】&gt; 【Open】，打开num.font.exp0.tif；矫正【Char】上的字符 每页没个样本字体蓝色框都要包含一个完整的字符一一对应</p><p><img src="https://img2018.cnblogs.com/blog/1153773/201905/1153773-20190508152916377-1547831720.png" alt="img"></p><p>调整每页后保存</p><h3 id="9-生成训练字包"><a href="#9-生成训练字包" class="headerlink" title="9.生成训练字包"></a>9.生成训练字包</h3><p>还在在jTessBoxEditor\tesseract-ocr文件夹内，新建一个批处理文件do.bat (命名随意) 内容：**<br>**</p><p>echo Run Tesseract for Training..<br>tesseract.exe num.font.exp0.tif num.font.exp0 nobatch box.train</p><p>echo Compute the Character Set..<br>unicharset_extractor.exe num.font.exp0.box<br>mftraining -F font_properties -U unicharset -O num.unicharset num.font.exp0.tr</p><p>echo Clustering..<br>cntraining.exe num.font.exp0.tr</p><p>echo Rename Files..<br>rename normproto num.normproto<br>rename inttemp num.inttemp<br>rename pffmtable num.pffmtable<br>rename shapetable num.shapetable</p><p>echo Create Tessdata..<br>combine_tessdata.exe num.</p><p>echo. &amp; pause</p><p>然后cmd 执行do.bat文件</p><p><img src="https://img2018.cnblogs.com/blog/1153773/201905/1153773-20190508154124262-7132036.png" alt="img"></p><p>之后生成多个文件</p><p><img src="https://img2018.cnblogs.com/blog/1153773/201905/1153773-20190508154357325-1914830655.png" alt="img"></p><p>红色框框便是我们要的训练库</p><p>最后测试结果 </p><p>var img &#x3D; new Bitmap(@”F:\1557288016(1).png”);<br>var ocr &#x3D; new TesseractEngine(@”F:\test\ConsoleApp1\TesseractDemo\tessdata”, “num”, EngineMode.Default);<br>var page &#x3D; ocr.Process(img);<br>Console.Write(page.GetText());</p><p><img src="https://img2018.cnblogs.com/blog/1153773/201905/1153773-20190508154556318-1059594318.png" alt="img"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Tesseract </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用jTessBoxEditorFX训练字库</title>
      <link href="/RookieRoom/2020/06/12/XCOy2dPpC/"/>
      <url>/RookieRoom/2020/06/12/XCOy2dPpC/</url>
      
        <content type="html"><![CDATA[<p>软件下载：<a href="https://sourceforge.net/projects/vietocr/files/jTessBoxEditor/">https://sourceforge.net/projects/vietocr/files/jTessBoxEditor/</a></p><p>官方字库下载：<a href="https://github.com/tesseract-ocr/tesseract/wiki/Data-Files#format-of-traineddata-files">https://github.com/tesseract-ocr/tesseract/wiki/Data-Files#format-of-traineddata-files</a></p><p>建议：普通版本和FX版本都下载，用普通版本调整坐标，用FX版本调整汉字识别。FX版本的坐标调整不能输入数字，一旦坐标偏移太大，简直就是反人类设计。</p><p>​     另外，也可以直接使用普通版本，虽然在Box Editor页面里看不到汉字，但是可以用Notepad++直接打开box文件进行文字编辑。</p><p>文中用的是FX2.0beta版，有些小问题，但是不影响使用，目前正式版应该是2.2。</p> <span id="more"></span><p>1、点击tools后再点击Merge TIFF，将所需要的图片集转换成tif格式，源图片集格式支持jpg和tif两种。合成的图片集命名格式为[chi_sim].[test].[exp0].tif 第一个空是字典格式，第二个字体（自定义）名字，第三个空位exp[0]。</p><p><img src="https://img2018.cnblogs.com/blog/1410220/201907/1410220-20190702100528189-539552896.png" alt="img"></p><p>2、生成BOX文件，D:\jTessBoxEditorFX\tesseract-ocr\tesseract.exe chi_sim.test.exp0.tif chi_sim.test.exp0 -l chi_sim batch.nochop makebox</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">D:\temp\train2&gt;D:\jTessBoxEditorFX\tesseract-ocr\tesseract.exe chi_sim.test.exp1.tif chi_sim.test.exp1 -l chi_sim batch.nochop makebox</span><br><span class="line">Tesseract Open Source OCR Engine v4.00.00alpha with Leptonica</span><br><span class="line">Page 1</span><br><span class="line">Page 2</span><br><span class="line">Page 3</span><br><span class="line">Page 4</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-l chi_sim参数是使用已经有的中文训练字库</span><br><span class="line">这个字库是在tessdata目录里，可以自己拷贝进去</span><br></pre></td></tr></table></figure><p><img src="https://img2018.cnblogs.com/blog/1410220/201907/1410220-20190702100841739-1450625082.png" alt="img"></p><p>3、调整字体坐标，调整识别错误的汉字。使用open打开刚才生成的tif文件，根据刚才生成的box文件调整字库。这个步骤才是真正核心的步骤，也是最麻烦的地方。</p><p>调整坐标建议使用普通版本，FX版本无法手动调整坐标，不知道是不是故意设置还是BUG。</p><p><img src="https://img2018.cnblogs.com/blog/1410220/201907/1410220-20190702101012708-2051216997.png" alt="img"></p><p>merge合并的时候有几个图片文件，这里就需要按page页分别调整。</p><p>4、调整完成box文件后，就需要生成tr文件<br>D:\jTessBoxEditorFX\tesseract-ocr\tesseract.exe chi_sim.test.exp0.tif chi_sim.test.exp0 nobatch box.train</p><p>5、生成unicharset文件<br>D:\jTessBoxEditorFX\tesseract-ocr\unicharset_extractor.exe chi_sim.test.exp0.box</p><p>6、新建font_properties文件 用记事本新建一个明文font_properties.txt<br>内容格式为test 0 0 0 0 0，test是新建tif中间的内容（chi_sim.test.exp0.tif）。</p><p>7、在分别运行三个命令对tr特征集合进行操作</p><p>生成shape文件<br>D:\jTessBoxEditorFX\tesseract-ocr\shapeclustering.exe -F font_properties.txt -U unicharset chi_sim.test.exp0.tr</p><p>生成聚集字符特征文件<br>D:\jTessBoxEditorFX\tesseract-ocr\Mftraining.exe -F font_properties.txt -U unicharset -O unicharset chi_sim.test.exp0.tr</p><p>生成字符正常化特征文件<br>D:\jTessBoxEditorFX\tesseract-ocr\cntraining.exe chi_sim.test.exp0.tr</p><p>8、重命名把目录下的unicharset、inttemp、pffmtable、shapetable、normproto这五个文件前面都加上test.（就是你的tif中间的名字）</p><p>9、组合文件，成功后会生成test.traineddata训练库文件。</p><p>D:\jTessBoxEditorFX\tesseract-ocr\combine_tessdata test.（后面是有点的）</p><p>10、识别测试，把test.traineddata拷贝到D:\jTessBoxEditorFX\tesseract-ocr\tessdata目录下<br>D:\jTessBoxEditorFX\tesseract-ocr\tesseract chi_sim.test.exp0.tif output -l test</p><p>11、在代码中测试效果，可以全部识别出来，简单的代码之前发过（<a href="https://www.cnblogs.com/asker009/p/11098220.html">java 使用tess4j实现OCR的最简单样例</a>）</p><p><img src="https://img2018.cnblogs.com/blog/1410220/201907/1410220-20190702102524265-69688310.png" alt="img"></p><p><img src="https://img2018.cnblogs.com/blog/1410220/201907/1410220-20190702102547466-1148129948.png" alt="img"></p><p> 12、如果需要识别的图形比较复杂，一般情况下不能对整张图片进行识别，需要把图片分块识别，用代码也好实现，关键是准备阶段划分图片区域比较费事。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">public static void main(String args[]) throws Exception &#123;</span><br><span class="line">       ITesseract instance = new Tesseract();</span><br><span class="line">       instance.setDatapath(&quot;tessdata&quot;); //相对目录，这个时候tessdata目录和src目录平级</span><br><span class="line">       instance.setLanguage(&quot;test&quot;);//选择字库文件（只需要文件名，不需要后缀名）</span><br><span class="line">       try &#123;</span><br><span class="line">           File imageFile = new File(&quot;d:\\temp\\1.jpg&quot;);</span><br><span class="line">           BufferedImage bufferedImage = ImageIO.read(imageFile);</span><br><span class="line">           Rectangle rect = new Rectangle(2581,510,249,196);//按区域读取</span><br><span class="line">           String result2 = instance.doOCR(bufferedImage,rect);</span><br><span class="line">           System.out.println(result2);</span><br><span class="line">       &#125; catch (Exception e) &#123;</span><br><span class="line">           System.out.println(e.toString());</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> jTessBoxEditorFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>调用百度云接口实现文字识别功能</title>
      <link href="/RookieRoom/2020/06/12/37MmJjubk/"/>
      <url>/RookieRoom/2020/06/12/37MmJjubk/</url>
      
        <content type="html"><![CDATA[<h2 id="HTML部分"><a href="#HTML部分" class="headerlink" title="HTML部分"></a>HTML部分</h2><span id="more"></span><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;true&quot; CodeBehind=&quot;Test.aspx.cs&quot; Inherits=&quot;图片文字识别.Test&quot; %&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span> <span class="attr">runat</span>=<span class="string">&quot;server&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=utf-8;application/x-www-form-urlencoded&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">   </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;http://libs.baidu.com/jquery/2.0.0/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">submitXML</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//获取提交的文件</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> fileInput = $(<span class="string">&#x27;#uploading&#x27;</span>).<span class="title function_">get</span>(<span class="number">0</span>).<span class="property">files</span>[<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">/*判断是否选中文件*/</span> </span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (fileInput) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">/*选中后进行提交*/</span></span></span><br><span class="line"><span class="language-javascript">            $(<span class="string">&quot;#form1&quot;</span>).<span class="title function_">submit</span>();</span></span><br><span class="line"><span class="language-javascript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">/*如果没有选中文件进行提示*/</span></span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">alert</span>(<span class="string">&quot;请选择上传文件！&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">&quot;form1&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span> <span class="attr">runat</span>=<span class="string">&quot;server&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;uploading&quot;</span> <span class="attr">id</span>=<span class="string">&quot;uploading&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">name</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;submitXML()&quot;</span>  <span class="attr">value</span>=<span class="string">&quot;上传&quot;</span>  /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>识别到的数据：<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hr</span> /&gt;</span>       </span><br><span class="line">            &lt;%foreach (var item in ImageTxT)</span><br><span class="line">                &#123;%&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>&lt;%=item %&gt;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            &lt;%&#125; %&gt;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="第零步：判断是否提交表单和上传图片保存到服务器文件夹"><a href="#第零步：判断是否提交表单和上传图片保存到服务器文件夹" class="headerlink" title="第零步：判断是否提交表单和上传图片保存到服务器文件夹"></a>第零步：判断是否提交表单和上传图片保存到服务器文件夹</h2><h3 id="1-判断是否提交表单"><a href="#1-判断是否提交表单" class="headerlink" title="1)判断是否提交表单"></a>1)判断是否提交表单</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Test</span> : <span class="title">System.Web.UI.Page</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 识别出来的文字</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> List&lt;<span class="built_in">string</span>&gt; ImageTxT = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">Page_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//判断是否提交表单</span></span><br><span class="line">            <span class="keyword">if</span> (IsPostBack)</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//获取到上传的文件</span></span><br><span class="line">                HttpPostedFile file = Request.Files[<span class="string">&quot;uploading&quot;</span>];</span><br><span class="line">                <span class="comment">//显示识别出来的文字</span></span><br><span class="line">                ImageTxT = Json.Json_ImageTXT_1(ImageFile.File(file));</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="2-上传图片保存到服务器文件夹"><a href="#2-上传图片保存到服务器文件夹" class="headerlink" title="2)上传图片保存到服务器文件夹"></a>2)上传图片保存到服务器文件夹</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">ImageFile</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 上传文件后保存在本地</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;file&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">File</span>(<span class="params">HttpPostedFile file</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            </span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (file.ContentLength &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//3、判断一下文件类型</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">//3.1获取文件的类型</span></span><br><span class="line">                <span class="built_in">string</span> fileName = Path.GetFileName(file.FileName);</span><br><span class="line">                <span class="comment">//获取文件扩展名</span></span><br><span class="line">                <span class="built_in">string</span> fileExt = Path.GetExtension(fileName);</span><br><span class="line">                <span class="comment">//判断文件扩展名是否为jpg后缀  jjpg/jpeg/png/bmp</span></span><br><span class="line">                <span class="keyword">if</span> (fileExt == <span class="string">&quot;.jpg&quot;</span> || fileExt == <span class="string">&quot;.jjpg&quot;</span> || fileExt == <span class="string">&quot;.jpeg&quot;</span> || fileExt == <span class="string">&quot;.png&quot;</span> || fileExt == <span class="string">&quot;.bmp&quot;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//上传上来的文件  名字 文件流MD5值 GUID(全局唯一的标识)</span></span><br><span class="line">                    <span class="built_in">string</span> newFileName = Guid.NewGuid().ToString();</span><br><span class="line">                    <span class="comment">//上传上来的文件 目录  设计分层的结构 日期</span></span><br><span class="line">                    <span class="comment">//string dir = &quot;/FileUP/LoadImage/&quot; + DateTime.Now.Year + &quot;/&quot; + DateTime.Now.Month + &quot;/&quot; + DateTime.Now.Day + &quot;/&quot;;</span></span><br><span class="line">                    <span class="built_in">string</span> dir = <span class="string">&quot;LoadImage/&quot;</span>;</span><br><span class="line">                    <span class="comment"><span class="doctag">///</span>/如果不存在对应日期的文件夹 创建</span></span><br><span class="line">                    <span class="keyword">if</span> (!Directory.Exists(HttpContext.Current.Request.MapPath(dir)))</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="comment">//创建文件夹</span></span><br><span class="line">                        Directory.CreateDirectory(HttpContext.Current.Request.MapPath(dir));</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">//string FullDir = dir + newFileName + fileExt;</span></span><br><span class="line">                    <span class="built_in">string</span> FullDir = dir + newFileName + fileExt;</span><br><span class="line">                    file.SaveAs(HttpContext.Current.Request.MapPath(FullDir));</span><br><span class="line">                    <span class="comment">//保存文件</span></span><br><span class="line">                    <span class="keyword">return</span> FullDir;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    HttpContext.Current.Response.Write(<span class="string">&quot;&lt;script&gt;alert(&#x27;暂不支持该文件类型！&#x27;);&lt;/script&gt;&quot;</span>);</span><br><span class="line">                    <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                HttpContext.Current.Response.Write(<span class="string">&quot;&lt;script&gt;alert(&#x27;请选择图片文件！&#x27;);&lt;/script&gt;&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="第一步：获取TOKEN的json串"><a href="#第一步：获取TOKEN的json串" class="headerlink" title="第一步：获取TOKEN的json串"></a>第一步：获取TOKEN的json串</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 获取TOKEN的json串</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">AccessToken</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 调用getAccessToken()获取的 access_token建议根据expires_in 时间 设置缓存</span></span><br><span class="line">    <span class="comment">// 返回token示例</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 百度云中开通对应服务应用的 API Key 建议开通应用的时候多选服务</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String clientId = <span class="string">&quot;lmpV2HQCskbvhdsP026bCYx3&quot;</span>;</span><br><span class="line">    <span class="comment">// 百度云中开通对应服务应用的 Secret Key</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String clientSecret = <span class="string">&quot;hXiv86Q7hM8sIV4u1oT2bGsEB4OrSYto&quot;</span>;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span>获取TOKEN的json串的方法</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getAccessToken</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        String authHost = <span class="string">&quot;https://aip.baidubce.com/oauth/2.0/token&quot;</span>;</span><br><span class="line">        HttpClient client = <span class="keyword">new</span> HttpClient();</span><br><span class="line">        List&lt;KeyValuePair&lt;String, String&gt;&gt; paraList = <span class="keyword">new</span> List&lt;KeyValuePair&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt;&gt;();</span><br><span class="line">        paraList.Add(<span class="keyword">new</span> KeyValuePair&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt;(<span class="string">&quot;grant_type&quot;</span>, <span class="string">&quot;client_credentials&quot;</span>));</span><br><span class="line">        paraList.Add(<span class="keyword">new</span> KeyValuePair&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt;(<span class="string">&quot;client_id&quot;</span>, clientId));</span><br><span class="line">        paraList.Add(<span class="keyword">new</span> KeyValuePair&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt;(<span class="string">&quot;client_secret&quot;</span>, clientSecret));</span><br><span class="line"></span><br><span class="line">        HttpResponseMessage response = client.PostAsync(authHost, <span class="keyword">new</span> FormUrlEncodedContent(paraList)).Result;</span><br><span class="line">        String result = response.Content.ReadAsStringAsync().Result;</span><br><span class="line">        Console.WriteLine(result);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第二步：解析TOKEN的json串"><a href="#第二步：解析TOKEN的json串" class="headerlink" title="第二步：解析TOKEN的json串"></a>第二步：解析TOKEN的json串</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> token的json串解析</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">Json_token</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//获取到解析好的json串通过实体类使用数据</span></span><br><span class="line">            Jsontoken json = JsonConvert.DeserializeObject&lt;Jsontoken&gt;(AccessToken.getAccessToken());</span><br><span class="line"></span><br><span class="line">            <span class="comment">//返回获取到的 access_token  </span></span><br><span class="line">            <span class="keyword">return</span> json.access_token;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="第三步：把解析好的TOKEN的json串传入文字识别中充当必要参数-获取识别后的json串"><a href="#第三步：把解析好的TOKEN的json串传入文字识别中充当必要参数-获取识别后的json串" class="headerlink" title="第三步：把解析好的TOKEN的json串传入文字识别中充当必要参数,获取识别后的json串"></a>第三步：把解析好的TOKEN的json串传入文字识别中充当必要参数,获取识别后的json串</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">   <span class="comment"><span class="doctag">///</span> 图片文字识别</span></span><br><span class="line">   <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GeneralBasic</span></span><br><span class="line">   &#123;</span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> 进行文字识别</span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">generalBasic</span>(<span class="params"><span class="built_in">string</span> imageName</span>)</span></span><br><span class="line">       &#123;</span><br><span class="line">           <span class="built_in">string</span> token = Json.Json_token();</span><br><span class="line">           <span class="comment">//通用文字识别</span></span><br><span class="line">           <span class="comment">//string host = &quot;https://aip.baidubce.com/rest/2.0/ocr/v1/general_basic?access_token=&quot; + token;</span></span><br><span class="line">           <span class="comment">//通用文字识别 含位置信息版</span></span><br><span class="line">           <span class="comment">//string host = &quot;https://aip.baidubce.com/rest/2.0/ocr/v1/general?access_token=&quot; + token;</span></span><br><span class="line">           <span class="comment">//通用文字识别  高精度版</span></span><br><span class="line">           <span class="comment">//string host = &quot;https://aip.baidubce.com/rest/2.0/ocr/v1/accurate_basic?access_token=&quot; + token;</span></span><br><span class="line">           <span class="comment">//通用文字识别 高精度含位置信息版</span></span><br><span class="line">           <span class="built_in">string</span> host = <span class="string">&quot;https://aip.baidubce.com/rest/2.0/ocr/v1/accurate?access_token=&quot;</span> + token;</span><br><span class="line">           Encoding encoding = Encoding.Default;</span><br><span class="line">           HttpWebRequest request = (HttpWebRequest)WebRequest.Create(host);</span><br><span class="line">           request.Method = <span class="string">&quot;post&quot;</span>;</span><br><span class="line">           request.KeepAlive = <span class="literal">true</span>;</span><br><span class="line">           <span class="comment">// 图片的base64编码</span></span><br><span class="line">           <span class="built_in">string</span> base64 = getFileBase64(System.AppDomain.CurrentDomain.BaseDirectory + imageName);</span><br><span class="line">           String str = <span class="string">&quot;image=&quot;</span> + HttpUtility.UrlEncode(base64);</span><br><span class="line">           <span class="built_in">byte</span>[] buffer = encoding.GetBytes(str);</span><br><span class="line">           request.ContentLength = buffer.Length;</span><br><span class="line">           request.GetRequestStream().Write(buffer, <span class="number">0</span>, buffer.Length);</span><br><span class="line">           HttpWebResponse response = (HttpWebResponse)request.GetResponse();</span><br><span class="line">           <span class="comment">//必须设置该步编码格式，不然会乱码</span></span><br><span class="line">           StreamReader reader = <span class="keyword">new</span> StreamReader(response.GetResponseStream(), Encoding.UTF8);</span><br><span class="line">           <span class="built_in">string</span> result = reader.ReadToEnd();</span><br><span class="line">           </span><br><span class="line">           <span class="keyword">return</span> result;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> 获取图片文件</span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;fileName&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getFileBase64</span>(<span class="params">String fileName</span>)</span></span><br><span class="line">       &#123;</span><br><span class="line">           FileStream filestream = <span class="keyword">new</span> FileStream(fileName, FileMode.Open);</span><br><span class="line">           <span class="built_in">byte</span>[] arr = <span class="keyword">new</span> <span class="built_in">byte</span>[filestream.Length];</span><br><span class="line">           filestream.Read(arr, <span class="number">0</span>, (<span class="built_in">int</span>)filestream.Length);</span><br><span class="line">           <span class="built_in">string</span> baser64 = Convert.ToBase64String(arr);</span><br><span class="line">           filestream.Close();</span><br><span class="line">           <span class="keyword">return</span> baser64;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      </span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="第四步：解析识别后的json串"><a href="#第四步：解析识别后的json串" class="headerlink" title="第四步：解析识别后的json串"></a>第四步：解析识别后的json串</h2><h3 id="1-高低精度-不包括文字位置版"><a href="#1-高低精度-不包括文字位置版" class="headerlink" title="1.高低精度 不包括文字位置版"></a>1.高低精度 不包括文字位置版</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//进行拼接解析好的数据，返回输出</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;<span class="built_in">string</span>&gt; <span class="title">Json_ImageTXT</span>(<span class="params"><span class="built_in">string</span> imageName</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            JsonImageTXT json = JsonConvert.DeserializeObject&lt;JsonImageTXT&gt;(GeneralBasic.generalBasic(imageName));</span><br><span class="line"></span><br><span class="line">            <span class="comment">//输出需要的数据</span></span><br><span class="line">            <span class="comment">//StringBuilder ImageTXT_Str = null;</span></span><br><span class="line">            List&lt;<span class="built_in">string</span>&gt; ImageTXT_Str = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;();</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; json.words_result.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                ImageTXT_Str.Add( json.words_result[i].words);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> ImageTXT_Str;</span><br><span class="line">        &#125;</span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 不包含位置信息</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">JsonImageTXT</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span>唯一的log id，用于问题定位</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> log_id &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 识别结果数，表示words_result的元素个数</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> words_result_num &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 识别结果数组</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> List&lt;WordsResult&gt; words_result &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">WordsResult</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 识别结果字符串</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> words &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-高低精度-含文字位置版"><a href="#2-高低精度-含文字位置版" class="headerlink" title="2.高低精度 含文字位置版"></a>2.高低精度 含文字位置版</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//进行拼接解析好的数据，返回输出（高低精度 含文字位置版）</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;<span class="built_in">string</span>&gt; <span class="title">Json_ImageTXT_1</span>(<span class="params"><span class="built_in">string</span> imageName</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            JsonImageTXT_1 json = JsonConvert.DeserializeObject&lt;JsonImageTXT_1&gt;(GeneralBasic.generalBasic(imageName));</span><br><span class="line"></span><br><span class="line">            List&lt;<span class="built_in">string</span>&gt; ImageTXT_Str_1 = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;();</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; json.words_result.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                ImageTXT_Str_1.Add(json.words_result[i].words+</span><br><span class="line">                    <span class="string">&quot;\r 高度：&quot;</span> + </span><br><span class="line">                    json.words_result[i].location.height + </span><br><span class="line">                    <span class="string">&quot;\r 宽度：&quot;</span> + </span><br><span class="line">                    json.words_result[i].location.width + </span><br><span class="line">                    <span class="string">&quot;\r 左间距：&quot;</span> + </span><br><span class="line">                    json.words_result[i].location.left + </span><br><span class="line">                    <span class="string">&quot;\r 上间距：&quot;</span> + </span><br><span class="line">                    json.words_result[i].location.top);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> ImageTXT_Str_1;</span><br><span class="line">        &#125;</span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 含位置信息版</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">JsonImageTXT_1</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 唯一的log id，用于问题定位</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> log_id &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 识别结果数，表示words_result的元素个数</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> words_result_num &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 识别结果数组</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> List&lt;_Words_result&gt; words_result &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> _<span class="title">Words_result</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 文字位置</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> _location location &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 识别结果字符串</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> words &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> _<span class="title">location</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 宽度</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> width &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 上间距</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> top &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 左间距</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> left &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 高度</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> height &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> 有趣的编程知识 </tag>
            
            <tag> 文字识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c#连接web接口上传图片</title>
      <link href="/RookieRoom/2020/06/12/UR6JXKE2l/"/>
      <url>/RookieRoom/2020/06/12/UR6JXKE2l/</url>
      
        <content type="html"><![CDATA[<h2 id="代码如下："><a href="#代码如下：" class="headerlink" title="代码如下："></a>代码如下：</h2><span id="more"></span><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span>&#123;  </span><br><span class="line">Uri host = <span class="keyword">new</span> Uri(<span class="string">&quot;http://192.168.3.180:8089/api/tr-run/&quot;</span>);</span><br><span class="line">                    Encoding encoding = Encoding.Default;</span><br><span class="line">                    HttpWebRequest request = (HttpWebRequest)WebRequest.Create(host);</span><br><span class="line">                    <span class="built_in">string</span> base64 = getFileBase64(<span class="string">@&quot;C:\Users\98468\Desktop\图片识别\5.png&quot;</span>);</span><br><span class="line">                    request.Method = <span class="string">&quot;post&quot;</span>;</span><br><span class="line">                    request.ContentType = <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>;</span><br><span class="line">                    request.KeepAlive = <span class="literal">true</span>;</span><br><span class="line">                    <span class="comment">// 图片的base64编码</span></span><br><span class="line">                    <span class="built_in">string</span> str = <span class="string">&quot;img=&quot;</span> + HttpUtility.UrlEncode(base64);</span><br><span class="line">                    <span class="built_in">byte</span>[] buffer = encoding.GetBytes(str);</span><br><span class="line">                    request.ContentLength = buffer.Length;</span><br><span class="line">                    request.GetRequestStream().Write(buffer, <span class="number">0</span>, buffer.Length);</span><br><span class="line">                    HttpWebResponse response = (HttpWebResponse)request.GetResponse();</span><br><span class="line">                    StreamReader reader = <span class="keyword">new</span> StreamReader(response.GetResponseStream(), Encoding.UTF8);</span><br><span class="line">                    <span class="built_in">string</span> result = reader.ReadToEnd();</span><br><span class="line">                    Console.WriteLine(result);</span><br><span class="line">&#125;</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  <span class="built_in">string</span> <span class="title">getFileBase64</span>(<span class="params">String fileName</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            FileStream filestream = <span class="keyword">new</span> FileStream(fileName, FileMode.Open);</span><br><span class="line">            <span class="built_in">byte</span>[] arr = <span class="keyword">new</span> <span class="built_in">byte</span>[filestream.Length];</span><br><span class="line">            filestream.Read(arr, <span class="number">0</span>, (<span class="built_in">int</span>)filestream.Length);</span><br><span class="line">            <span class="built_in">string</span> baser64 = Convert.ToBase64String(arr);</span><br><span class="line">            filestream.Close();</span><br><span class="line">            <span class="keyword">return</span> baser64;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> 有趣的编程知识 </tag>
            
            <tag> 文字识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>字符串转换为Unicode格式</title>
      <link href="/RookieRoom/2020/06/12/12aI-D5r8/"/>
      <url>/RookieRoom/2020/06/12/12aI-D5r8/</url>
      
        <content type="html"><![CDATA[<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">Unicode2String</span>(<span class="params"><span class="built_in">string</span> source</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">new</span> Regex(<span class="string">@&quot;\\u([0-9A-F]&#123;4&#125;)&quot;</span>, RegexOptions.IgnoreCase | RegexOptions.Compiled).Replace(</span><br><span class="line">                       source, x =&gt; <span class="built_in">string</span>.Empty + Convert.ToChar(Convert.ToUInt16(x.Result(<span class="string">&quot;$1&quot;</span>), <span class="number">16</span>)));</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> 有趣的编程知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>json解析（可以解决奇怪的json串）</title>
      <link href="/RookieRoom/2020/06/12/JEceyFXKd/"/>
      <url>/RookieRoom/2020/06/12/JEceyFXKd/</url>
      
        <content type="html"><![CDATA[<p>需要先引用     Newtonsoft.Json.dll</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Test_json</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> a = <span class="string">&quot;&#123;\&quot;input\&quot;:&#123;\&quot;size\&quot;:193156,\&quot;type\&quot;:\&quot;image/png\&quot;&#125;,\&quot;output\&quot;:&#123;\&quot;size\&quot;:59646,\&quot;type\&quot;:\&quot;image/png\&quot;,\&quot;width\&quot;:487,\&quot;height\&quot;:284,\&quot;ratio\&quot;:0.3088,\&quot;url\&quot;:\&quot;https://api.tinify.com/output/hrqtghqtv0ab4qgv.png\&quot;&#125;&#125;&quot;</span>;</span><br><span class="line">            <span class="comment">//Console.WriteLine(a);</span></span><br><span class="line">            Newtonsoft.Json.Linq.JObject jobject =</span><br><span class="line">                (Newtonsoft.Json.Linq.JObject)Newtonsoft.Json.JsonConvert.DeserializeObject(a);</span><br><span class="line">            <span class="built_in">string</span> input_size = Convert.ToString(jobject[<span class="string">&quot;output&quot;</span>]);</span><br><span class="line">            Console.WriteLine(input_size);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> Json </tag>
            
            <tag> 有趣的编程知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c#获取图像旋转任意角度并保存文件</title>
      <link href="/RookieRoom/2020/06/12/yjaty2DRD/"/>
      <url>/RookieRoom/2020/06/12/yjaty2DRD/</url>
      
        <content type="html"><![CDATA[<h2 id="代码如下："><a href="#代码如下：" class="headerlink" title="代码如下："></a>代码如下：</h2><span id="more"></span><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> Newtonsoft.Json;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Web;</span><br><span class="line"><span class="keyword">using</span> System.Drawing.Imaging;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Test1</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> Bitmap _origImg;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            ImagePath(<span class="string">@&quot;C:\Users\98468\Desktop\图片识别\55.png&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ImagePath</span>(<span class="params"><span class="built_in">string</span> ImgPath</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//获取到图像副本</span></span><br><span class="line">                _origImg = (Bitmap)Image.FromFile(ImgPath).Clone();</span><br><span class="line"></span><br><span class="line">                <span class="built_in">string</span> name = Path.GetFileNameWithoutExtension(ImgPath);</span><br><span class="line">                <span class="comment">//获取到有扩展名得图像文件名</span></span><br><span class="line">                <span class="built_in">string</span> name_path = Path.GetFileName(ImgPath);</span><br><span class="line">                <span class="comment">//获取到图片得扩展名后缀</span></span><br><span class="line">                <span class="built_in">string</span> path=  Path.GetExtension(ImgPath);</span><br><span class="line">                ImageRotate(<span class="number">1</span>, name,path);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> &#123; &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ImageRotate</span>(<span class="params"><span class="built_in">int</span> SelectedIndex,<span class="built_in">string</span> name,<span class="built_in">string</span> path</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                Bitmap bmp;</span><br><span class="line">                BitmapFlip(_origImg, SelectedIndex, <span class="keyword">out</span> bmp);</span><br><span class="line">                <span class="comment">//翻转后得结果</span></span><br><span class="line">                Image image = bmp;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">var</span> A = ImageFormat.Png;</span><br><span class="line">                SaveToFile1(image, name + path, <span class="literal">true</span>, A);</span><br><span class="line">                <span class="built_in">string</span> Text = <span class="string">&quot;当前序号：&quot;</span> + SelectedIndex.ToString();</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> &#123; &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 图像翻转，基于图像中心</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">BitmapFlip</span>(<span class="params">Bitmap btSource, <span class="built_in">int</span> iFlip, <span class="keyword">out</span> Bitmap btDes</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            btDes = (Bitmap)_origImg.Clone();</span><br><span class="line">            <span class="keyword">switch</span> (iFlip)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                    btDes.RotateFlip(RotateFlipType.Rotate180FlipNone); <span class="comment">//指定后接水平翻转和垂直翻转的180度顺时针旋转。(不进行顺时针旋转和翻转)</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    btDes.RotateFlip(RotateFlipType.Rotate270FlipXY);  <span class="comment">//指定不进行翻转的 90 度旋转</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                    btDes.RotateFlip(RotateFlipType.Rotate180FlipNone);  <span class="comment">//指定不进行翻转的 180 度旋转  （垂直翻转+水平翻转）</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                    btDes.RotateFlip(RotateFlipType.Rotate270FlipNone);  <span class="comment">//指定不进行翻转的 270 度旋转</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                    btDes.RotateFlip(RotateFlipType.Rotate180FlipY);  <span class="comment">//指定水平翻转不旋转  (水平翻转)</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                    btDes.RotateFlip(RotateFlipType.Rotate90FlipX);  <span class="comment">//指定90 度旋转后接水平翻转</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                    btDes.RotateFlip(RotateFlipType.RotateNoneFlipY);  <span class="comment">//指定180 度旋转后接水平翻转  (垂直翻转)</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                    btDes.RotateFlip(RotateFlipType.Rotate90FlipY);  <span class="comment">//指定270 度旋转后接水平翻转</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//=======================================================</span></span><br><span class="line">        <span class="comment">//图像的保存</span></span><br><span class="line">        <span class="comment">//=======================================================</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 保存图像pic到默认目录中，保存名称为name</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SaveToFile</span>(<span class="params">Image pic, String name, ImageFormat format</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> CurDir = AppDomain.CurrentDomain.BaseDirectory + DateTime.Now.Date.ToString(<span class="string">&quot;yyyy_MM_dd&quot;</span>) + <span class="string">@&quot;(PngSplit)导出\&quot;</span>;         <span class="comment">//设置当前目录</span></span><br><span class="line">            <span class="keyword">if</span> (!Directory.Exists(CurDir)) Directory.CreateDirectory(CurDir);   <span class="comment">//该路径不存在时，在当前文件目录下创建文件夹&quot;导出..&quot;</span></span><br><span class="line"></span><br><span class="line">            SaveToFile1(pic, CurDir + name, <span class="literal">true</span>, format);    <span class="comment">//已替换方式保存图像</span></span><br><span class="line">        &#125;</span><br><span class="line">       </span><br><span class="line">        <span class="comment">//保存图像pic到文件fileName中，指定图像保存格式</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SaveToFile1</span>(<span class="params">Image pic, <span class="built_in">string</span> fileName, <span class="built_in">bool</span> replace, ImageFormat format</span>)    <span class="comment">//ImageFormat.Jpeg</span></span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//若图像已存在，则删除</span></span><br><span class="line">            <span class="keyword">if</span>(File.Exists(fileName) &amp;&amp; replace)</span><br><span class="line">            &#123;</span><br><span class="line">                File.Delete(fileName);</span><br><span class="line">            &#125;</span><br><span class="line">                </span><br><span class="line"></span><br><span class="line">            <span class="comment">//若不存在则创建</span></span><br><span class="line">            <span class="keyword">if</span> (!File.Exists(fileName))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (format == <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    pic.Save(fileName);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    pic.Save(fileName);<span class="comment">//按给定格式保存图像</span></span><br><span class="line">                &#125;    </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> 有趣的编程知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 anyexec 在 linux 上运行.NET程序</title>
      <link href="/RookieRoom/2020/06/12/rgBUKKJA-/"/>
      <url>/RookieRoom/2020/06/12/rgBUKKJA-/</url>
      
        <content type="html"><![CDATA[<p>这是一种不使用 mono-runtime 的特殊方法，ubuntu 控制台程序测试通过，理论上 linux 控制台程序都可以运行，但 GUI 未测试。</p><p>1、下载 anyexec（不支持32位）<a href="https://jerry.red/wp-content/uploads/2017/02/anyexec-1.2-linux_x64.tar.gz">anyexec-1.2-linux_x64.tar</a><br>2、解压得到一个目录，改成自己想要的名字，例如叫：<code>myanyexec</code><br>3、运行 <code>myanyexec/any</code> ，如果看到如下信息，说明 anyexec 能正常工作：</p><p><img src="https://jerry.red/wp-content/uploads/2017/02/513505-20160402145637176-798734789.png" alt="img"></p><p>4、将编译好的 .net 程序整体移动到 <code>myanyexec/app/</code> 目录下<br>5、将 <code>myanyexec/any</code> 改名为 .net 主程序名，注意不要含 <code>.exe</code> 后缀</p><p><img src="http://www.linuxidc.com/upload/2016_04/160402200538634.jpg" alt="img"></p><p>6、运行改名后的最终程序，测试是否可以运行<br>7、压缩，交付！</p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> net </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jquery判断 input type=&quot;file&quot;上传文件是否为空</title>
      <link href="/RookieRoom/2020/06/01/RyYVHercR/"/>
      <url>/RookieRoom/2020/06/01/RyYVHercR/</url>
      
        <content type="html"><![CDATA[<p>要想获取type&#x3D;”file”的input内容，用var file &#x3D; $(“id”).val();肯定是不行的，下面是代码：</p><p>html上传按钮为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;reportXML&quot;</span> <span class="attr">name</span>=<span class="string">&quot;reportXML&quot;</span> <span class="attr">title</span>=<span class="string">&quot;输入内容&quot;</span> <span class="attr">multiple</span>=<span class="string">&quot;multiple&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;submitXML()&quot;</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><span id="more"></span><p>js代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">submitXML</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">var</span> fileInput = $(<span class="string">&#x27;#reportXML&#x27;</span>).<span class="title function_">get</span>(<span class="number">0</span>).<span class="property">files</span>[<span class="number">0</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">info</span>(fileInput);</span><br><span class="line"><span class="keyword">if</span>(fileInput)&#123;</span><br><span class="line">$(<span class="string">&quot;#reportXMLform&quot;</span>).<span class="title function_">submit</span>();</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&quot;请选择上传文件！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在点击提交按钮时，触发js中的submitXML方法，如果没有选择文件，那么fileInput没有值，由此判断是否提交</p><p>转自：<a href="https://blog.csdn.net/zhang_z_ming/article/details/83275231">https://blog.csdn.net/zhang_z_ming&#x2F;article&#x2F;details&#x2F;83275231<a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> javascript </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>注册验证ef规则</title>
      <link href="/RookieRoom/2020/05/31/BUELmxlju/"/>
      <url>/RookieRoom/2020/05/31/BUELmxlju/</url>
      
        <content type="html"><![CDATA[<h2 id="代码如下："><a href="#代码如下：" class="headerlink" title="代码如下："></a>代码如下：</h2><span id="more"></span><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">MyWeb.Models.Data</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">using</span> System;</span><br><span class="line">    <span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line">    <span class="keyword">using</span> System.ComponentModel.DataAnnotations;</span><br><span class="line">    <span class="keyword">using</span> System.ComponentModel.DataAnnotations.Schema;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">User</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">Key</span>]</span><br><span class="line">        [<span class="meta">DatabaseGenerated(DatabaseGeneratedOption.Identity)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> UserID &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        [<span class="meta">Required(ErrorMessage = <span class="string">&quot;姓名不能为空&quot;</span>)</span>]</span><br><span class="line">        [<span class="meta">Display(Name = <span class="string">&quot;用户名&quot;</span>)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> Username &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        [<span class="meta">Required(ErrorMessage = <span class="string">&quot;用户名不能为空&quot;</span>)</span>]</span><br><span class="line">        [<span class="meta">Display(Name = <span class="string">&quot;用户名&quot;</span>)</span>]</span><br><span class="line">        [<span class="meta">StringLength(20, MinimumLength = 6, ErrorMessage = <span class="string">&quot;用户名必须为&#123;2&#125;到&#123;1&#125;个字符&quot;</span>)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> LoginUser &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        [<span class="meta">Required(ErrorMessage = <span class="string">&quot;密码不能为空&quot;</span>)</span>]</span><br><span class="line">        [<span class="meta">Display(Name = <span class="string">&quot;密码&quot;</span>)</span>]</span><br><span class="line">        [<span class="meta">StringLength(50, MinimumLength = 6, ErrorMessage = <span class="string">&quot;密码必须为&#123;2&#125;到20个字符&quot;</span>)</span>]</span><br><span class="line">        [<span class="meta">DataType(DataType.Password)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> LoginPwd &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        [<span class="meta">Display(Name = <span class="string">&quot;邮箱&quot;</span>)</span>]</span><br><span class="line">        [<span class="meta">Required(ErrorMessage = <span class="string">&quot;邮箱必填&quot;</span>)</span>]</span><br><span class="line">        [<span class="meta">RegularExpression(@<span class="string">&quot;^\w+((-\w+)|(\.\w+))*\@[A-Za-z0-9]+((\.|-)[A-Za-z0-9]+)*\.[A-Za-z0-9]+$&quot;</span>, ErrorMessage = <span class="string">&quot;请输入正确的Email格式&quot;</span>)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> UserEmail &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        [<span class="meta">Display(Name = <span class="string">&quot;手机&quot;</span>)</span>]</span><br><span class="line">        [<span class="meta">Required(ErrorMessage = <span class="string">&quot;电话不能为空&quot;</span>)</span>]</span><br><span class="line">        [<span class="meta">RegularExpression(@<span class="string">&quot;^[1](([3][0-9])|([4][5-9])|([5][0-3,5-9])|([6][5,6])|([7][0-8])|([8][0-9])|([9][1,2,3,8,9]))[0-9]&#123;8&#125;$&quot;</span>, ErrorMessage = <span class="string">&quot;请输入正确的手机格式&quot;</span>)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> UserPhone &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        [<span class="meta">Display(Name = <span class="string">&quot;地址&quot;</span>)</span>]</span><br><span class="line">        [<span class="meta">Required(ErrorMessage = <span class="string">&quot;地址不能为空&quot;</span>)</span>]</span><br><span class="line">        [<span class="meta">DataType(DataType.MultilineText)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> UserSite &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> mvc </tag>
            
            <tag> EF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VIM基础学习(第七节：执行shell命令、文件另存为、合并文件和打开多个文件）转自：鱼C论坛</title>
      <link href="/RookieRoom/2020/05/30/KzuzckBo6/"/>
      <url>/RookieRoom/2020/05/30/KzuzckBo6/</url>
      
        <content type="html"><![CDATA[<p><strong>执行shell命令</strong></p><p>我知道有些童鞋仍然怀念 Windows 的原因，大概主要是因为 Windows 所有的东西都是可视化窗口，所见即所得。</p><p><img src="https://xxx.ilovefishc.com/forum/201510/31/045628ctuluotlkm3bktb0.png" alt="img"></p><p>以下是小甲鱼瞎扯淡环节，可以跳过……</p><p><img src="https://fishc.com.cn/static/image/hrline/5.gif" alt="img"></p><p>某程序员使用 Windows 编写代码的情景：</p><p>代码写一半，没有头绪怎么办？内心的小恶魔肯定这时候就会怂恿你，要不先来一发，放松下心情？</p><span id="more"></span><p><img src="https://xxx.ilovefishc.com/forum/201510/31/045628ax16gmkgxx4d01rq.gif" alt="img"></p><p>噢，你动摇了，你肯定是最小化代码的编辑窗口，然后打开 OOXX.avi，带着学习时从未有过的精神面貌足足欣赏了两个多钟头，全然没有顾及被你落在一边的代码……</p><p>时间滴答滴答一分一秒的过，激情过后便是颓然，噢，晚饭时间到了。</p><p>可见当你在专心致志一件事儿的时候，身旁有太多的诱惑并不是什么好事。至少像曾经我自己，写代码写着写着没头绪了，就成天想着刷个微博，看个小视频，逛个X宝某猫的，最后当然就在娱乐中度过了一个下午，代码没写成，然后成天内心愧疚，发誓明天一定好好专心学习……</p><p>没用，环境在那里，诱惑在那里，像小甲鱼这样心不定的人，没办法……</p><p><img src="https://xxx.ilovefishc.com/forum/201510/31/045629qdpz8fpwwm8nzz2w.gif" alt="img"></p><p>后来遇到了 Linux，噢，是那么的朴素，是那么的单一。后来逐渐接触才发现，Linux 并不像你所看到的那样简单，它由一颗强大的内核驱动，为效率和稳定它可以放弃一切华丽的因素（Linux 其实很多桌面做得都很炫酷！）。</p><p>突然我发现，这不正是我苦苦寻觅的学习环境吗？排除诱惑排除干扰，让你可以专注地去完成工作，渐渐地，我无法自拔……I love Linux，I love FishC.com</p><p><img src="https://xxx.ilovefishc.com/forum/201510/31/045629hppqiq1epafag4f1.gif" alt="img"></p><p><img src="https://fishc.com.cn/static/image/hrline/5.gif" alt="img"></p><p>小甲鱼瞎扯淡环节结束，下边内容需要全神贯注学习！</p><p>运行在命令行下的 VIM，貌似不可能“最小化”，这就有诸多不方便的地方了。比如有时我需要知道某个路径下有哪些文件（我的程序需要调用它们），那我可能就需要先关闭 VIM，然后查看有哪些文件，最后重新打开 VIM。</p><p>这就显得有点折腾了，不符合 VIM 一直强调的高效作风！因此，伟大的 VIM 作者（Bram Moolenaar）高呼一声“我有办法！”，于是祭出了一个感叹号（!）</p><p>比如你想知道根目录（&#x2F;）下面有哪些目录和文件，可以在VIM中输入 :!ls &#x2F;</p><p>然后敲一下回车</p><p><img src="https://xxx.ilovefishc.com/forum/201510/31/045629oxfmd75z5nxj6wm6.jpg" alt="img"></p><p>即可显示根目录（&#x2F;）下边有哪些目录和文件：</p><p><img src="https://xxx.ilovefishc.com/forum/201510/31/045629bve0pcbifu68vz9w.png" alt="img"></p><p>总之，在输入冒号（:）进入命令行模式，输入感叹号（!），在其后便可以加上 shell 命令。此后 VIM 将临时跳转回 shell，并执行命令。再次按下 Enter 键回到 VIM。</p><p><strong>文件另存为</strong></p><p>一般的文本编辑工具都会有“另存为”的功能，用于将文件重新存放到一个新的文件中（旧文件保留不变）。VIM 也可以这么干，做法是输入 :w 新文件名</p><p>下边我用 VIM 打开的是 test 文件，然后我输入 :w test2</p><p><img src="https://xxx.ilovefishc.com/forum/201510/31/045629gs6sqaupuakdqsps.gif" alt="img"></p><p>该命令会以 test2 为文件名拷贝保存整个 test 文件。</p><p><strong>局部内容另存为</strong></p><p>VIM 除了支持文件另存为之外，还支持另一种新技能：文件局部另存为。言下之意就是，VIM 可以将文件中的局部文本另存为一个新的文件，厉害吧？！</p><p><img src="https://xxx.ilovefishc.com/forum/201510/31/045630hh6tbl6i5l8i611q.gif" alt="img"></p><p>这就需要你进入一种新的模式，叫：可视模式</p><p>在普通模式中按下 V 键即进入可视模式，进入后左下角显示 – VISUAL –</p><p>此时光标的位置开始为选中状态，你可以通过任何移动或范围的按键来移动光标，光标所到之处皆为选中状态（h、j、k、l 移动光标，$ 去到行尾，0 去到行首……）：</p><p><img src="https://xxx.ilovefishc.com/forum/201510/31/045630tyb1fajeayuqjt64.png" alt="img"></p><p>选好范围之后的操作就跟“文件另存为”一样了。</p><p>按下冒号（:）屏幕左下方出现 :’&lt;,’&gt;</p><p>现在请输入 w test2</p><p>表示新建一个 test2 文件，并将选中的内容单独存放进去。</p><p>这里有个问题，如果路径中已经存在 test2 文件，那么 VIM 会提醒你需要加感叹号（!）才能强制覆盖文件。即输入 w! test2</p><p><strong>合并文件</strong></p><p>所谓合并文件，便是在 VIM 打开的一个文件中读取并置入另一个文件。怎么样，光听着就觉得炫酷吧？！</p><p><img src="https://xxx.ilovefishc.com/forum/201510/31/045630wzqe1qu4vmv1qyk1.gif" alt="img"></p><p>命令很简单，只需要输入冒号（:）进入命令行模式，然后输入 r 文件名</p><p>即可将指定文件的内容读取并置入到光标的下一行中。</p><p><img src="https://xxx.ilovefishc.com/forum/201510/31/045630eyqq1ozgo311g1tf.png" alt="img"></p><p><strong>打开多个文件</strong></p><p>VIM 还可以同时打开多个文件，并且允许你通过水平或垂直的方式并排它们。</p><p>VIM 使用 –o 或 –O 选项打开多个文件，其中 –o 表示垂直并排，例如 vim -o lesson4 lesson5 lesson6</p><p><img src="https://xxx.ilovefishc.com/forum/201511/12/143428h5h1ihqd3p5zddeq.png" alt="img"></p><p>-O 表示水平并排，例如 vim -O lesson4 lesson5 lesson6</p><p><img src="https://xxx.ilovefishc.com/forum/201511/12/143550dml3i8xomcc5oiis.png" alt="img"></p><p>打开后默认光标是落在第一个文件中的，此时之前学过的所有命令都可以上，不过仅限于第一个文件。那如何将焦点（光标）切换到另一个文件中呢？很简单，使用 ctrl + w + w 将光标切换到下一个文件；或者使用 ctrl + w + 方向（方向键或 h、j、k、l）。</p><ul><li>对于垂直并排的文件：使用 ctrl + w + 上、下方向，表示上、下切换文件；</li><li>对于水平并排的文件：使用 ctrl + w + 左、右方向，表示左、右切换文件。</li></ul><p>不错吧，这样搭配宽屏显示器或者多个显示器，逼格简直爆表！</p><p><img src="https://xxx.ilovefishc.com/forum/201511/12/143623ot4u0fqhtvtgftzt.gif" alt="img"></p><p>退出文件的话可以使用原来的 q、q!、wq 或者 ZZ（shirt + z + z）。</p><p>但你肯定会发现你如果同时打开三四个文件，这样子却不得不退出三四次才行。太麻烦了……</p><p>那有没有更优秀的办法呢？</p><p>答案是有的！</p><p><img src="https://xxx.ilovefishc.com/forum/201511/12/143624nqvxcses6pnnn62p.gif" alt="img"></p><p>只需在原来退出命令的后边加上小写 a，则表示退出动作是针对所有的（ALL）：qa、qa!、wqa</p>]]></content>
      
      
      
        <tags>
            
            <tag> Vim </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VIM基础学习(第六节：搜索命令和替换命令）转自：鱼C论坛</title>
      <link href="/RookieRoom/2020/05/30/HS_UBlK0K/"/>
      <url>/RookieRoom/2020/05/30/HS_UBlK0K/</url>
      
        <content type="html"><![CDATA[<p><strong>搜索命令</strong></p><p>你知道文件中必定有你想要的东西，你也知道它的名字，但你却不知道它在哪里？在茫茫字符的海洋中，怎么办？</p><p><img src="https://xxx.ilovefishc.com/forum/201510/30/033625ms3tlf64y604ygtt.gif" alt="img"></p><p>查找呗，VIM 的查找是从按下斜杠（&#x2F;）那一刻开始的……</p><p>在普通模式下按下斜杠（&#x2F;）也是进入命令行模式，此时该字符和光标均出现在屏幕的底部，这跟冒号（:）一样。</p><p>紧挨着斜杠（&#x2F;）的是搜索目标，比如 &#x2F;love，说明你找的是 love 这个字符串在光标后边第一次出现的位置，当然你也可以输入中文，比如 &#x2F;你瞅啥</p><span id="more"></span><p><img src="https://xxx.ilovefishc.com/forum/201510/30/033625soypp8j8phfdpkd9.gif" alt="img"></p><p>那如果要找下一个目标怎么办？这时你只需按 n 键即可定位到下一个符合的目标（向下查找），而按 N 键则返回上一个（向上查找）。</p><p>注意：第一个搜索到的目标不是文件中的第一个目标，而是从你的光标所在处开始找到的那个目标。所以你如果想要搜索文件中第一个匹配的目标，你应该先 gg 将光标移动到文件头，然后再使用搜索命令。</p><p>在普通模式下按下问号（?）也是进入命令行模式，实现的也是搜索功能。不过这回它是反过来的，你可以认为它是斜杠（&#x2F;）功能的“反面派”。</p><p>前边我们说过 &#x2F;FishC 是从光标位置向后开始搜索 FishC 这个字符串，而 ?FishC 则相反，是从光标位置向前开始搜索。</p><p>怕你头晕，给你列个表：</p><p><img src="https://xxx.ilovefishc.com/forum/201510/30/033625utk786bdkoqzhqi9.gif" alt="img"></p><table><thead><tr><th></th><th><strong>&#x2F;目标</strong></th><th><strong>?目标</strong></th></tr></thead><tbody><tr><td><strong>搜索方向</strong></td><td>从光标位置向后</td><td>从光标位置向前</td></tr><tr><td><strong>n</strong></td><td>向后搜索下一个</td><td>向前搜索下一个</td></tr><tr><td><strong>N</strong></td><td>向前搜索下一个</td><td>向后搜索下一个</td></tr></tbody></table><p>当搜索到了文件的末尾（&#x2F;目标）或开头（?目标），页面下方面会显示“Search hit BOTTOM, continuing at TOP”或“Search hit TOP, continuing at BOTTOM”的字样。表示一轮搜索到文件尾&#x2F;头了，搜索下一个就是从文件头&#x2F;尾开始咯。</p><p><img src="https://xxx.ilovefishc.com/forum/201510/30/033625hda2d4622isdeuck.png" alt="img"></p><p>我发现你发现了，VIM 会自动高亮所有匹配的目标，即使在你找到目标之后，它们仍然高傲的亮着！</p><p><img src="https://xxx.ilovefishc.com/forum/201510/30/033626ogpqe677rwuwq5eq.gif" alt="img"> </p><p><img src="https://xxx.ilovefishc.com/forum/201510/30/033626rwhse1xjsnzm33n8.gif" alt="img"></p><p>很烦人对吧？告诉你怎么取消，输入冒号（:）进入命令行模式，然后输入 nohl 即可。</p><p>最后提个醒：在搜索命令中，.、*、[、]、^、%、&#x2F;、?、~ 和 $ 这 10 个字符有着特殊意义，所以在使用这些字符的时候要在前面加上一个反斜杠（\），比如你要搜索问号，则输入 &#x2F;?</p><p><strong>替换命令</strong></p><p>搜索在很多情况下都是为了替换，这句话小甲鱼没说错吧？</p><p>通过搜索功能，我们将光标定位到目标位置，如果你确定这个目标是可恶的，需要被替换的，你可以输入 : s&#x2F;old&#x2F;new，这样即可将光标所在行的第一个 old 替换为 new；你如果输入的是 : s&#x2F;old&#x2F;new&#x2F;g，则表示将光标所在行的所有 old 替换为 new。</p><p>但如果要替换整个文件的所有匹配字符串怎么办？总不能每一行来一下吧？<br>只要你能想到的，VIM 就有办法！输入 :  %s&#x2F;old&#x2F;new&#x2F;g表示替换整个文件中每个匹配的字符串。</p><p>噢，你没有太大的把握，希望 VIM 在每次替换前都咨询一下你：“亲，我准备替换 XX 了，你确定要将 XX 替换成 OO 吗？”<br>可以，输入 :%s&#x2F;old&#x2F;new&#x2F;gc</p><p><img src="https://xxx.ilovefishc.com/forum/201510/30/033626zihhmpltpmwmzhfw.png" alt="img"></p><p>看到页面下方的 (y&#x2F;n&#x2F;a&#x2F;q&#x2F;l&#x2F;^E&#x2F;^Y) 了吗？这是 VIM 在咨询您的意见呢！</p><ul><li>y 表示替换</li><li>n 表示不替换</li><li>a 表示替换所有</li><li>q 表示放弃替换</li><li>l 表示替换第一个并进入插入模式</li><li>^E 表示用 Ctrl+e 来滚动屏幕</li><li>^Y 表示用 Ctrl+y 来滚动屏幕</li></ul><p>好吧，你可能会问“如果我只想替换第 5 行到第 13 行之间的所有 XX，可以吗？”</p><p>当然可以啦，使用 :5,13s&#x2F;old&#x2F;new&#x2F;g 即可胜任你的要求：</p><p><img src="https://xxx.ilovefishc.com/forum/201510/30/033626fp5pefvbhj59npss.png" alt="img"></p><p>我想你已经猜到了：5 表示开始替换的行号，13 表示结束替换的行号。</p><p>注释：VIM 的搜素和操作远没有这么简单，还有很多秘籍没有放出来，不过今天说的内容，已经足够你用了吧……更多秘籍将在进阶技巧中仔细讨论！</p><p><img src="https://xxx.ilovefishc.com/forum/201510/30/033627biql601jl4ra6gya.gif" alt="img"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Vim </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VIM基础学习(第五节：文件信息、跳转、定位括号和缩进）转自：鱼C论坛</title>
      <link href="/RookieRoom/2020/05/30/K2aGiihrd/"/>
      <url>/RookieRoom/2020/05/30/K2aGiihrd/</url>
      
        <content type="html"><![CDATA[<p><strong>文件信息</strong></p><p>有时候，你可能需要知道当前的文件信息，比如文件名，文件状态，文件的总行数，以及光标所在的相对位置。</p><p><img src="https://xxx.ilovefishc.com/forum/201510/29/232631fod7z6m3p0v80opo.gif" alt="img"></p><p>快捷键 ctrl + g 可以解决你的需求：</p><span id="more"></span><p><img src="https://xxx.ilovefishc.com/forum/201510/29/232631xzmv2mjpv9ii4vao.png" alt="img"></p><p>注意：光标在文件中的相对位置是用百分数来显示的，那如果想知道光标具体的位置呢？看到还有个 5,1 了吗？那个是原来就有的，表示光标当前的位置（行，列）</p><p><strong>跳转</strong></p><p>当你的光标在文件中随意徘徊时，突然想到目标就在第 333 行的位置，你应该怎么做？假设你当前光标位于文件第 1333 行，你的做法是在普通模式下按 1000 次 k 键？</p><p>还是将光标先定位到文件的起始处（gg 命令，还记得吗？），然后按332 次 j 键？</p><p>无论使用哪种做法，我想都是在摧残我们的心智。 </p><p><img src="https://xxx.ilovefishc.com/forum/201510/29/232631nw1r3gi2ldglo5u6.jpg" alt="img"></p><p>当然你可能想到了数字的奥义，先输入数字 332 再输入 j，那么就可以直接跳转到 333 行了。不错，但你还得先将光标移动到文件的起始处，多麻烦……或者直接输入数字 1000，再输入 k，但……这就需要计算了，如果是 1387 行跳到 678 行不还得拿个计算器啊？！</p><p>我们需要的是一步到位，我们需要的是瞬间转移！！！</p><p>可以，VIM 是神之编辑器，只有你想不到，没有它办不到的！</p><p><img src="https://xxx.ilovefishc.com/forum/201510/29/232631hdyzv9pb3nzdagg8.gif" alt="img"></p><p>在 VIM 有两种方式可以将光标跳转到指定的位置：</p><ul><li>行号 + G</li><li>:行号</li></ul><p>比如将光标跳转到第 333 行的位置，你就输入数字 333，再输入大写字母 G 即可见证奇迹；或者输入冒号（:）进入命令行模式，再输入数字 333，最后回车，也可以跳转到目的地。</p><p>TIPS：如果单独输入 G 键（前边没有输入数字），那么光标是直接去到文件的最后一行；如果输入两个小写 g，即 gg，则将光标跳转到文件的第一行。</p><p><strong>定位括号</strong></p><p>我们知道这个世界上除了情侣是一对对的之外，还有括号也是一对对的，不成对的括号则毫无逻辑可言。当你的代码量到一定程度的时候，或许你就只能在屏幕中看到一半的括号，那么有时候寻找它的另一半将成为你心头的磐石。</p><p><img src="https://xxx.ilovefishc.com/forum/201510/29/232632xdi3dd6feizt4fv4.gif" alt="img"></p><p>VIM 有个按键可以帮你快速定位到另一半括号，别说我没告诉你，就是 % 键。将光标移动到 ()，[]，{}，中的任何一半括号上，按下 % 键，便可看到此时光标已经跳转到另外一半的括号上了。</p><p>在程序调试时，这个功能用来查找不配对的括号是很有用的。因为有时候你代码删删删，括号一对给你删了一半，剩下一半落在那里，编译自然就会报错……此时你在落单的那一半括号上使用 % 键，你会发现 VIM 根本不鸟你，因为它找不到另一半了……</p><p>注意：别拿书名号什么的来开玩笑，% 无法识别它们，因为 VIM 是为了编程而生的！</p><p><strong>缩进</strong></p><p>在编写代码的时候我们经常需要对代码进行缩进，如果你按照小甲鱼之前环境搭建那样开启了 VIM 的 cindent 功能之后，你的代码默认会按照 C 语言的方式进行缩进。</p><p>比如我输入做大括号（{），然后回车，VIM 将自动为下边的语句插入一个缩进，直到你输入右大括号（}），代表语句块结束。</p><ol><li>int strcmp(char *s, char *t)</li><li>{    </li><li>​     int i;</li><li>​     </li><li>​     for (i&#x3D;0; s[i] &#x3D;&#x3D; t[i]; i++)</li><li>​          ;    </li><li></li><li>​     return s[i] - t[i];</li><li>}</li></ol><p><em>复制代码</em></p><p>好，那现在我们需要在 for 循环中添加一个条件判断：</p><ol><li>int strcmp(char *s, char *t)</li><li>{    </li><li>​     int i;</li><li>​     </li><li>​     for (i&#x3D;0; s[i] &#x3D;&#x3D; t[i]; i++)</li><li>​     if (s[i] &#x3D;&#x3D; ‘\0’)</li><li>​          return 0;</li><li></li><li>​     return s[i] - t[i];</li><li>}</li></ol><p><em>复制代码</em></p><p>现在我们需要将第 6 行和第 7 行均添加一个缩进，你可能会选择进入插入模式，然后将光标挪到 if 语句的开头，然后按下 Tab 键插入一个缩进，接着再将光标移动到 return 0; 的前边，同样按下 Tab 键插入一个缩进……</p><p>别说你嫌操作麻烦，我连用文字描述我都觉得蛋疼……</p><p>这里只是两行还好，这要是二十行那不得累死人！</p><p>没错，接下来就是小甲鱼放大招的时间了！</p><p><img src="https://xxx.ilovefishc.com/forum/201511/06/162530ec53x2x44et55jgt.jpg" alt="img"></p><p>VIM 可以使用尖括号（&lt; 或 &gt;）来控制缩进，我们常用的就是两个同方向的尖括号表示将光标所在的语句进行缩进和反缩进操作。很明显 &gt;&gt; 表示缩进，而 &lt;&lt; 则表示反缩进。</p><p>但是这样一次只能缩进一行，一行行来也挺麻烦，因此你想到了数字的奥义：先输入数字 2 在输入 &gt;&gt; 表示将光标所在行以及下一行共两行同时插入一个缩进。</p><p>不过行数一多……到底要缩进多少行就成了一个问题……</p><p>这时，你可以按一下 v 进入可视模式（左下角出现 – VISUAL – 字样），然后通过 h、j、k、l 或 其他 motion 来移动你的光标，此时光标所到之处必被一道亮光所包围（表示被选中），选择好需要缩进的目标后，只需按一下 &gt; 即可完成任务。</p><p><img src="https://xxx.ilovefishc.com/forum/201511/06/162556ihjb5obhtgf5s6jm.png" alt="img"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Vim </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VIM基础学习(第四节：粘贴命令、替换命令、替换模式和修改命令）转自：鱼C论坛</title>
      <link href="/RookieRoom/2020/05/30/XMtyLWfdv/"/>
      <url>/RookieRoom/2020/05/30/XMtyLWfdv/</url>
      
        <content type="html"><![CDATA[<p>前方高能：今天会举很多个栗子！</p><p><img src="https://xxx.ilovefishc.com/forum/201510/28/043033vn0rfj37nweh8gpz.gif" alt="img"></p><p><strong>粘贴命令</strong></p><p>尽管上节课最后有写重大备注，但我知道肯定有些鱼油还是没看到，就只看到这个：</p><p><img src="https://xxx.ilovefishc.com/forum/201510/28/043038on77u4n6ozdox6o6.gif" alt="img"></p><span id="more"></span><p>这里再次强调下：在 VIM 下使用删除命令，并不会直接将你的东西删掉，而是放到 VIM 的寄存器中。这样做有一个好处，就是可以让我们简单的实现类似于 Windows 的剪切功能。 </p><p><img src="https://xxx.ilovefishc.com/forum/201510/28/043034ul60zgiovirl91sr.gif" alt="img"></p><p><strong>使用 p 命令可以将最后一次删除的内容粘贴到光标之后。（大写的 P 则是粘贴到光标之前）</strong></p><p><img src="https://xxx.ilovefishc.com/forum/201510/28/043037k12z772bh5ox1ul2.gif" alt="img"></p><p>上边的栗子本来是：<br>Line One<br>Line Three<br>Line Two<br>Line Four</p><p>我只需将光标放在 Line Three 处，然后按下 dd 命令，再按 p 命令，即可将 LineThree 和 Linet Two 的顺序调换过来。是不是很方便呢？ </p><p><img src="https://xxx.ilovefishc.com/forum/201510/28/043039zrzrf233ygd0gdnf.gif" alt="img"></p><p>这里需要注意的是：<strong>如果你需要粘贴的是整行为单位，那么 p 命令将在光标的下一行开始粘贴；如果你拷贝的是非整行的局部字符串，那么 p 命令将在光标后开始粘贴。</strong></p><p><strong>拷贝命令</strong></p><p>其实我们用的最多的还是拷贝粘贴，VIM 用 y 命令实现拷贝。语法跟删除的 d 命令一样：y motion</p><p>其中的 motion 同样是用来表示操作范围的指令，即 yy 表示拷贝当前行，3yy 则表示拷贝 3 行；y$ 表示从光标所在的位置拷贝到行尾的所有字符；yG 则表示从光标所在行拷贝到文件末尾行的所有字符。</p><p>拷贝完成之后同样使用 p 命令进行粘贴，没什么好说的。</p><p><strong>替换命令</strong></p><p>VIM 还提供了一个简单的替换命令：r 命令。</p><p>r 用于替换光标所在的字符，做法是先将光标移动到需要替换的字符处，按一下 r 键，然后输入新的字符。注意，全程无需进入插入模式，也不会进入插入模式。 </p><p><img src="https://xxx.ilovefishc.com/forum/201510/28/043041fffr5qqsr4o7787k.gif" alt="img"></p><p>然后你可能猜到了，数字 + r 可能会产生一些物理反应。先输入【数字】再输入 r，最后输入新字符，说明从当前光标的位置开始，替换【数字】个新字符。</p><p>再举个栗子：</p><p>第一行，先将光标移动到字符 A 处，按下 r 键，再按下 C；<br>第二行，先将光标移动到第一个字符 B 出，按下 3r 键，再按下 C。</p><p><img src="https://xxx.ilovefishc.com/forum/201510/28/043035ab0r4afle9yozem0.gif" alt="img"></p><p><strong>替换模式</strong></p><p>对于需要替换多个字符，更好的方案是直接进入替换模式。按下大写的 R 键，屏幕左下角出现 – REPLACE – 字样，说明你已经处于替换模式。此时输入字符可以连续替换光标及其后边的内容。注意：退格键（Backspace）在替换模式中被解释为<strong>如果左边内容被替换过，则恢复到原来的样子；如果没有被替换过，则简单的向左移动。</strong>修改完毕后，按下 Esc 回到普通模式。</p><p>哎，怕你不懂，还是举个栗子做示范吧 </p><p><img src="https://xxx.ilovefishc.com/forum/201510/28/043042s2hag5krurufw5ck.gif" alt="img"></p><p><img src="https://xxx.ilovefishc.com/forum/201510/28/043031mh4174ga7s3fsxfz.gif" alt="img"></p><p><strong>修改命令</strong></p><p>修改跟替换是不一样的！<br>修改跟替换是不一样的！<br>修改跟替换是不一样的！</p><p>重要的事情要说三遍……</p><p>修改会进入插入模式，替换不会进入插入模式！<br>修改会进入插入模式，替换不会进入插入模式！<br>修改会进入插入模式，替换不会进入插入模式！</p><p><img src="https://xxx.ilovefishc.com/forum/201510/28/043029spsyddodd4onyprs.gif" alt="img"></p><p>修改命令我们使用 c 键来启动，格式是：c [number] motion</p><p>没错，motion 依然表示范围，[数字]依然拥有奥义，同样是可选的，加上数字表示重复执行多次 motion 范围……</p><p>比如 cw 是修改光标指定单词的内容（VIM 的做法就是删除当前光标位置到下个单词前的所有字符，并进入插入模式）；而 c2w 便是修改当前光标指定的单词以及下一个单词共计两个单词的内容……</p><table><thead><tr><th><strong>按键</strong></th><th><strong>含义</strong></th></tr></thead><tbody><tr><td>c0</td><td>删除光标从当前位置（不包含）到该行行首的所有字符，并进入插入模式</td></tr><tr><td>c^</td><td>同上</td></tr><tr><td>c$</td><td>删除从光标当前位置（包含）到该行行尾的所有字符，并进入插入模式</td></tr><tr><td>cb</td><td>删除从光标当前位置（不包含）到单词起始处的所有字符，并进入插入模式</td></tr><tr><td>ce</td><td>删除从光标当前位置（包含）到单词结尾处的所有字符，并进入插入模式</td></tr><tr><td>cw</td><td>删除从光标当前位置（包含）到下个单词起始处的所有字符，并进入插入模式</td></tr><tr><td>ch</td><td>删除光标前边一个字符，并进入插入模式</td></tr><tr><td>cl</td><td>删除光标指定的字符，并进入插入模式</td></tr><tr><td>cj</td><td>删除光标所在行以及下一行的所有字符，并在光标下一行进入插入模式</td></tr><tr><td>ck</td><td>删除光标所在行以及上一行的所有字符，并在光标下一行进入插入模式</td></tr><tr><td>cc</td><td>删除光标所在行的字符，并进入插入模式</td></tr></tbody></table><p>所以，事实上，<strong>修改 &#x3D;&#x3D; 删除 + 进入插入模式</strong></p><p>好吧，我发现我发现了一个惊人的事实！</p><p><img src="https://xxx.ilovefishc.com/forum/201510/28/043028cu564chf88u5xvv5.gif" alt="img"></p><p>嘿嘿，也不完全是这样的哦，因为两者在定位光标上是不完全一样的！但你完全可以认为它们是想通的，因为在实际操作上，并不会影响影响影响你的……</p><p><img src="https://xxx.ilovefishc.com/forum/201510/28/043027eynlvwtjytyyvpup.gif" alt="img"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Vim </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VIM基础学习(第三节：删除命令、数字的奥义、撤销和恢复命令）转自：鱼C论坛</title>
      <link href="/RookieRoom/2020/05/30/UldoXhfMg/"/>
      <url>/RookieRoom/2020/05/30/UldoXhfMg/</url>
      
        <content type="html"><![CDATA[<p><strong>删除命令</strong></p><p>当然你可以选择在插入模式中使用退格键（Backspace）或删除键（Delete）来删除光标前面或当前的字符。不过这样做挺麻烦的，因为你需要先通过方向键将光标调整到目标位置才行（h、j、k、l需要在普通模式才能使用，还记得吗？）。</p><p>我们曾经说过：”对于真正的 VIM 用户，插入模式根本不存在“。是的，回到普通模式去吧，那里有更广阔的天地，在那里可以大有作为的！</p><p><img src="https://xxx.ilovefishc.com/forum/201510/27/041055s4k1dd45vtd6h6zo.gif" alt="img"></p><p>在普通模式下，删除单一字符可以用 x 命令。跟在插入模式按下 Delete 键一样，x 命令是删除光标指定的字符。</p><p>删除更多字符可以使用 d 命令！</p><span id="more"></span><p><strong>更多删除命令</strong></p><p>使用删除操作符 d 的删除命令的格式是 d motion</p><p>d 是 Delete（删除）的意思，motion 即指定要删除的对象，所以这个命令可以很灵活！</p><p>motion 其实是一些表示操作范围的指令，比如：</p><table><thead><tr><th><strong>按键</strong></th><th><strong>含义</strong></th></tr></thead><tbody><tr><td>0</td><td>将光标定位到行首的位置</td></tr><tr><td>^</td><td>同上</td></tr><tr><td>$</td><td>将光标定位到行尾的位置</td></tr><tr><td>b</td><td>将光标定位到光标所在单词的起始处</td></tr><tr><td>e</td><td>将光标定位到光标所在单词的结尾处</td></tr><tr><td>w</td><td>将光标定位到下一个单词的起始处（注意，是光标所在单词的下一个单词噢^_^）</td></tr><tr><td>gg</td><td>将光标定位到文件的开头</td></tr><tr><td>G</td><td>将光标定位到文件的末尾</td></tr></tbody></table><p>没错，使用上面这几个按键移动光标，比单纯多次点击 h、j、k、l 按键省心省力。 </p><p><img src="https://xxx.ilovefishc.com/forum/201510/27/041055sakrtqg55f5hlzau.gif" alt="img"></p><p>将 d 命令跟它们结合，无疑是雪上加霜……噢，不，是如虎添翼、珠联璧合、相得益彰！ </p><p><img src="https://xxx.ilovefishc.com/forum/201510/27/041055q3wxzjt9tt44d4tj.gif" alt="img"></p><table><thead><tr><th><strong>按键</strong></th><th><strong>含义</strong></th></tr></thead><tbody><tr><td>d0</td><td>删除光标从当前位置（不包含）到该行行首的所有字符</td></tr><tr><td>d^</td><td>同上</td></tr><tr><td>d$</td><td>删除从光标当前位置（包含）到该行行尾的所有字符</td></tr><tr><td>db</td><td>删除从光标当前位置（不包含）到单词起始处的所有字符</td></tr><tr><td>de</td><td>删除从光标当前位置（包含）到单词结尾处的所有字符</td></tr><tr><td>dw</td><td>删除从光标当前位置（包含）到下个单词起始处的所有字符</td></tr><tr><td>dh</td><td>删除光标前面一个字符</td></tr><tr><td>dl</td><td>删除光标指定的字符</td></tr><tr><td>dj</td><td>删除光标所在行以及下一行的所有字符</td></tr><tr><td>dk</td><td>删除光标所在行以及上一行的所有字符</td></tr><tr><td>dd</td><td>删除光标所在行的所有字符</td></tr><tr><td>dgg</td><td>删除光标所在行（包含）到文件开头的所有字符</td></tr><tr><td>dG</td><td>删除光标所在行（包含）到文件末尾的所有字符</td></tr></tbody></table><p>不是说好了不刁难人嘛……</p><p><img src="https://xxx.ilovefishc.com/forum/201510/27/041054nqfefclj0j3vs8jx.jpg" alt="img"></p><p>喂喂喂，亲，我说你别走啊，可以学会的啊！！！</p><p>其实你需要练习的就只是几个表示操作范围的命令就可以了，另外还有些规律可循的。</p><p>比如 0 和 ^ 两个是一样的，你随意记住一个即可；d0、db、dh 这类往前删除字符的命令，它们是不会删除光标所指定的字符；而删除方向是往后的则相反（d$、dw、dl），会将当前字符也一并删除。</p><p>另外 dh 和 dl 两个都只是删除一个字符，而 dj 和 dk 则是一次性删除两行，这是为什么呢？我们不妨可以来讨论下，小甲鱼个人认为是这样的：</p><p>大家看最后一个命令 dd（这个命令其实是最常用的，最常用的命令一般作者会设置为重复输入某个字符，这样输入速度会更快） </p><p><img src="https://xxx.ilovefishc.com/forum/201510/27/041054cy0ymppydtybsbms.gif" alt="img"></p><p>它表示当前行的所有字符，那也就是说我想删除下一行，只需要输入 jdd 即可，dj 命令就显得有点没那么必要了（作者可以良苦用心，尽量让每个按键都能够充分发挥最高效率的输入），因此 dj 就给设计成删除当前行以及下一行的所有字符（即 dj &#x3D;&#x3D; dddd）；dk 同理。</p><p>最后这个只是小甲鱼个人的瞎想臆测，欢迎提出不同意见。 </p><p><img src="https://xxx.ilovefishc.com/forum/201510/27/041054xm6hxcj7btjjtsvb.png" alt="img"></p><p><strong>数字的奥义</strong></p><p>你以为这样就完了？</p><p><img src="https://xxx.ilovefishc.com/forum/201510/27/041054k7vgwusnvnv2zbcn.gif" alt="img"></p><p>当然不，VIM 利用数字可以干老多的事儿了。比如普通模式下按一下 h 按键是将光标向左移动一格，而在其前面输入数字 3，即 3h 则是将光标向前移动 3 格，依此类推 3j 则是将光标向下移动三行，3w 则是将光标跳到三个单词后的开始位置……</p><p>同样的，d3h 表示删除光标前的 3 个字符，d3j 表示删除光标所在行以及下面 3 行的所有字符，而 d3w 则表示向后删除当前光标到后面第三个单词前的所有字符。</p><p>是不是很容易呢？</p><p><img src="https://xxx.ilovefishc.com/forum/201510/27/041054miw7kildceulleaa.gif" alt="img"></p><p><strong>撤销和恢复命令</strong></p><p>人总难免会做错事，尤其是在进行删除操作的时候。 </p><p><img src="https://xxx.ilovefishc.com/forum/201510/27/041053tl8ldalfgwckypnx.gif" alt="img"></p><p>那一不小心……删错了……怎么办？</p><p>没关系，VIM 有后悔药提供：u 和 U</p><p>其中小写的 u 表示撤销最后一次修改；而大写的 U 表示撤销对整行的修改。</p><p>可是……我又后悔我吃了后悔药……怎么办？</p><p><img src="https://xxx.ilovefishc.com/forum/201510/27/041053vxwzmdnbfwxfww1g.gif" alt="img"></p><p>VIM 还是有办法！Ctrl + r 快捷键可以恢复撤销的内容！！</p><p><strong>特大备注</strong></p><p>最后，有一个件特大的事儿要跟大家说：这上面所有的“删除”操作并不是真的删除，它们事实上是存放在 VIM 的一个缓冲区（VIM 把它称之为寄存器）中，相当于 Windows 的剪切功能！！！</p><p><img src="https://xxx.ilovefishc.com/forum/201510/27/041053ksb9b47v56vbb2nv.gif" alt="img"> </p><p><img src="https://xxx.ilovefishc.com/forum/201510/27/041053dpmz540ftff90pfh.gif" alt="img"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Vim </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VIM基础学习(第二节：插入模式和退出VIM的方法）转自：鱼C论坛</title>
      <link href="/RookieRoom/2020/05/30/XCJWIHqR9/"/>
      <url>/RookieRoom/2020/05/30/XCJWIHqR9/</url>
      
        <content type="html"><![CDATA[<p><strong>模式</strong></p><p>在此之前，你可能听说过 VIM 最具特色的功能就是支持多种模式，并允许你在这些模式间自由切换，以实现它的强大功能。那 VIM 有多少种模式呢？告诉你吧，VIM 具有 6 种基本模式和 5 种派生模式。（基本模式：普通模式、插入模式、可视模式、选择模式、命令行模式和 Ex 模式；派生模式：操作符等待模式、插入普通模式、插入可视模式、插入选择模式和替换模式）</p><p><img src="https://fishc.com.cn/static/image/smiley/ali/ali15.gif" alt="img"></p><p>你也不要怕，因为只需要掌握其中的普通模式和插入模式，你就可以用 VIM 来编写你的代码了。今天我们来介绍 VIM 的插入模式。</p><span id="more"></span><p><strong>插入模式</strong></p><p>在 Linux 的命令行通过 <em>vi 文件名</em> 或 <em>vim 文件名</em> 即可用 VIM 编辑器打开你的文件，打开文件后默认是进入了普通模式，我们可以用上节课跟大家介绍的 h、j、k、l 四个按键分别左、下、上、右地移动光标。当光标抵达目标位置之后，敲一下 i 按键使得 VIM 切换到插入模式（界面左下角显示 – INSERT – 字样），此时你可以自由的编辑文档了，就像你在 Windows 下使用记事本那样去编辑：</p><p><img src="https://xxx.ilovefishc.com/forum/201510/17/033336lhkjhzlnhnmhcmhk.png" alt="img"></p><p><strong>回到普通模式</strong></p><p>回到普通模式，仅需要敲一下键盘左上角的 Esc 按键即可（界面左下角的 – INSERT – 标志消失）。</p><p><strong>进入插入模式的各种方法</strong></p><p>并不只有敲击按键 i 才能进入插入模式，其实方法多了去了，这儿小甲鱼给大家介绍几个常用的：</p><table><thead><tr><th><strong>按键</strong></th><th><strong>含义</strong></th></tr></thead><tbody><tr><td>i</td><td>在光标的前边进入插入模式</td></tr><tr><td>I</td><td>在光标所在行的行首进入插入模式</td></tr><tr><td>a</td><td>在光标的后边进入插入模式</td></tr><tr><td>A</td><td>在光标所在行的行尾进入插入模式</td></tr><tr><td>o</td><td>在光标所在行的下方插入空行并进入插入模式</td></tr><tr><td>O</td><td>在光标所在行的上方插入空行并进入插入模式</td></tr><tr><td>s</td><td>删除光标指定的字符并进入插入模式</td></tr><tr><td>S</td><td>将光标所在行清除并进入插入模式</td></tr></tbody></table><p>注意：最后这个大 S 是清除所在行，而不是删除。清除的意思就是保留行，把内容清空，然后在行首进入插入模式。</p><p><strong>退出 VIM 的方法</strong></p><p>一般退出 VIM 分两种：一种是保存修改并退出；另一种则是直接退出。无论你选择哪一种退出方式，都先请敲一下 Esc 按键回到普通模式。</p><p>对于第一种（保存修改并退出），这里教大家两招：</p><ul><li>ZZ（两个大写字母Z，也就是Shift+z+z）</li><li>:wq（这是一个组合命令，如果是 :w 表示保存，而 :q 表示退出）</li></ul><p>对于第二种（直接退出）则要区分情况：</p><ul><li>如果你打开文件只是看看，并不做任何改动，那么直接输入 :q 即可</li><li>如果对文件动过手脚，但不希望保存（放弃修改）而直接退出，则需要再后边加上一个感叹号 :q!</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Vim </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VIM基础学习(第一节：使用 h j k l 来移动你的光标）转自：鱼C论坛</title>
      <link href="/RookieRoom/2020/05/30/JnFXw4Sbm/"/>
      <url>/RookieRoom/2020/05/30/JnFXw4Sbm/</url>
      
        <content type="html"><![CDATA[<p>VIM 提供了更好的方式，就是使用 h j k l 四个按键（普通模式），这时我们的手指不需要离开字符区便可控制光标的移动。</p><p>有些童鞋可能会问：那在输入代码时（插入模式），点击这四个按键会输入相应的字母，如何移动光标？</p><p>答：对真正的 VIM 用户来说，插入模式根本不存在，因此这个问题不存在！（以后你会体会到的）</p><p>*问：什么是普通模式？什么是插入模式？模式能干嘛？</p><p>答：对于初学者而言，你现在可能对很多名词都很陌生，但真的没关系，在适当的时候我会告诉你的！*</p><p>好了，h j k l 四个按键分别代表左、下、上、右，它们真的很重要，你一定要记住，以后你就要习惯使用它们来移动光标！</p>]]></content>
      
      
      
        <tags>
            
            <tag> Vim </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github克隆文件和获取远程仓库的更新</title>
      <link href="/RookieRoom/2020/05/27/1cLHajqIJ/"/>
      <url>/RookieRoom/2020/05/27/1cLHajqIJ/</url>
      
        <content type="html"><![CDATA[<h2 id="克隆"><a href="#克隆" class="headerlink" title="克隆"></a>克隆</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:[用户名]/[仓库名].git</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="获取远程仓库的更新"><a href="#获取远程仓库的更新" class="headerlink" title="获取远程仓库的更新"></a>获取远程仓库的更新</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</span><br><span class="line"></span><br><span class="line">//远程主机名是连接远程仓库时创建的</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> git版本控制器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github上传文件</title>
      <link href="/RookieRoom/2020/05/27/qMUNtCci6/"/>
      <url>/RookieRoom/2020/05/27/qMUNtCci6/</url>
      
        <content type="html"><![CDATA[<h2 id="工具-x2F-原料"><a href="#工具-x2F-原料" class="headerlink" title="工具&#x2F;原料"></a>工具&#x2F;原料</h2><ul><li>客户端：Git-2.11.1-64-bit.exe（注意使用2.5.1客户端的话可能会出现找不到tmp的问题）</li><li>账户：在github网站上注册一个账户</li></ul><span id="more"></span><h2 id="方法-x2F-步骤1"><a href="#方法-x2F-步骤1" class="headerlink" title="方法&#x2F;步骤1"></a>方法&#x2F;步骤1</h2><ol><li><p>1</p><p>安装客户端与注册账户很简单，在这里就不多说了，详情请参阅网上步骤。首先登陆github官网后选择start a project创建一个项目仓库。</p><p><a href="http://jingyan.baidu.com/album/e5c39bf5c8c4d039d76033b2.html?picindex=1"><img src="https://exp-picture.cdn.bcebos.com/1f9feadca039131f7a3c056ae275f2c4ed990a64.jpg?x-bce-process=image/resize,m_lfit,w_500" alt="如何使用git上传代码到github"></a></p></li><li><p>2</p><p>进入自己需要上传项目的文件夹内，右击选择git bash here打开git客户端</p><p>输入：git init，然后就会生成一个.git的文件夹。</p><p><a href="http://jingyan.baidu.com/album/e5c39bf5c8c4d039d76033b2.html?picindex=2"><img src="https://exp-picture.cdn.bcebos.com/58021a0148fe1e42e0bbd262c2299a8838130364.jpg?x-bce-process=image/resize,m_lfit,w_500" alt="如何使用git上传代码到github"></a></p></li><li><p>3</p><p>由于第一次使用git上传项目，需要配置ssh</p><p>输入：ssh-keygen -t rsa -C “<a href="mailto:&#101;&#109;&#x61;&#105;&#108;&#x40;&#x71;&#113;&#x2e;&#99;&#x6f;&#109;">&#101;&#109;&#x61;&#105;&#108;&#x40;&#x71;&#113;&#x2e;&#99;&#x6f;&#109;</a>“</p><p>后面的<a href="mailto:&#101;&#109;&#x61;&#x69;&#x6c;&#x40;&#x71;&#113;&#x2e;&#x63;&#111;&#x6d;">&#101;&#109;&#x61;&#x69;&#x6c;&#x40;&#x71;&#113;&#x2e;&#x63;&#111;&#x6d;</a>改为你的邮箱。我的邮箱是qq邮箱，也是在github上注册的那个邮箱</p><p>回车后接着会提示你输入两次密码，默认为空直接回车，出现以下图案表示shh key已经生成成功</p><p><a href="http://jingyan.baidu.com/album/e5c39bf5c8c4d039d76033b2.html?picindex=3"><img src="https://exp-picture.cdn.bcebos.com/e9a4f2eeadbcbe2f81a090ab54dae43b3a867864.jpg?x-bce-process=image/resize,m_lfit,w_500" alt="如何使用git上传代码到github"></a></p><p>END</p></li></ol><h2 id="方法-x2F-步骤2"><a href="#方法-x2F-步骤2" class="headerlink" title="方法&#x2F;步骤2"></a>方法&#x2F;步骤2</h2><ol><li><p>1</p><p>进入c盘的C:\Users\标准用户.ssh（一般都是在这个文加下）生成了两个文件，用记事本打开id_rsa.pub，全选然后复制。</p><p><a href="http://jingyan.baidu.com/album/e5c39bf5c8c4d039d76033b2.html?picindex=4"><img src="https://exp-picture.cdn.bcebos.com/de9bfa3b3b860221838745e5d8bbf82065fb7264.jpg?x-bce-process=image/resize,m_lfit,w_500" alt="如何使用git上传代码到github"></a></p></li><li><p>2</p><p>进入github官网，选择setting-》ssh and GPG keys-》new ssh key</p><p>然后title随便写一个，在下面面的内容处粘贴刚复制的内容。</p><p><a href="http://jingyan.baidu.com/album/e5c39bf5c8c4d039d76033b2.html?picindex=5"><img src="https://exp-picture.cdn.bcebos.com/52fae62064fb960be3f1d3d28fa355e982ae6c64.jpg?x-bce-process=image/resize,m_lfit,w_500" alt="如何使用git上传代码到github"></a></p></li><li><p>3</p><p>选择则保存，然后进入git客户端</p><p>输入：ssh -T <a href="mailto:&#103;&#105;&#116;&#x40;&#x67;&#105;&#116;&#104;&#x75;&#98;&#x2e;&#x63;&#x6f;&#x6d;">&#103;&#105;&#116;&#x40;&#x67;&#105;&#116;&#104;&#x75;&#98;&#x2e;&#x63;&#x6f;&#x6d;</a></p><p>如果ssh key配置成功的话，会看到以下效果</p><p><a href="http://jingyan.baidu.com/album/e5c39bf5c8c4d039d76033b2.html?picindex=6"><img src="https://exp-picture.cdn.bcebos.com/04201aa355e983ae3f078f9968efe07815316964.jpg?x-bce-process=image/resize,m_lfit,w_500" alt="如何使用git上传代码到github"></a></p><p>END</p></li></ol><h2 id="方法-x2F-步骤3"><a href="#方法-x2F-步骤3" class="headerlink" title="方法&#x2F;步骤3"></a>方法&#x2F;步骤3</h2><p>1. </p><p>   设置username和email，因为github每次commit都会记录他们</p><p>   输入以下两个命令：</p><p>   $ git config –global user.name “your name”（注册时填写的名字）</p><p>   $ git config –global user.email “<a href="mailto:&#101;&#109;&#x61;&#x69;&#108;&#x40;&#x71;&#113;&#x2e;&#99;&#111;&#x6d;">&#101;&#109;&#x61;&#x69;&#108;&#x40;&#x71;&#113;&#x2e;&#99;&#111;&#x6d;</a>“（自己的邮箱）</p><p>   开始建立连接：</p><p>   git remote add origin <a href="mailto:&#x67;&#105;&#116;&#64;&#x67;&#x69;&#116;&#x68;&#x75;&#98;&#x2e;&#x63;&#x6f;&#109;">&#x67;&#105;&#116;&#64;&#x67;&#x69;&#116;&#x68;&#x75;&#98;&#x2e;&#x63;&#x6f;&#109;</a>:yourName&#x2F;yourRepo.git</p><p>   yourName和yourRepo表示你再github的用户名和刚才新建的仓库，加完之后进入.git</p><p>   <a href="http://jingyan.baidu.com/album/e5c39bf5c8c4d039d76033b2.html?picindex=7"><img src="https://exp-picture.cdn.bcebos.com/586bfdefe07814310366e4dfdc6699cf03536264.jpg?x-bce-process=image/resize,m_lfit,w_500" alt="如何使用git上传代码到github"></a></p><p>2. </p><p>   如果出现了以下情况fatal: remote origin already exists.说明以前已经连接过此项目，此时需要输入命令：git remote rm origin（移除连接，一般新建的仓库不会出现此问题），然后重新连接</p><p>   输入：git add test.txt (将test文件上传，如果需要上传所有文件请输入：</p><p>   git add . )</p><p>   <a href="http://jingyan.baidu.com/album/e5c39bf5c8c4d039d76033b2.html?picindex=8"><img src="https://exp-picture.cdn.bcebos.com/562787cf02532f63c1553685699147e832e05c64.jpg?x-bce-process=image/resize,m_lfit,w_500" alt="如何使用git上传代码到github"></a></p><p>3. </p><p>   开始提交刚才添加的文件，输入：</p><p>   git commit -m “first commit” （会看到这里列出了所有你需要上传的文件）</p><p>   <a href="http://jingyan.baidu.com/album/e5c39bf5c8c4d039d76033b2.html?picindex=9"><img src="https://exp-picture.cdn.bcebos.com/46a92de039723d03523ae835bb486143d6d45764.jpg?x-bce-process=image/resize,m_lfit,w_500" alt="如何使用git上传代码到github"></a></p><p>4. </p><p>   最后使用git push命令，将本地仓库推送到远程服务器</p><p>   输入：git push origin master</p><p>   成功后效果如下</p><p>   <a href="http://jingyan.baidu.com/album/e5c39bf5c8c4d039d76033b2.html?picindex=10"><img src="https://exp-picture.cdn.bcebos.com/31097f43d7d44831eb3b2014d40f822b75ee5164.jpg?x-bce-process=image/resize,m_lfit,w_500" alt="如何使用git上传代码到github"></a></p><p>5. </p><p>   进入github个人后台，会发现test.txt已经成功上传.</p><p>   下载项目直接使用git clone <a href="https://github.com/TaberZaly/online-shop.git%E5%8D%B3%E5%8F%AF%E6%88%96%E8%80%85%E7%9B%B4%E6%8E%A5%E8%BF%9B%E5%85%A5github%E4%B8%8B%E8%BD%BDzip%E5%8E%8B%E7%BC%A9%E5%8C%85%E3%80%82">https://github.com/TaberZaly/online-shop.git即可或者直接进入github下载zip压缩包。</a></p><p>   <a href="http://jingyan.baidu.com/album/e5c39bf5c8c4d039d76033b2.html?picindex=11"><img src="https://exp-picture.cdn.bcebos.com/05aae8a75f0f822b873eca81c018512c8df14d64.jpg?x-bce-process=image/resize,m_lfit,w_500" alt="如何使用git上传代码到github"></a></p><p>   END</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li>如果出现此错误fatal: remote origin already exists.表示连接问题，原因可能是仓库已经和本地的某一个项目建立了连接，使用新项目与原来仓库连接会出现这个问题，所以先移除连接git remote rm origin</li><li>当输入git commit -m “first commit”后，在你移除原连接新建后，并没有列出你所要上传的文件，而显示没有目录或者文件。此时直接新建仓库重新执行以上步骤即可。</li><li>初次上传时需要配置ssh key 与设置config –global信息，之后上传一般不需要了。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> git版本控制器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C# DataGridView 多了一行空白</title>
      <link href="/RookieRoom/2020/05/20/PzxpwKuLh/"/>
      <url>/RookieRoom/2020/05/20/PzxpwKuLh/</url>
      
        <content type="html"><![CDATA[<p>DataGridView 多了一行空白，DataGridView的AllowUserToAddRows属性默认为true,所以最后一行总会多出来一个让添加新内容的行，您可以把AllowUserToAddRows属性设置为False，这样就可以了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> net </tag>
            
            <tag> winfrom </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html复制保留原格式</title>
      <link href="/RookieRoom/2020/05/20/UwJA_HwRn/"/>
      <url>/RookieRoom/2020/05/20/UwJA_HwRn/</url>
      
        <content type="html"><![CDATA[<h2 id="代码如下："><a href="#代码如下：" class="headerlink" title="代码如下："></a>代码如下：</h2><span id="more"></span><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>复制文本内容保持预留格式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>  <span class="attr">id</span>=<span class="string">&quot;b2&quot;</span>&gt;</span>复制2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pre</span> <span class="attr">class</span>=<span class="string">&quot;preText&quot;</span>&gt;</span>                              ---------------EOF---------------</span><br><span class="line"> <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color:red;&quot;</span>&gt;</span>456<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">                    ****** CORVARINCE ******</span><br><span class="line">    1</span><br><span class="line">     1450416.8750     94220.6953     58098.9414    -76054.6328   -232771.8750    212933.2500    -68626.6250     61194.3438</span><br><span class="line">      124985.3984    240836.2188    203419.0469     27533.9531    -57570.3281     49936.1172    219656.1406    492165.6250</span><br><span class="line">      239934.3281    457249.6250   -106036.7109     94176.5859   -313093.4062    -13598.0986    400218.0000    193047.2969</span><br><span class="line">      153492.9219</span><br><span class="line"><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;jquery-1.10.2.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> text = $(<span class="string">&#x27;.preText&#x27;</span>).<span class="title function_">text</span>();</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">copyText</span>(<span class="params">text</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> tag = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;textarea&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> elementID = <span class="string">&quot;cp_hgz_input&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">        tag.<span class="title function_">setAttribute</span>(<span class="string">&#x27;id&#x27;</span>, elementID);</span></span><br><span class="line"><span class="language-javascript">        tag.<span class="property">value</span> = text;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// document.getElementById(&#x27;main-content&#x27;).appendChild(tag);</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(tag);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(elementID).<span class="title function_">select</span>();</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">execCommand</span>(<span class="string">&#x27;copy&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(elementID).<span class="title function_">remove</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    $(<span class="string">&#x27;#b2&#x27;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params">event</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">copyText</span>(text)</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190703164215503.gif" alt="img"></p><p>转自：<a href="https://blog.csdn.net/xxxxxxxxYZ/article/details/94572080">https://blog.csdn.net/xxxxxxxxYZ/article/details/94572080</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> html </tag>
            
            <tag> 有趣的编程知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用户名、密码等15个常用的js正则表达式</title>
      <link href="/RookieRoom/2020/05/20/RFKu0o4lH/"/>
      <url>/RookieRoom/2020/05/20/RFKu0o4lH/</url>
      
        <content type="html"><![CDATA[<p>1 用户名正则<br>&#x2F;&#x2F;用户名正则，4到16位（字母，数字，下划线，减号）<br>var uPattern &#x3D; &#x2F;^[a-zA-Z0-9_-]{4,16}$&#x2F;;<br>&#x2F;&#x2F;输出 true<br>console.log(uPattern.test(“iFat3”));<br>2 密码强度正则<br>&#x2F;&#x2F;密码强度正则，最少6位，包括至少1个大写字母，1个小写字母，1个数字，1个特殊字符<br>var pPattern &#x3D; &#x2F;^.<em>(?&#x3D;.{6,})(?&#x3D;.<em>\d)(?&#x3D;.</em>[A-Z])(?&#x3D;.</em>[a-z])(?&#x3D;.<em>[!@#$%^&amp;</em>? ]).*$&#x2F;;<br>&#x2F;&#x2F;输出 true<br>console.log(“&#x3D;&#x3D;”+pPattern.test(“iFat3#”));</p><p>资料链接：<a href="https://www.cnblogs.com/raphael1982/p/8012634.html">https://www.cnblogs.com/raphael1982/p/8012634.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 有趣的编程知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jqUI简单调用和使用</title>
      <link href="/RookieRoom/2020/05/20/VpFGK3lBJ/"/>
      <url>/RookieRoom/2020/05/20/VpFGK3lBJ/</url>
      
        <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//弹出登陆窗口  窗口用一个Jquery—UI</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">ShowLoginDialog</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//显示登陆窗口 做一个div</span></span></span><br><span class="line"><span class="language-javascript">            $(<span class="string">&quot;#loginDiv&quot;</span>).<span class="title function_">css</span>(<span class="string">&quot;display&quot;</span>, <span class="string">&quot;block&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            $(<span class="string">&quot;#loginDiv&quot;</span>).<span class="title function_">dialog</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">height</span>: <span class="number">260</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">width</span>: <span class="number">300</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">modal</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">buttons</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">ok</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                        $(<span class="variable language_">this</span>).<span class="title function_">dialog</span>(<span class="string">&quot;close&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"> </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> JquryUI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ado.net EF与ado.net区别比较</title>
      <link href="/RookieRoom/2020/05/20/RQWPTTnrX/"/>
      <url>/RookieRoom/2020/05/20/RQWPTTnrX/</url>
      
        <content type="html"><![CDATA[<p>ado.net EF作为微软的一个ORM框架，通过实体、关系型数据库表之间的映射，使开发人员可以通过操作表实体而间接的操作数据库，大大的提高了开发效率。</p><p>（1）ado.net 做为原装的直接跟数据库打交道，直接操作数据库，没有进行额外的封装。比如我们可以直接执行sql语句，直接调用存储过程。直接操作DataSet数据集等等数据。<br>（2）EF 是ORM思想的付诸于实践，它对ado.net进行了封装，对数据表进行了映射处理，以对象的形式展现在开发人员面前。开发人员可以利用Linq语句的优势来执行增、改、查。但是最终的操作都是要转换成SQL语句来执行。</p><p>资料链接：<a href="https://blog.csdn.net/ydm19891101/article/details/51005668">https://blog.csdn.net/ydm19891101/article/details/51005668</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> net </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ashx输出图片</title>
      <link href="/RookieRoom/2020/05/20/kMxdooebu/"/>
      <url>/RookieRoom/2020/05/20/kMxdooebu/</url>
      
        <content type="html"><![CDATA[<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">context.Response.ContentType = <span class="string">&quot;text/plain&quot;</span>;</span><br><span class="line"> <span class="comment">//context.Response.Write(&quot;二维码:1000元&quot;);</span></span><br><span class="line"> <span class="built_in">string</span> path = context.Server.MapPath(<span class="string">&quot;../Images/ShouKuan.png&quot;</span>);</span><br><span class="line"> <span class="comment">//获取图片文件的二进制数据。</span></span><br><span class="line"> <span class="built_in">byte</span>[] datas = System.IO.File.ReadAllBytes(path);</span><br><span class="line"> <span class="comment">//将二进制数据写入到输出流中。</span></span><br><span class="line"> context.Response.OutputStream.Write(datas, <span class="number">0</span>, datas.Length);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> net </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分页查询实现步骤</title>
      <link href="/RookieRoom/2020/05/20/WYJ3bpOOT/"/>
      <url>/RookieRoom/2020/05/20/WYJ3bpOOT/</url>
      
        <content type="html"><![CDATA[<h1 id="《分页查询实现步骤》"><a href="#《分页查询实现步骤》" class="headerlink" title="《分页查询实现步骤》"></a>《分页查询实现步骤》</h1><h2 id="第一步：Common层"><a href="#第一步：Common层" class="headerlink" title="第一步：Common层"></a>第一步：Common层</h2><span id="more"></span><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PageBarHelper</span></span><br><span class="line">   &#123;</span><br><span class="line">       <span class="function"><span class="keyword">public</span>  <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetPagaBar</span>(<span class="params"><span class="built_in">int</span> pageIndex,<span class="built_in">int</span> pageCount</span>)</span></span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">if</span> (pageCount==<span class="number">1</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               <span class="keyword">return</span> <span class="built_in">string</span>.Empty;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="built_in">int</span> start = pageIndex - <span class="number">5</span>;<span class="comment">//计算起始的位置，要求页面上显示10个数字页码</span></span><br><span class="line">           <span class="keyword">if</span> (start &lt; <span class="number">1</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               start = <span class="number">1</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="built_in">int</span> end = start + <span class="number">9</span>;<span class="comment">//计算终止位置</span></span><br><span class="line">           <span class="keyword">if</span> (end&gt;pageCount)</span><br><span class="line">           &#123;</span><br><span class="line">               end = pageCount;</span><br><span class="line">               <span class="comment">//重新计算一下Start值</span></span><br><span class="line">               start = end - <span class="number">9</span> &lt; <span class="number">1</span> ? <span class="number">1</span> : end - <span class="number">9</span>;</span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line">           StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">           <span class="keyword">if</span> (pageIndex&gt;<span class="number">1</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               sb.AppendFormat(<span class="string">&quot;&lt;a href=&#x27;?pageIndex=&#123;0&#125;&#x27; class=&#x27;myPageBar&#x27;&gt;上一页&lt;/a&gt;&quot;</span>, pageIndex - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">for</span> (<span class="built_in">int</span> i = start; i &lt;= end ; i++)</span><br><span class="line">           &#123;</span><br><span class="line">               <span class="keyword">if</span> (i==pageIndex)</span><br><span class="line">               &#123;</span><br><span class="line">                   sb.Append(i);</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="keyword">else</span></span><br><span class="line">               &#123;</span><br><span class="line">                   sb.AppendFormat(<span class="string">&quot;&lt;a href=&#x27;?pageIndex=&#123;0&#125;&#x27; class=&#x27;myPageBar&#x27;&gt;&#123;0&#125;&lt;/a&gt;&quot;</span>, i);</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">if</span> (pageIndex&lt;pageCount)</span><br><span class="line">           &#123;</span><br><span class="line">               sb.AppendFormat(<span class="string">&quot;&lt;a href=&#x27;?pageIndex=&#123;0&#125;&#x27; class=&#x27;myPageBar&#x27;&gt;下一页&lt;/a&gt;&quot;</span>, pageIndex + <span class="number">1</span>);</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">return</span> sb.ToString();</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="第二步：DAL层"><a href="#第二步：DAL层" class="headerlink" title="第二步：DAL层"></a>第二步：DAL层</h2><h3 id="获取总页数"><a href="#获取总页数" class="headerlink" title="获取总页数"></a>获取总页数</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">GetRecordCount</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> sql = <span class="string">&quot;select count(*) from Books&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> Convert.ToInt32(DbHelperSQL.GetSingle(sql));</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="获取指定范围的分页数据"><a href="#获取指定范围的分页数据" class="headerlink" title="获取指定范围的分页数据"></a>获取指定范围的分页数据</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> DataSet <span class="title">GetPageList</span>(<span class="params"><span class="built_in">int</span> start,<span class="built_in">int</span> end</span>)</span></span><br><span class="line">       &#123;</span><br><span class="line">           <span class="built_in">string</span> sql = <span class="string">&quot;select * from(select *,row_number() over(order by id) as num from Books)as  t where t.num&gt;=@start and t.num&lt;@end&quot;</span>;</span><br><span class="line">           SqlParameter[] parameters =</span><br><span class="line">           &#123;</span><br><span class="line">               <span class="keyword">new</span> SqlParameter(<span class="string">&quot;@start&quot;</span>,SqlDbType.Int,<span class="number">4</span>),</span><br><span class="line">               <span class="keyword">new</span> SqlParameter(<span class="string">&quot;@end&quot;</span>,SqlDbType.Int,<span class="number">4</span>)</span><br><span class="line">           &#125;;</span><br><span class="line">           parameters[<span class="number">0</span>].Value = start;</span><br><span class="line">           parameters[<span class="number">1</span>].Value = end;</span><br><span class="line">           <span class="keyword">return</span> DbHelperSQL.Query(sql, parameters);<span class="comment">//此方法是执行sql语句</span></span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h2 id="第三步：BLL层"><a href="#第三步：BLL层" class="headerlink" title="第三步：BLL层"></a>第三步：BLL层</h2><h3 id="获取总页数-1"><a href="#获取总页数-1" class="headerlink" title="获取总页数"></a>获取总页数</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">GetPageCount</span>(<span class="params"><span class="built_in">int</span> pageSize</span>)</span></span><br><span class="line">     &#123;</span><br><span class="line">         <span class="built_in">int</span> recordCount = dal.GetRecordCount();</span><br><span class="line">         <span class="built_in">int</span> pageCount = Convert.ToInt32(Math.Ceiling((<span class="built_in">double</span>)recordCount / pageSize));</span><br><span class="line">         <span class="keyword">return</span> pageCount;</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><h3 id="获取指定范围的分页数据-1"><a href="#获取指定范围的分页数据-1" class="headerlink" title="获取指定范围的分页数据"></a>获取指定范围的分页数据</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Book&gt; <span class="title">GetPageList</span>(<span class="params"><span class="built_in">int</span> pageIndex,<span class="built_in">int</span> pageSize</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">          <span class="built_in">int</span> start = (pageIndex - <span class="number">1</span>) * pageSize + <span class="number">1</span>;</span><br><span class="line">          <span class="built_in">int</span> end = pageIndex * pageSize;</span><br><span class="line">          DataSet ds = dal.GetPageList(start, end);</span><br><span class="line">          <span class="keyword">return</span> DataTableToList(ds.Tables[<span class="number">0</span>]);<span class="comment">//返回设置指定范围的的分页数据的列表</span></span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><h2 id="第四步：Web层"><a href="#第四步：Web层" class="headerlink" title="第四步：Web层"></a>第四步：Web层</h2><h3 id="aspx前台"><a href="#aspx前台" class="headerlink" title="aspx前台"></a>aspx前台</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;page_nav&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 50px;&quot;</span>&gt;</span></span><br><span class="line">        &lt;%=Common.PageBarHelper.GetPagaBar(PageIndex,PageCount)%&gt;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="aspx后台"><a href="#aspx后台" class="headerlink" title="aspx后台"></a>aspx后台</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">BookList</span> : <span class="title">System.Web.UI.Page</span></span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">int</span> PageIndex &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">int</span> PageCount &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">       <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">Page_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">       &#123;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">if</span> (!IsPostBack)</span><br><span class="line">           &#123;</span><br><span class="line">               BindBookList();</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">BindBookList</span>()</span></span><br><span class="line">       &#123;</span><br><span class="line">           <span class="built_in">int</span> pageIndex;</span><br><span class="line">           <span class="keyword">if</span> (!<span class="built_in">int</span>.TryParse(Request[<span class="string">&quot;pageIndex&quot;</span>], <span class="keyword">out</span> pageIndex))</span><br><span class="line">           &#123;</span><br><span class="line">               pageIndex = <span class="number">1</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="built_in">int</span> pageSize = <span class="number">11</span>;</span><br><span class="line">           BLL.BookManager bookManager = <span class="keyword">new</span> BLL.BookManager();</span><br><span class="line">           <span class="built_in">int</span> pageCount = bookManager.GetPageCount(pageSize);</span><br><span class="line">           PageCount = pageCount;</span><br><span class="line">           pageIndex = pageIndex &lt; <span class="number">1</span> ? <span class="number">1</span> : pageIndex;</span><br><span class="line">           pageIndex = pageIndex &gt; pageCount ? pageCount : pageIndex;</span><br><span class="line">           PageIndex = pageIndex;</span><br><span class="line">           <span class="keyword">this</span>.BookListRepeater.DataSource = bookManager.GetPageList(pageIndex, pageSize);</span><br><span class="line">           <span class="keyword">this</span>.BookListRepeater.DataBind();</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> net </tag>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Func和Action委托的区别和简单使用</title>
      <link href="/RookieRoom/2020/05/20/TlyNsGK_v/"/>
      <url>/RookieRoom/2020/05/20/TlyNsGK_v/</url>
      
        <content type="html"><![CDATA[<p>Func和Action委托的区别和简单使用</p><pre><code>1.action委托指向的方法没有返回值2.func委托要求必须指向带返回值的方法</code></pre><p>链接地址1：<a href="https://blog.csdn.net/weixin_33911824/article/details/90105066">https://blog.csdn.net/weixin_33911824/article/details/90105066</a><br>链接地址2：<a href="https://blog.csdn.net/IT_choshim/article/details/81029728">https://blog.csdn.net/IT_choshim/article/details/81029728</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>什么是隐式类型</title>
      <link href="/RookieRoom/2020/05/20/0VY44_rPu/"/>
      <url>/RookieRoom/2020/05/20/0VY44_rPu/</url>
      
        <content type="html"><![CDATA[<p>C#隐式类型是.net4.0推出的新功能特性，我们先了解一下什么是隐式类型？</p><p>​        <span id="more"></span></p><p>​        当程序中使用了隐式类型，那么这个变量不需要指定其数据类型，由操作系统自动判断其数据类型，但它绝对不会进行装箱和拆箱的操作。<br>​        以前我们在定义变量的时间，必须要指定变量的数据类型，隐式类型变量是用var关键字来表示的，当使用了var关键字定义的变量就不需要指定其数据类型。<br>​        例：var flag1&#x3D;2;var flag2&#x3D;”张三”;var flag3&#x3D;true;以上定义隐式类型变量都是正确的，但是使用了隐式类型变量需要注意如下几点：<br>​        1、使用var作为定义隐式类型的关键字，var其实也是javascript定义变量的语法；<br>​        2、定义隐式类型时，必须为它赋值，例var str&#x3D;“test”；<br>​        3、赋值后，变量的值可以修改，但是值的数据类型是不可更改的；<br>​        4、隐式类型具体是什么类型，是初始化的值，由编译器自动判断。</p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c# string类型存储原理</title>
      <link href="/RookieRoom/2020/05/20/wwof9uN34/"/>
      <url>/RookieRoom/2020/05/20/wwof9uN34/</url>
      
        <content type="html"><![CDATA[<p>字符串的存储原理：<br>    当创建一个字符串对象时，会在内存创建一个字符串常量。每次创建一个字符串时都会去字符串常量区中查询这个字符串是否已经创建了，如果已经创建了，就把已经创建的字符串的引用赋值给新创建的字符串，这两个字符串就引用了同一个引用地址，这就解释了上面的a和b在修改之前的引用为什么是相同的；如果没有查询到字符串的值，则创建一个新的字符串常量。</p><p>原文链接：<a href="https://blog.csdn.net/niechaoya/java/article/details/98480801">https://blog.csdn.net/niechaoya/java/article/details/98480801</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web上传文件并保存使用</title>
      <link href="/RookieRoom/2020/05/19/rsvSGesn_/"/>
      <url>/RookieRoom/2020/05/19/rsvSGesn_/</url>
      
        <content type="html"><![CDATA[<h2 id="一、接收上传的文件"><a href="#一、接收上传的文件" class="headerlink" title="一、接收上传的文件"></a>一、接收上传的文件</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">HttpPostedFile file=context.Request.Files[<span class="number">0</span>];<span class="comment">//file 接收了上传的文件</span></span><br><span class="line"><span class="comment">//HttpPostedFile 提供已上载的客户端的各个文件的权限</span></span><br><span class="line"><span class="comment">//file 对象名</span></span><br><span class="line"><span class="comment">//context 封装有关个别 HTTP 请求的所有 HTTP 特定的信息的HttpContext对象名</span></span><br><span class="line"><span class="comment">//Request 为当前 HTTP 请求获取 System.Web.HttpRequest 对象</span></span><br><span class="line"><span class="comment">//Files 获取采用多部分 MIME 格式的由客户端上载的文件的集合</span></span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="二、检测上传文件的大小"><a href="#二、检测上传文件的大小" class="headerlink" title="二、检测上传文件的大小"></a>二、检测上传文件的大小</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">获取到的文件.ContentLength</span><br><span class="line"> </span><br><span class="line"><span class="comment">//ContentLength  获取已上载文件的大小（以字节为单位）</span></span><br></pre></td></tr></table></figure><h2 id="三、-判断文件类型"><a href="#三、-判断文件类型" class="headerlink" title="三、 判断文件类型"></a>三、 判断文件类型</h2><h3 id="1、获取文件的类型"><a href="#1、获取文件的类型" class="headerlink" title="1、获取文件的类型"></a>1、获取文件的类型</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Path.GetFileName(获取到的文件.FileName);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Path  对包含文件或目录路径信息的 System.String 实例执行操作</span></span><br><span class="line"><span class="comment">//GetFileName  返回指定路径字符串的文件名和扩展名</span></span><br><span class="line"><span class="comment">//FileName  获取客户端上文件的完全限定名称(其实就是获取文件名)</span></span><br></pre></td></tr></table></figure><h3 id="2、获取文件扩展名"><a href="#2、获取文件扩展名" class="headerlink" title="2、获取文件扩展名"></a>2、获取文件扩展名</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Path.GetExtension(获取到的文件名);</span><br><span class="line"><span class="comment">//Path  对包含文件或目录路径信息的 System.String 实例执行操作</span></span><br><span class="line"><span class="comment">//GetFileName返回指定路径字符串的扩展名</span></span><br></pre></td></tr></table></figure><h2 id="四、给予上传文件唯一标识"><a href="#四、给予上传文件唯一标识" class="headerlink" title="四、给予上传文件唯一标识"></a>四、给予上传文件唯一标识</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Guid.NewGuid().ToString();<span class="comment">//标识为MD5值</span></span><br><span class="line"><span class="comment">//Guid 表示全局唯一标识</span></span><br><span class="line"><span class="comment">//NewGuid() 创建一个新标识</span></span><br></pre></td></tr></table></figure><h2 id="五、保存到指定目录或者创建指定目录"><a href="#五、保存到指定目录或者创建指定目录" class="headerlink" title="五、保存到指定目录或者创建指定目录"></a>五、保存到指定目录或者创建指定目录</h2><h3 id="1、判断指定目录是否存在"><a href="#1、判断指定目录是否存在" class="headerlink" title="1、判断指定目录是否存在"></a>1、判断指定目录是否存在</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!Directory.Exists(context.Request.MapPath(dir)))</span><br><span class="line"><span class="comment">//Directory    公开用于通过目录和子目录进行创建、移动和枚举的静态方法。</span></span><br><span class="line"><span class="comment">//Exists       确定给定路径是否引用磁盘上的现有目录</span></span><br></pre></td></tr></table></figure><h3 id="2、创建文件夹"><a href="#2、创建文件夹" class="headerlink" title="2、创建文件夹"></a>2、创建文件夹</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> Directory.CreateDirectory(路径);</span><br><span class="line"><span class="comment">//Directory  公开用于通过目录和子目录进行创建、移动和枚举的静态方法。</span></span><br><span class="line"><span class="comment">//CreateDirectory     在指定路径中创建所有目录和子目录，除非它们已经存在。</span></span><br></pre></td></tr></table></figure><h3 id="3、保存文件"><a href="#3、保存文件" class="headerlink" title="3、保存文件"></a>3、保存文件</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">文件对象.SaveAs(保存的路径);</span><br><span class="line"> <span class="comment">//SaveAs  保存已上载文件的内容</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vs调试方法和注意事项</title>
      <link href="/RookieRoom/2020/05/19/vs-diao-shi-fang-fa-he-zhu-yi-shi-xiang/"/>
      <url>/RookieRoom/2020/05/19/vs-diao-shi-fang-fa-he-zhu-yi-shi-xiang/</url>
      
        <content type="html"><![CDATA[<p>CSDN中的两个解释</p><p><a href="https://blog.csdn.net/qq_35637562/article/details/79369034">https://blog.csdn.net/qq_35637562/article/details/79369034</a>  比较详细</p><p><a href="https://blog.csdn.net/rzdyzx/article/details/78964810">https://blog.csdn.net/rzdyzx/article/details/78964810</a> 比较粗略</p><p>微软官方的调试教程</p><p><a href="https://docs.microsoft.com/zh-cn/visualstudio/debugger/debugger-feature-tour?view=vs-2019">https://docs.microsoft.com/zh-cn/visualstudio/debugger/debugger-feature-tour?view=vs-2019</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> vs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NPOI（1.2.4）无法将类型“NPOI.SS.UserModel.Sheet”隐式转换为“NPOI.HSSF.UserModel.HSSFSheet”。</title>
      <link href="/RookieRoom/2020/05/19/npoi124wu-fa-jiang-lei-xing-npoissusermodelsheetyin-shi-zhuan-huan-wei-npoihssfusermodelhssfsheet/"/>
      <url>/RookieRoom/2020/05/19/npoi124wu-fa-jiang-lei-xing-npoissusermodelsheetyin-shi-zhuan-huan-wei-npoihssfusermodelhssfsheet/</url>
      
        <content type="html"><![CDATA[<p>1.2.3中，NPOI.SS.UserModel.Sheet sheet &#x3D; hssfworkbook.CreateSheet(）；<br>1.2.4中  NPOI.SS.UserModel.ISheet sheet &#x3D; hssfworkbook.CreateSheet(）；&#x2F;&#x2F;名称变了，本来就是个接口，只是1.2.3中没有按接口命名的规范</p>]]></content>
      
      
      
        <tags>
            
            <tag> NPOI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTTP协议和TCP协议有什么区别？</title>
      <link href="/RookieRoom/2020/05/19/http-xie-yi-he-tcp-xie-yi-you-shi-me-qu-bie/"/>
      <url>/RookieRoom/2020/05/19/http-xie-yi-he-tcp-xie-yi-you-shi-me-qu-bie/</url>
      
        <content type="html"><![CDATA[<p>1.层次不同,http属于应用层，tcp属于传输层</p><p>2.http是基于tcp，就相当于生活中的吃饭时候你都会用到碗，这个碗就是tcp，吃饭这件事情就相当于http，因为我们http发送数据之前，会先进行tcp三次握手，这时候只是发送一些状态码的确认等，并没有对http的数据进行发送。</p>]]></content>
      
      
      
        <tags>
            
            <tag> socket </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DataAdapter适配器</title>
      <link href="/RookieRoom/2020/05/19/dataadapter-gua-pei-qi/"/>
      <url>/RookieRoom/2020/05/19/dataadapter-gua-pei-qi/</url>
      
        <content type="html"><![CDATA[<p>     在ADO.NET中，能够用于执行命令操作的不但有有Command对象，还有DataAdapter对象，DataAdapter对象执行查询的返回数据将存储在DataSet对象中。<br>                 DataAdapter对象概述<br>                 DataAdapter对象是DataSet和数据之间的桥梁，可以建立并初始化数据表对数据源执行SQL指令，与DataSet对象结合        ，提供DataSet对象存储数据，可视为DataSet对象的操作核心。<br>                在使用DataAdapter对象时，只需要设置表示SQL命令和数据库连接的两个参数，就可以通过Fill方法把查询结果放置在一        个DataSet对象中。DataAdapter对象可用于执行数据库的命令操作，含有四个不同的操作命令：<br>                (1)SelectCommand：用来选取数据源中的记录；<br>                (1)InsertCommand：用来向数据源中新插入一条记录；<br>                (1)UpdateCommand：用来更新数据源中的数据；<br>                (1)DeleteCommand：用来删除数据源中的记录。<br>                填充DataSet数据集<br>                在填写DataSet数据集时，需要用到DataAdapter对象的Fill方法来完成，格式如下：<br>                DataAdapter对象.Fill(DataSet对象，映像源表的名称的字符串);</p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> net </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GET和POST</title>
      <link href="/RookieRoom/2020/05/19/get-he-zpost/"/>
      <url>/RookieRoom/2020/05/19/get-he-zpost/</url>
      
        <content type="html"><![CDATA[<p>GET产生的URL地址可以被Bookmark，而POST不可以。</p><p>GET请求会被浏览器主动cache，而POST不会，除非手动设置。</p><p>GET请求只能进行url编码，而POST支持多种编码方式。</p><p>GET请求参数会被完整保留在浏览器历史记录里，而POST中的参数不会被保留。</p><p>GET请求在URL中传送的参数是有长度限制的，而POST么有。</p><p>对参数的数据类型，GET只接受ASCII字符，而POST没有限制。</p><p>GET比POST更不安全，因为参数直接暴露在URL上，所以不能用来传递敏感信息。</p><p>GET参数通过URL传递，POST放在Request body中。</p><p>详细链接：<a href="https://www.cnblogs.com/logsharing/p/8448446.html">https://www.cnblogs.com/logsharing/p/8448446.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> net </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>杂乱笔记2</title>
      <link href="/RookieRoom/2020/05/19/za-luan-bi-ji-2/"/>
      <url>/RookieRoom/2020/05/19/za-luan-bi-ji-2/</url>
      
        <content type="html"><![CDATA[<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="built_in">string</span>.Empty; </span><br><span class="line"><span class="comment">//String.Empty是string类的一个静态常量；</span></span><br><span class="line"><span class="comment">//string.Empty只是让代码好读，防止代码产生歧义</span></span><br><span class="line"><span class="comment">//如果判断一个字符串是否是空串，使用</span></span><br><span class="line"><span class="comment">//if(s==String.Empty)和if(s==””)的效率是一样的，但是最高效的写法是if(s.Length==0)</span></span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="析构函数"><a href="#析构函数" class="headerlink" title="析构函数"></a><strong>析构函数</strong></h3><blockquote><p><strong>首先析构函数的基本形式如下：</strong></p><p><strong>~ 标识符(就是类名啦) { &#x2F;* 析构函数体 *&#x2F; }</strong></p><p><strong>说明几点：</strong></p><p><strong>析构函数不能有程序显示的调用，是由系统在释放对象之前调用。</strong><br><strong>析构函数在C#中充当鸡肋的作用，因为C#有垃圾回收器清理资源。</strong><br><strong>析构函数是在垃圾回收器回收对象的空间之前调用的，最终会调用 System.Object的 Finalize()方法。</strong><br><strong>觉得析构函数也啥可说的，C#其实提供了 Dispose()和Close()方法来回收内存,三者的区别就如下啦：</strong> </p></blockquote><p><img src="https://img-blog.csdn.net/20170102142818771?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvempxXzEzMTQ1MjA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ResourceHolder</span> </span><br><span class="line">        &#123;</span><br><span class="line">            ......</span><br><span class="line">            ~ResourceHolder()</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 这里是清理非托管资源的用户代码段</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="SQL中PK、UK、DF、CK、FK的意思"><a href="#SQL中PK、UK、DF、CK、FK的意思" class="headerlink" title="SQL中PK、UK、DF、CK、FK的意思"></a>SQL中PK、UK、DF、CK、FK的意思</h3><p>PK 主键</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">constraint primary key</span><br></pre></td></tr></table></figure><p>UK 唯一约束</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">constraint unique key</span><br></pre></td></tr></table></figure><p>DF 约束默认</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">constrint default for</span><br></pre></td></tr></table></figure><p>CK 检查约束</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">constraint check()</span><br></pre></td></tr></table></figure><p>FK 主外键关系</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">constraint foreign references</span><br></pre></td></tr></table></figure><h3 id="SQL-检查约束整理"><a href="#SQL-检查约束整理" class="headerlink" title="SQL 检查约束整理"></a>SQL 检查约束整理</h3><p> 运算符：对于所有的运算符，可分为单目运算符和双目运算符。<br>目：操作数</p><h4 id="一、数学运算符：-x2F"><a href="#一、数学运算符：-x2F" class="headerlink" title="一、数学运算符：+ - * &#x2F; %"></a>一、数学运算符：+ - * &#x2F; %</h4><p>+5  -8<br>4+5  8-89<br>数学运算的结果仍是一个数字。 </p><h4 id="二、比较运算符："><a href="#二、比较运算符：" class="headerlink" title="二、比较运算符："></a>二、比较运算符：</h4><blockquote><p> &lt;  &lt;&#x3D;  &gt;&#x3D;  &#x3D; (!&#x3D; &lt;&gt;)<br> 比较运算符都是双目运算符。<br> 比较运算的结果是一个布尔值，即真或假，两者必居其一。</p></blockquote><h4 id="三、逻辑运算符："><a href="#三、逻辑运算符：" class="headerlink" title="三、逻辑运算符："></a>三、逻辑运算符：</h4><p>and  or  not &#x2F;&#x2F;   &amp;&amp; || !也叫逻辑运算的“与、或、非”运算。<br>三个逻辑运算符的操作数必须是布尔值。<br>三个运算符中，其中and和or 运算符是双目或多目，而not为单目</p><h4 id="cheeck语句例子"><a href="#cheeck语句例子" class="headerlink" title="cheeck语句例子"></a>cheeck语句例子</h4><p> 1.检查只能是男或者女 </p><blockquote><p>add const ck_sex check(sex in(‘男,女’)),</p></blockquote><blockquote><p> add const ck_sex check(sex &#x3D;’男’ or sex &#x3D;’女’)</p></blockquote><p>2.在一个范围中间</p><blockquote><blockquote><p>constraint ch_age check(sage&gt;0 and sage&lt;120),</p></blockquote><blockquote><p>add const ck_age check(age between 12 and 30)</p></blockquote></blockquote><p>3.长度大于某个值</p><blockquote><blockquote><p>add const ck_lenght check(len(lenght)&gt;6)</p></blockquote></blockquote><p>4.数大于某个值</p><blockquote><blockquote><p> add const ck_number ckeck(number&gt;1)</p></blockquote></blockquote><p>5.只能是8位字符,前两位是 0 ,3<del>4位为数字,第 5 位为下划线,6</del>8位为字母</p><blockquote><p>alter table 表名</p><p>add constraint chkk  check((字段 like ‘00[0-9][0-9]&#x2F;_[a-z,A-Z][a-z,A-Z][a-z,A-Z]%’ escape ‘&#x2F;‘)and(len(字段)&#x3D;8) )</p><p>或者是</p><p>alter table 表名</p><p>add constraint chkk  check((字段 like ‘00[0-9][0-9][_][a-z,A-Z][a-z,A-Z][a-z,A-Z]%’)and(len(字段)&#x3D;8) )</p></blockquote><p>6.电子邮箱要含有@符号</p><blockquote><blockquote><p>check(字段like ‘%@%’)</p></blockquote></blockquote><p>7.SQL中用check约束一列的首字母为’s’</p><blockquote><blockquote><p>check(col1 like ‘s%’)</p></blockquote></blockquote><p>8.检查约束前3位和后8位均为数字字符:</p><blockquote><blockquote><p>check(col2 like ‘[0-9][0-9][0-9]%[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]’)</p></blockquote></blockquote><p>9.如何建立检查身份证的约束,身份证是18位,最后一位还有可能是X</p><blockquote><blockquote><p>select 身份证号 from 表名</p></blockquote><blockquote><p>where len(身份证号) &#x3D; 18 and (right(身份证号,17) like  ‘[0-9]’or right(身份证号,17) like ‘x’)</p></blockquote></blockquote><p>10.如何设置区号由0-9之间的数字组成</p><blockquote><p>CONSTRAINT  quhao CHECK (quhao  LIKE ‘[0-9][0-9][0-9]’ </p><p>or quhao LIKE ‘[0-9][0-9][0-9][0-9]’or quhao LIKE ‘[0-9][0-9][0-9][0-9][0-9]’));</p><p>解释： 其中quhao LIKE ‘[0-9]…[0-9]’的号码由表示n位从0到9中的数组成。</p><p>quhao  LIKE ‘[0-9][0-9][0-9]’ 表示3位的区号，如北京010；quhao LIKE ‘[0-9][0-9][0-9][0-9]’表示4位的区号，如三门峡0398； quhao LIKE </p><p>‘[0-9][0-9][0-9][0-9][0-9]’表示5位的区号，如香港00852 </p></blockquote><p>11.最后回复时间 TLastClickT    发贴时间 TTime</p><blockquote><p>最后回复时间 必须晚于 发贴时间  并且小于等于当前时间 使用GetDate()函数获取当前时间</p><p>设计表</p><p>在TLastClickT上右击</p><p>选择约束,新建,填入</p><p>([TLastClickT] &gt; [TTime] and [TLastClickT] &lt; GetDate())</p><p>或者</p><p>TiastReply（回帖时间）大于Ttime（发帖时间）在创表的同时</p><p>创建表的时候应该还没有回帖吧，为什么要用默认值？</p><p>可以添加一个约束 alter table topic alter column add check(TlastReply is null or TlastReply &gt; Ttime)</p></blockquote><p> 12.定义前八位为数字或者 - </p><blockquote><p>一共是15位，为CHAR型</p><p>alter table 表名</p><p>add constraint chk check(字段 like’[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]%’),</p><p>constraint chklen check(len(字段)&#x3D;15)</p></blockquote><p>13.如何限制varchar字段不允许出现单引号的检查约束 ！！！</p><blockquote><p>设表为TALBENAME,不能有引号的字段为FIELDNAME 则：</p><p>ALTER TABLE tablename ADD CONSTRAINT CK_fieldname CHECK (not fieldname like ‘%’’%’)</p></blockquote><p>14.在表中的某列中通过检查约束，让其有某些固定的值</p><blockquote><p>check(sid like ‘bd[0-9][0-9][0-9][0-9][0-9][0-9]’)</p><p>add const ck_num check(num like ‘[1][2] [4][_] [0-9][0-9] [0-9][a-z]’)</p></blockquote><p>15.如何限制varchar字段不允许出现字符串的检查约束 ！！！</p><blockquote><p>设表名为TABLENAME,VARCHAR类型的字段为VAR_FIELD.则有：</p><p>ALTER TABLE [dbo].[TABLENAME] ADD CONSTRAINT [CK_TABLENAME] CHECK (isnumeric([VAR_FIELD]) &#x3D; 1)</p><p>这样，在VAR_FIELD只要出现字段一旦出现非数字内容就会报告错误。</p></blockquote><p>16.电话号码的格式必须为xxxx-xxxxxxxx或手机号11位 </p><blockquote><blockquote><p>alter 表名 add constraint ck_字段名 check （字段 like ‘[0-9][0-9][0-9][0-9]_[0-9]……’ or len(字段)&#x3D;11）</p></blockquote></blockquote><p>17.身份证号是18位且唯一的 </p><blockquote><blockquote><p>alter 表名 add </p></blockquote><blockquote><p>constraint ck_字段名 check （len(字段名)&#x3D;18 ），</p></blockquote><blockquote><p>constraint uk_字段名 unique（字段名）</p></blockquote></blockquote><h3 id="sqlserver的四种分页方式"><a href="#sqlserver的四种分页方式" class="headerlink" title="sqlserver的四种分页方式"></a>sqlserver的四种分页方式</h3><p>第一种：ROW_NUMBER() OVER()方式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> ( </span><br><span class="line">　　　　<span class="keyword">select</span> <span class="operator">*</span>, <span class="built_in">ROW_NUMBER</span>() <span class="keyword">OVER</span>(<span class="keyword">Order</span> <span class="keyword">by</span> ArtistId ) <span class="keyword">AS</span> RowId <span class="keyword">from</span> ArtistModels </span><br><span class="line">　　) <span class="keyword">as</span> b</span><br><span class="line"></span><br><span class="line">   <span class="keyword">where</span> RowId <span class="keyword">between</span> <span class="number">10</span> <span class="keyword">and</span> <span class="number">20</span> </span><br><span class="line">   　　<span class="comment">---where RowId BETWEEN 当前页数-1*条数 and 页数*条数---   </span></span><br></pre></td></tr></table></figure><p><img src="https://images2017.cnblogs.com/blog/1254692/201712/1254692-20171206174947769-1559858567.png"></p><p>第二种方式：offset fetch next方式（SQL2012以上的版本才支持：推荐使用 ）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> ArtistModels  <span class="keyword">order</span> <span class="keyword">by</span> ArtistId <span class="keyword">offset</span> <span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">fetch</span> next <span class="number">5</span> <span class="keyword">rows</span> <span class="keyword">only</span></span><br><span class="line">    <span class="comment">--order by ArtistId offset 页数 rows fetch next 条数 rows only --</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://images2017.cnblogs.com/blog/1254692/201712/1254692-20171206175318550-1080039002.png"></p><p>第三种方式：–top not in方式 （适应于数据库2012以下的版本）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> top <span class="number">3</span> <span class="operator">*</span> <span class="keyword">from</span> ArtistModels </span><br><span class="line"><span class="keyword">where</span> ArtistId <span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> top <span class="number">15</span> ArtistId <span class="keyword">from</span> ArtistModels)</span><br><span class="line"></span><br><span class="line"><span class="comment">------where Id not in (select top 条数*页数  ArtistId from ArtistModels) </span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://images2017.cnblogs.com/blog/1254692/201712/1254692-20171206175713863-1487420151.png"></p><p>第四种方式：用存储过程的方式进行分页 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">procedure</span> page_Demo</span><br><span class="line"><span class="variable">@tablename</span> <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line"><span class="variable">@pageSize</span> <span class="type">int</span>,</span><br><span class="line"><span class="variable">@page</span> <span class="type">int</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">declare</span> <span class="variable">@newspage</span> <span class="type">int</span>,</span><br><span class="line"><span class="variable">@res</span> <span class="type">varchar</span>(<span class="number">100</span>)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">set</span> <span class="variable">@newspage</span><span class="operator">=</span><span class="variable">@pageSize</span><span class="operator">*</span>(<span class="variable">@page</span> <span class="operator">-</span> <span class="number">1</span>)</span><br><span class="line"><span class="keyword">set</span> <span class="variable">@res</span><span class="operator">=</span><span class="string">&#x27;select * from &#x27;</span> <span class="operator">+</span><span class="variable">@tablename</span><span class="operator">+</span> <span class="string">&#x27; order by ArtistId offset &#x27;</span><span class="operator">+</span><span class="built_in">CAST</span>(<span class="variable">@newspage</span> <span class="keyword">as</span> <span class="type">varchar</span>(<span class="number">10</span>)) <span class="operator">+</span><span class="string">&#x27; rows fetch next &#x27;</span><span class="operator">+</span> <span class="built_in">CAST</span>(<span class="variable">@pageSize</span> <span class="keyword">as</span> <span class="type">varchar</span>(<span class="number">10</span>)) <span class="operator">+</span><span class="string">&#x27; rows only&#x27;</span></span><br><span class="line"><span class="keyword">exec</span>(<span class="variable">@res</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">EXEC</span> page_Demo <span class="variable">@tablename</span><span class="operator">=</span><span class="string">&#x27;ArtistModels&#x27;</span>,<span class="variable">@pageSize</span><span class="operator">=</span><span class="number">3</span>,<span class="variable">@page</span><span class="operator">=</span><span class="number">5</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://images2017.cnblogs.com/blog/1254692/201712/1254692-20171206175904269-970362849.png"></p><h3 id="sql重置标识符"><a href="#sql重置标识符" class="headerlink" title="sql重置标识符"></a>sql重置标识符</h3><p><img src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" alt="img">DBCC CHECKIDENT (‘table_name’, RESEED, 0)</p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> sql </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vs依赖项不被识别解决方案</title>
      <link href="/RookieRoom/2020/05/19/vs-yi-lai-xiang-bu-bei-shi-bie-jie-jue-fang-an/"/>
      <url>/RookieRoom/2020/05/19/vs-yi-lai-xiang-bu-bei-shi-bie-jie-jue-fang-an/</url>
      
        <content type="html"><![CDATA[<p>检查后缀，有可能是因为后缀不规范导致的</p>]]></content>
      
      
      
        <tags>
            
            <tag> 有趣的编程知识 </tag>
            
            <tag> vs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>什么是HTML，CSS和DOM</title>
      <link href="/RookieRoom/2020/05/19/shi-me-shi-htmlcss-he-dom/"/>
      <url>/RookieRoom/2020/05/19/shi-me-shi-htmlcss-he-dom/</url>
      
        <content type="html"><![CDATA[<p>html，用超文本标记语言，给浏览器识别的。<br>css，样式表，可以给html元素设置样式。<br>js，就是JavaScript ，是一种脚本语言，可以通过js操作html元素。<br>dom，HTML文档结构，是制订的上述JavaScript操作Html元素的规范。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> 有趣的编程知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript window.onload 事件和 jQuery ready 函数之间的主要区别是</title>
      <link href="/RookieRoom/2020/05/19/javascript-windowonload-shi-jian-he-jquery-ready-han-shu-zhi-jian-de-zhu-yao-qu-bie-shi/"/>
      <url>/RookieRoom/2020/05/19/javascript-windowonload-shi-jian-he-jquery-ready-han-shu-zhi-jian-de-zhu-yao-qu-bie-shi/</url>
      
        <content type="html"><![CDATA[<p>前者除了要等待 DOM 被创建还要等到包括大型图片、音频、视频在内的所有外部资源都完全加载。如果加载图片和媒体内容花费了大量时间，用户就会感受到定义在 window.onload 事件上的代码在执行时有明显的延迟。<br>另一方面，jQuery ready() 函数只需对 DOM 树的等待，而无需对图像或外部资源加载的等待，从而执行起来更快。使用 jQuery $(document).ready() 的另一个优势是你可以在网页里多次使用它，浏览器会按它们在 HTML 页面里出现的顺序执行它们，相反对于 onload 技术而言，只能在单一函数里使用。鉴于这个好处，用 jQuery ready() 函数比用 JavaScript window.onload 事件要更好些。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>display:none和visibility:hidden的区别？ </title>
      <link href="/RookieRoom/2020/05/19/displaynone-he-visibilityhidden-de-qu-bie/"/>
      <url>/RookieRoom/2020/05/19/displaynone-he-visibilityhidden-de-qu-bie/</url>
      
        <content type="html"><![CDATA[<p>1）如果给一个元素设置了display: none，那么该元素以及它的所有后代元素都会隐藏，它是前端开发人员使用频率最高的一种隐藏方式。隐藏后的元素无法点击，无法使用屏幕阅读器等辅助设备访问，占据的空间消失。    </p><p>给元素设置visibility: hidden也可以隐藏这个元素，但是隐藏元素仍需占用与未隐藏时一样的空间，也就是说虽然元素不可见了，但是仍然会影响页面布局。</p><p>2）<br>1、visibility具有继承性，给父元素设置visibility:hidden;子元素也会继承这个属性。但是如果重新给子元素设置visibility: visible,则子元素又会显示出来。这个和display: none有着质的区别</p><p>2、visibility: hidden不会影响计数器的计数，如图所示，visibility: hidden虽然让一个元素不见了，但是其计数器仍在运行。这和display: none完全不一样</p><p>3）CSS3的transition支持visibility属性，但是并不支持display，由于transition可以延迟执行，因此可以配合visibility使用纯css实现hover延时显示效果。提高用户体验。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS事件实现的方式有几种</title>
      <link href="/RookieRoom/2020/05/19/js-shi-jian-shi-xian-de-fang-shi-you-ji-chong/"/>
      <url>/RookieRoom/2020/05/19/js-shi-jian-shi-xian-de-fang-shi-you-ji-chong/</url>
      
        <content type="html"><![CDATA[<p>1）在DOM元素中直接绑定；<br>2）在JavaScript代码中绑定；<br>3）绑定事件监听函数。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>请说明一种优化页面显示图片的方案 (转）</title>
      <link href="/RookieRoom/2020/05/19/qing-shuo-ming-yi-chong-you-hua-ye-mian-xian-shi-tu-pian-de-fang-an-zhuan/"/>
      <url>/RookieRoom/2020/05/19/qing-shuo-ming-yi-chong-you-hua-ye-mian-xian-shi-tu-pian-de-fang-an-zhuan/</url>
      
        <content type="html"><![CDATA[<p>最近写加载大量图片的页面，由于服务器不给了，不能一次性加载全部图片，卡卡的，</p><p>于是参考很多github的例子以及博客园——“蜗牛闯红灯”大佬的博客，对页面进行优化，</p><p>当你鼠标拉下，浏览到某个div时候，才加载那一块的图片，简称：</p><p>1.　图片懒加载 lazy load在页面上的未可视区域可以添加一个滚动条事件，</p><p>判断图片位置与浏览器顶端的距离与页面的距离，如果前者小于后者，优先加载。</p><p>　　什么是图片懒加载问题：</p><p>　　对于图片过多的页面，为了加速页面加载速度，<br>所以很多时候我们需要将页面内未出现在可视区域内的图片先不做加载， 等到滚动到可视区域后再去加载。<br>这样子对于页面加载性能上会有很大的提升，也提高了用户体验。</p><span id="more"></span><p>2、实现方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;loading.gif&quot; data-src=&quot;http://xxx.ooo.com&quot; /&gt;</span><br></pre></td></tr></table></figure><p>然后将页面img标签获取并保存，开启一个定时器，遍历保存的img标签，<br>判断其位置是否出现在了可视区域内。如果出现在可视区域了那么就把真实的src地址给赋值上。<br>并且从数组中删除，避免重复判断。 那么你可能会问，如何判断是否出现在可视区域内吗？<br>那就是你可以获取当前img的相对于文档顶的偏移距离减去scrollTop的距离，<br>然后和浏览器窗口高度在进行比较，如果小于浏览器窗口则出现在了可视区域内了，<br>反之，则没有。</p><p>如图，往下面拉会出现白色的图案，渐变出下一张图片<br>如果<br>1、网速慢，<br>2、电脑卡<br>3、图片识别错误等 将会显示一个小小的gif图片，显示正在加载</p><p>3、代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--主要是三个js：jquery，jquery.lazyload，urchin--&gt;</span></span><br><span class="line">/**************************************************/</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=utf-8&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Lazy Load Enabled With FadeIn Effect<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;http://www.appelsiini.net/stylesheets/main2.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-id">#sidebar</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">0px</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-id">#content</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">770px</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;wrap&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Lazy Load(懒加载)<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">small</span>&gt;</span>Image lazy loader plugin for jQuery.<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;nav&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">&quot;first&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span>weblog<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span>projects<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;entry&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/load.gif&quot;</span> <span class="attr">data-original</span>=<span class="string">&quot;img/one.png&quot;</span> <span class="attr">width</span>=<span class="string">&quot;750&quot;</span> <span class="attr">height</span>=<span class="string">&quot;521&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;京紫1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/load.gif&quot;</span> <span class="attr">data-original</span>=<span class="string">&quot;img/two.png&quot;</span> <span class="attr">width</span>=<span class="string">&quot;580&quot;</span> <span class="attr">height</span>=<span class="string">&quot;937&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;京紫2&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/load.gif&quot;</span> <span class="attr">data-original</span>=<span class="string">&quot;img/three.png&quot;</span> <span class="attr">width</span>=<span class="string">&quot;750&quot;</span> <span class="attr">height</span>=<span class="string">&quot;421&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;动漫1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/load.gif&quot;</span> <span class="attr">data-original</span>=<span class="string">&quot;img/four.png&quot;</span> <span class="attr">width</span>=<span class="string">&quot;510&quot;</span> <span class="attr">height</span>=<span class="string">&quot;287&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;丹特丽安&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/load.gif&quot;</span> <span class="attr">data-original</span>=<span class="string">&quot;img/five.png&quot;</span> <span class="attr">width</span>=<span class="string">&quot;750&quot;</span> <span class="attr">height</span>=<span class="string">&quot;422&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;动漫2&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/load.gif&quot;</span> <span class="attr">data-original</span>=<span class="string">&quot;img/six.png&quot;</span>  <span class="attr">width</span>=<span class="string">&quot;800&quot;</span> <span class="attr">height</span>=<span class="string">&quot;436&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;月山比吕&quot;</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery-3.3.1.js&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery.lazyload.js?v=3&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;urchin.js&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      $(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          $(<span class="string">&quot;img&quot;</span>).<span class="title function_">lazyload</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">              effect : <span class="string">&quot;fadeIn&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">          &#125;);</span></span><br><span class="line"><span class="language-javascript">      &#125;);</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> 有趣的编程知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>列出display的值，说明他们的作用。position的值， relative和absolute分别是相对于谁进行定位的</title>
      <link href="/RookieRoom/2020/05/19/lie-chu-display-de-zhi-shuo-ming-ta-men-de-zuo-yong-position-de-zhi-relative-he-absolute-fen-bie-shi-xiang-dui-yu-shui-jin-xing-ding-wei-de/"/>
      <url>/RookieRoom/2020/05/19/lie-chu-display-de-zhi-shuo-ming-ta-men-de-zuo-yong-position-de-zhi-relative-he-absolute-fen-bie-shi-xiang-dui-yu-shui-jin-xing-ding-wei-de/</url>
      
        <content type="html"><![CDATA[<p>display 的值的作用：<br>1.block          像块类型元素一样显示。</p><p>2.inline          像行内元素类型一样显示。</p><p>3.inline-block 整体行内元素一样显示（不换行），但其内容像块类型元素一样显示（可以设置宽高）</p><p>4.list-item      像块类型元素一样显示，并添加样式列表标记。</p><p>position 的值的定位区别：<br>1.absolute 生成绝对定位的元素，相对于第一个已经定位的父元素进行定位。</p><p>2.fixed 生成固定定位的元素，相对于浏览器窗口进行定位（老IE不支持）。</p><p>3.relative 生成相对定位的元素，相对于自己在普通流中的位置进行定位。</p><p>4.static 默认值。</p><p>5.inherit 规定从父元素继承 position 属性的值。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> html </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>position的absolute与ﬁxed共同点与不同点</title>
      <link href="/RookieRoom/2020/05/19/position-de-absolute-yu-fixed-gong-tong-dian-yu-bu-tong-dian/"/>
      <url>/RookieRoom/2020/05/19/position-de-absolute-yu-fixed-gong-tong-dian-yu-bu-tong-dian/</url>
      
        <content type="html"><![CDATA[<p>共同点：</p><p>1、改变行内元素的呈现方式，将display置为inline-block  </p><p>2、使元素脱离普通文档流，不再占据文档物理空间</p><p>3、覆盖非定位文档元素</p><p>不同点：</p><p>1、abuselute与fixed的根元素不同，abuselute的根元素可以设置，fixed根元素是浏览器。</p><p>滚动网页，fixed与浏览器的距离是不变的。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> html </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>杂乱笔记1</title>
      <link href="/RookieRoom/2020/05/19/za-luan-bi-ji-1/"/>
      <url>/RookieRoom/2020/05/19/za-luan-bi-ji-1/</url>
      
        <content type="html"><![CDATA[<h1 id="一、枚举"><a href="#一、枚举" class="headerlink" title="一、枚举"></a>一、枚举</h1><blockquote><p>枚举类型声明为一组相关的符号常数定义了一个类型名称。枚举用于“多项选择”场合，就是程序运行时从编译时已经设定的固定数目的“选择”中做出决定。 </p><p>枚举类型（也称为枚举）为定义一组可以赋给变量的命名整数常量提供了一种有效的方法。例如，假设您必须定义一个变量，该变量的值表示一周中的一天。该变量只能存储七个有意义的值。若要定义这些值，可以使用枚举类型。枚举类型是使用 enum 关键字声明的。  </p></blockquote><span id="more"></span><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">enum</span> Days</span><br><span class="line">&#123;</span><br><span class="line">Sunday, </span><br><span class="line">Monday, </span><br><span class="line">Tuesday, </span><br><span class="line">Wednesday, </span><br><span class="line">Thursday,</span><br><span class="line">Friday, </span><br><span class="line">Saturday </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p> 默认情况下，枚举中每个元素的基础类型是 int。可以使用冒号指定另一种整数值类型。</p><p> 如果不为枚举数列表中的元素指定值，则它们的值将以 1 为增量自动递增。在前面的示例中，Days.Sunday 的值为 0，Days.Monday 的值为 1，依此类推。创建新的 Days 对象时，如果不显式为其赋值，则它将具有默认值 Days.Sunday (0)。创建枚举时，应选择最合理的默认值并赋给它一个零值。这便使得只要在创建枚举时未为其显式赋值，则所创建的全部枚举都将具有该默认值。枚举中大小写敏感，但是建议不要这样。 </p></blockquote><h2 id="枚举的优点"><a href="#枚举的优点" class="headerlink" title="枚举的优点"></a>枚举的优点</h2><ol><li>枚举可以使代码更易于维护，有助于确保给变量指定合法的、期望的值。 </li><li>枚举使代码更清晰，允许用描述性的名称表示整数值，而不是用含义模糊的数来表示。 </li><li>枚举使代码更清晰，允许用描述性的名称表示整数值，而不是用含义模糊的数来表示。</li></ol><h2 id="枚举实例"><a href="#枚举实例" class="headerlink" title="枚举实例"></a>枚举实例</h2><h3 id="声明："><a href="#声明：" class="headerlink" title="声明："></a>声明：</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">enum</span> TimeOfDay</span><br><span class="line">&#123;</span><br><span class="line">    Moning = <span class="number">0</span>,</span><br><span class="line">    Afternoon = <span class="number">1</span>,</span><br><span class="line">    Evening = <span class="number">2</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="使用："><a href="#使用：" class="headerlink" title="使用："></a>使用：</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">getTimeOfDay</span>(<span class="params">TimeOfDay time</span>)</span></span><br><span class="line">   &#123;</span><br><span class="line">       <span class="built_in">string</span> result = <span class="built_in">string</span>.Empty;</span><br><span class="line">       <span class="keyword">switch</span> (time)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">case</span> TimeOfDay.Moning:</span><br><span class="line">               result = <span class="string">&quot;上午&quot;</span>;</span><br><span class="line">               <span class="keyword">break</span>;</span><br><span class="line">           <span class="keyword">case</span> TimeOfDay.Afternoon:</span><br><span class="line">               result = <span class="string">&quot;下午&quot;</span>;</span><br><span class="line">               <span class="keyword">break</span>;</span><br><span class="line">           <span class="keyword">case</span> TimeOfDay.Evening:</span><br><span class="line">               result = <span class="string">&quot;晚上&quot;</span>;</span><br><span class="line">               <span class="keyword">break</span>;</span><br><span class="line">           <span class="literal">default</span>:</span><br><span class="line">               result = <span class="string">&quot;未知&quot;</span>;</span><br><span class="line">               <span class="keyword">break</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> result;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="枚举方法"><a href="#枚举方法" class="headerlink" title="枚举方法"></a>枚举方法</h2><blockquote><p><strong>获取枚举字符串</strong></p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">TimeOfDay time = TimeOfDay.Afternoon;</span><br><span class="line"></span><br><span class="line">Console.WriteLine(time.ToString());<span class="comment">//输出：Afternoon</span></span><br></pre></td></tr></table></figure><blockquote><p> <strong>Enum.Parse()方法。这个方法带3个参数，第一个参数是要使用的枚举类型。其语法是关键字typeof后跟放在括号中的枚举类名。typeof运算符将在第5章详细论述。第二个参数是要转换的字符串，第三个参数是一个bool，指定在进行转换时是否忽略大小写。最后，注意Enum.Parse()方法实际上返回一个对象引用—— 我们需要把这个字符串显式转换为需要的枚举类型(这是一个取消装箱操作的例子)。对于上面的代码，将返回1，作为一个对象，对应于TimeOfDay.Afternoon的枚举值。在显式转换为int时，会再次生成1。</strong> </p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">TimeOfDay time2 = (TimeOfDay) Enum.Parse(<span class="keyword">typeof</span>(TimeOfDay), <span class="string">&quot;afternoon&quot;</span>, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">Console.WriteLine((<span class="built_in">int</span>)time2);<span class="comment">//输出1</span></span><br></pre></td></tr></table></figure><blockquote><p> <strong>得到枚举的某一值对应的名称</strong> </p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lbOne.Text = Enum.GetName(<span class="keyword">typeof</span>(TimeOfDay), <span class="number">0</span>);</span><br></pre></td></tr></table></figure><blockquote><p> <strong>得到枚举的所有的值</strong>  </p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span> (<span class="built_in">int</span> i <span class="keyword">in</span> Enum.GetValues(<span class="keyword">typeof</span>(TimeOfDay)))</span><br><span class="line">            lbValues.Text += i.ToString();</span><br></pre></td></tr></table></figure><blockquote><p> <strong>枚举所有的名称</strong>  </p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span>(<span class="built_in">string</span> temp <span class="keyword">in</span> Enum.GetNames(<span class="keyword">typeof</span>(TimeOfDay)))</span><br><span class="line">            lbNames.Text+=temp;</span><br></pre></td></tr></table></figure><h2 id="枚举和常量"><a href="#枚举和常量" class="headerlink" title="枚举和常量"></a>枚举和常量</h2><blockquote><p> <strong>优先考虑枚举。</strong></p><p> 　　<strong>在C#中，枚举的真正强大之处是它们在后台会实例化为派生于基类System.Enum的结构。这表示可以对它们调用方法，执行有用的任务。注意因为.NET Framework的执行方式，在语法上把枚举当做结构是不会有性能损失的。实际上，一旦代码编译好，枚举就成为基本类型，与int和float类似。</strong></p><p> 　　<strong>但是在实际应用中，你也许会发现，我们经常用英语定义枚举类型，因为开发工具本来就是英文开发的，美国人用起来，就直接能够明白枚举类型的含义。其实，我们在开发的时候就多了一步操作，需要对枚举类型进行<a href="http://www.knowsky.com/tools/zaixianfanyi.asp">翻译</a>。没办法，谁让编程语言是英语写的，如果是汉语写的，那我们也就不用翻译了，用起枚举变得很方便了。举个简单的例子，TimeOfDay.Morning一看到Morning，美国人就知道是上午，但是对于中国的使用者来说，可能有很多人就看不懂，这就需要我们进行翻译、解释，就向上面的getTimeOfDay()的方法，其实就是做了翻译工作。所以，在使用枚举的时候，感觉到并不是很方便，有的时候我们还是比较乐意创建常量，然后在类中，声明一个集合来容纳常量和其意义。</strong></p><p> 　　<strong>使用常量定义：这种方法固然可行，但是不能保证传入的参数day就是实际限定的。</strong> </p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TimesOfDay</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">const</span> <span class="built_in">int</span> Morning = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">const</span> <span class="built_in">int</span> Afternoon = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">const</span> <span class="built_in">int</span> Evening = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Dictionary&lt;<span class="built_in">int</span>, <span class="built_in">string</span>&gt; list;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 获得星期几</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;day&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">getTimeNameOfDay</span>(<span class="params"><span class="built_in">int</span> time</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (list == <span class="literal">null</span> || list.Count &lt;= <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            list = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">int</span>, <span class="built_in">string</span>&gt;();</span><br><span class="line">            list.Add(Morning, <span class="string">&quot;上午&quot;</span>);</span><br><span class="line">            list.Add(Afternoon, <span class="string">&quot;下午&quot;</span>);</span><br><span class="line">            list.Add(Evening, <span class="string">&quot;晚上&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> list[time];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p> <strong>希望能够找到一种比较好的方法，将枚举转为我们想要的集合。搜寻了半天终于找到了一些线索。通过反射，得到针对某一枚举类型的描述。</strong> </p></blockquote><blockquote><p> <strong>枚举的定义中加入描述</strong>  </p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">enum</span> TimeOfDay</span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Description(<span class="string">&quot;上午&quot;</span>)</span>]</span><br><span class="line">    Moning,</span><br><span class="line">    [<span class="meta">Description(<span class="string">&quot;下午&quot;</span>)</span>]</span><br><span class="line">    Afternoon,</span><br><span class="line">    [<span class="meta">Description(<span class="string">&quot;晚上&quot;</span>)</span>]</span><br><span class="line">    Evening,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p> <strong>获得值和表述的键值对</strong> </p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 从枚举类型和它的特性读出并返回一个键值对</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;enumType&quot;&gt;</span>Type,该参数的格式为typeof(需要读的枚举类型)<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>键值对<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> NameValueCollection <span class="title">GetNVCFromEnumValue</span>(<span class="params">Type enumType</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            NameValueCollection nvc = <span class="keyword">new</span> NameValueCollection();</span><br><span class="line">            Type typeDescription = <span class="keyword">typeof</span>(DescriptionAttribute);</span><br><span class="line">            System.Reflection.FieldInfo[] fields = enumType.GetFields();</span><br><span class="line">            <span class="built_in">string</span> strText = <span class="built_in">string</span>.Empty;</span><br><span class="line">            <span class="built_in">string</span> strValue = <span class="built_in">string</span>.Empty;</span><br><span class="line">            <span class="keyword">foreach</span> (FieldInfo field <span class="keyword">in</span> fields)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (field.FieldType.IsEnum)</span><br><span class="line">                &#123;</span><br><span class="line">                    strValue = ((<span class="built_in">int</span>)enumType.InvokeMember(field.Name, BindingFlags.GetField, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>)).ToString();</span><br><span class="line">                    <span class="built_in">object</span>[] arr = field.GetCustomAttributes(typeDescription, <span class="literal">true</span>);</span><br><span class="line">                    <span class="keyword">if</span> (arr.Length &gt; <span class="number">0</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        DescriptionAttribute aa = (DescriptionAttribute)arr[<span class="number">0</span>];</span><br><span class="line">                        strText = aa.Description;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        strText = field.Name;</span><br><span class="line">                    &#125;</span><br><span class="line">                    nvc.Add(strText, strValue);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> nvc;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="NET中Flags枚举的使用"><a href="#NET中Flags枚举的使用" class="headerlink" title=".NET中Flags枚举的使用"></a>.NET中Flags枚举的使用</h2><blockquote><p> .<strong>NET中的枚举我们一般有两种用法，一是表示唯一的元素序列，例如一周里的各天；还有就是用来表示多种复合的状态。这个时候一般需要为枚举加上[Flags]特性标记为位域，例如：</strong> </p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">Flags</span>] </span><br><span class="line"><span class="built_in">enum</span> Styles&#123; </span><br><span class="line">ShowBorder = <span class="number">1</span>,         <span class="comment">//是否显示边框</span></span><br><span class="line">ShowCaption = <span class="number">2</span>,        <span class="comment">//是否显示标题</span></span><br><span class="line">ShowToolbox = <span class="number">4</span>         <span class="comment">//是否显示工具箱</span></span><br><span class="line">&#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p> <strong>这样我们就可以用”或”运算符组合多个状态，例如：</strong> </p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">myControl.Style = Styles.ShowBorder | Styles.ShowCaption;  </span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p> <strong>这时myControl.Style枚举的值将变成 1+2&#x3D;3，它的ToString()将变成 “Styles.ShowBorder , Styles.ShowCaption”</strong> </p><p> <strong>这里我们可以解释为什么第三个值ShowToolbox可以为4,5..而不能为3。也就是说它的值不应该是前几项值的复合值。有一个比较简单的方法就是用2的n次方来依次为每一项赋值，例如 1,2,4,8,16,32,64…..</strong>  </p></blockquote><blockquote><p> <strong>现在举个常见的Flags应用例子。例如一个简单的权限系统，有”Admin”和”User”两种角色，我们可以在表中放一个 varchar()字段，以文本形式存放权限字”Admin,User”。但是用Flags型枚举的话，我们就可以直接将 Roles.Admin | Roles.User 的值放在一个int字段里。</strong> </p></blockquote><blockquote><p> <strong>以下是关于枚举的一些常见操作：</strong> </p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//将枚举的值变回枚举对象：  </span></span><br><span class="line">Styles style = (Styles) Enum.Parse(<span class="keyword">typeof</span>(Styles), <span class="number">4</span> );  </span><br><span class="line"><span class="comment">// -&gt; style = Styles.Toolbox; </span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//检查枚举是否包含某个元素： </span></span><br><span class="line"><span class="built_in">bool</span> hasFlag = ((style &amp; Styles.ShowBorder) != <span class="number">0</span>); </span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p> <strong>其实我们还会碰到一种情况，就是需要从组合状态中去掉一个元素。用”^”运算符可以做到：</strong> </p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Styles style = Styles.ShowBorder | Styles.ShowCaption; </span><br><span class="line">style = style ^ Styles.ShowBorder; </span><br><span class="line"><span class="comment">//这个时候style的值就会变成 Styles.ShowCaption </span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p><strong>但这里有一个很严重的问题(偶现在才发现)</strong><br><strong>我们这个时候再执行一次</strong><br><strong>style &#x3D; style ^ Styles.ShowBorder;</strong><br><strong>按照我们的设想，这个时候 style 的值是 Styles.ShowCaption，不包含 Styles.ShowBorder，所以我们就算去掉这个元素，style应该还是不会变。但实际的 style 的值却又变成了 Styles.ShowBorder | Styles.ShowCaption !! 再执行一遍，又会去掉这个元素，周而复始。</strong> </p><p><strong>当然我们可以在去掉某个元素前做一番检查，如果枚举包含这个元素，再去掉它：</strong> </p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ((style &amp; Styles.ShowBorder) != <span class="number">0</span>)&#123; </span><br><span class="line">style = style ^ Styles.ShowBorder; </span><br><span class="line">&#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p> <strong>不知道有没有其它方法可以方便地从Flags枚举状态中去掉一个元素。。</strong>  </p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Thanks to mobilebilly: </span><br><span class="line">style = style &amp; (~Styles.ShowBorder) <span class="comment">//可以方便去掉一个元素。</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="好好利用枚举"><a href="#好好利用枚举" class="headerlink" title="好好利用枚举"></a>好好利用枚举</h2><blockquote><p> <strong>这段时间手里有个有关订单的项目，订单一般有个状态的，以前很多要时候都会想到订单的状态就那几个种，就把它写死吧，不用一个<a href="http://www.knowsky.com/sql.asp">&#x3D;&#x3D;数据库&#x3D;&#x3D;</a>表了，太浪费资源了，但写死了用一个数字来代表一种订单状态，这样在编码时还要记得什么数字代码什么状态，如果不小心把它写错了，会导致数据出错。</strong><br> <strong>后来想到.NET有个枚举，这么好的东西为何不用上来呢，这不但可以方便以后的代码维护，也方便编码。</strong> </p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">enum</span> OrderState</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 无效状态</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    Invalid = <span class="number">0</span>,</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 客户询价</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    CustomerQuery = <span class="number">1</span>,</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 客户落单</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    CustomerOrdered = <span class="number">2</span>,</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 客户付款</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    ReceiverCustomerPayment = <span class="number">4</span>,</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 向供货商订货</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    SupplierOrdered = <span class="number">8</span>,</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 供货商确认货期</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    SupplierOrderTerm = <span class="number">16</span>,</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 收到货品</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    RecieverGoods = <span class="number">32</span>,</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 客户取消订单</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    CustomerCanceled = <span class="number">64</span>,</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 供货商取消订单</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    SupplierCancelded = <span class="number">128</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p><strong>但要从UI层看这些状态怎么处理呢？</strong></p><p><strong>利用switch case</strong> </p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetOrderStateString</span>(<span class="params">OrderState state</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">switch</span> (state)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> OrderState.Invalid:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;无效值&quot;</span>;</span><br><span class="line">            <span class="keyword">case</span> OrderState.CustomerOrdered:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;客户下单&quot;</span>;</span><br><span class="line">            <span class="keyword">case</span> OrderState.CustomerCanceled:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;客户取消订单&quot;</span>;</span><br><span class="line">            <span class="keyword">case</span> OrderState.CustomerQuery:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;客户询价&quot;</span>;</span><br><span class="line">            <span class="keyword">case</span> OrderState.ReceiverCustomerPayment:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;客户已付款&quot;</span>;</span><br><span class="line">            <span class="keyword">case</span> OrderState.RecieverGoods:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;订单到货&quot;</span>;</span><br><span class="line">            <span class="keyword">case</span> OrderState.SupplierCancelded:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;供货商取消&quot;</span>;</span><br><span class="line">            <span class="keyword">case</span> OrderState.SupplierOrdered:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;已向供货商订货&quot;</span>;</span><br><span class="line">            <span class="keyword">case</span> OrderState.SupplierOrderTerm:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;供货商确认货期&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p> <strong>如果以后还有更多的订单状态就修改这个枚举和一个方法就行了，这么方便的东西为何就不用到我的程序中呢，我们在编码中，要想尽方法使代码简单、易用、易维护。</strong></p></blockquote><h2 id="枚举中有两个很实用的方法"><a href="#枚举中有两个很实用的方法" class="headerlink" title="枚举中有两个很实用的方法"></a>枚举中有两个很实用的方法</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、GetHashCode()  <span class="comment">//返回该实例的值的哈希代码</span></span><br><span class="line"><span class="number">2</span>、ToString()      <span class="comment">//将此实例的值转换为其等效的字符串表示 </span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="二、结构体"><a href="#二、结构体" class="headerlink" title="二、结构体"></a>二、结构体</h1><p>在 C# 中，结构体是一种值数据类型。包含数据成员和方法成员。 <strong>struct</strong> 关键字是用于创建一个结构体。</p><p>结构体是用来代表一个记录。假设你想追踪一个图书馆的书。你可能想追踪每本书的属性如下：</p><ul><li>标题</li><li>作者</li><li>类别</li><li>书号</li></ul><h2 id="定义一个结构体"><a href="#定义一个结构体" class="headerlink" title="定义一个结构体"></a>定义一个结构体</h2><p>定义一个结构体，你必须要声明这个结构体。结构体声明定义了一种新的数据类型，这个数据类型为你的程序包含了一个以上的成员变量。</p><p>例如，你可以声明一个书的结构如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> Books</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="built_in">string</span> title;</span><br><span class="line">   <span class="keyword">public</span> <span class="built_in">string</span> author;</span><br><span class="line">   <span class="keyword">public</span> <span class="built_in">string</span> subject;</span><br><span class="line">   <span class="keyword">public</span> <span class="built_in">int</span> book_id;</span><br><span class="line">&#125;;  </span><br><span class="line"></span><br></pre></td></tr></table></figure><p> 下面的程序显示了结构体的用法： </p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">struct</span> Books</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="built_in">string</span> title;</span><br><span class="line">   <span class="keyword">public</span> <span class="built_in">string</span> author;</span><br><span class="line">   <span class="keyword">public</span> <span class="built_in">string</span> subject;</span><br><span class="line">   <span class="keyword">public</span> <span class="built_in">int</span> book_id;</span><br><span class="line">&#125;;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">testStructure</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">   &#123;</span><br><span class="line"></span><br><span class="line">      Books Book1;   <span class="comment">/* 将 Book1 声明为 Book 类型  */</span></span><br><span class="line">      Books Book2;   <span class="comment">/* 将 Book2 声明为 Book 类型 */</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">/* book 1 specification */</span></span><br><span class="line">      Book1.title = <span class="string">&quot;C Programming&quot;</span>;</span><br><span class="line">      Book1.author = <span class="string">&quot;Nuha Ali&quot;</span>; </span><br><span class="line">      Book1.subject = <span class="string">&quot;C Programming Tutorial&quot;</span>;</span><br><span class="line">      Book1.book_id = <span class="number">6495407</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">/* book 2 详细数据 */</span></span><br><span class="line">      Book2.title = <span class="string">&quot;Telecom Billing&quot;</span>;</span><br><span class="line">      Book2.author = <span class="string">&quot;Zara Ali&quot;</span>;</span><br><span class="line">      Book2.subject =  <span class="string">&quot;Telecom Billing Tutorial&quot;</span>;</span><br><span class="line">      Book2.book_id = <span class="number">6495700</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">/* 打印 Book1 信息 */</span></span><br><span class="line">      Console.WriteLine( <span class="string">&quot;Book 1 title : &#123;0&#125;&quot;</span>, Book1.title);</span><br><span class="line">      Console.WriteLine(<span class="string">&quot;Book 1 author : &#123;0&#125;&quot;</span>, Book1.author);</span><br><span class="line">      Console.WriteLine(<span class="string">&quot;Book 1 subject : &#123;0&#125;&quot;</span>, Book1.subject);</span><br><span class="line">      Console.WriteLine(<span class="string">&quot;Book 1 book_id :&#123;0&#125;&quot;</span>, Book1.book_id);</span><br><span class="line"></span><br><span class="line">      <span class="comment">/* 打印 Book2 信息 */</span></span><br><span class="line">      Console.WriteLine(<span class="string">&quot;Book 2 title : &#123;0&#125;&quot;</span>, Book2.title);</span><br><span class="line">      Console.WriteLine(<span class="string">&quot;Book 2 author : &#123;0&#125;&quot;</span>, Book2.author);</span><br><span class="line">      Console.WriteLine(<span class="string">&quot;Book 2 subject : &#123;0&#125;&quot;</span>, Book2.subject);</span><br><span class="line">      Console.WriteLine(<span class="string">&quot;Book 2 book_id : &#123;0&#125;&quot;</span>, Book2.book_id);       </span><br><span class="line"></span><br><span class="line">      Console.ReadKey();</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p> 编译执行上述代码，得到如下结果： </p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Book <span class="number">1</span> title : C Programming</span><br><span class="line">Book <span class="number">1</span> author : Nuha Ali</span><br><span class="line">Book <span class="number">1</span> subject : C Programming Tutorial</span><br><span class="line">Book <span class="number">1</span> book_id : <span class="number">6495407</span></span><br><span class="line">Book <span class="number">2</span> title : Telecom Billing</span><br><span class="line">Book <span class="number">2</span> author : Zara Ali</span><br><span class="line">Book <span class="number">2</span> subject : Telecom Billing Tutorial</span><br><span class="line">Book <span class="number">2</span> book_id : <span class="number">6495700</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="结构体的特征"><a href="#结构体的特征" class="headerlink" title="结构体的特征"></a>结构体的特征</h2><p>你已经使用了一个名为 Books 的简单结构体。C# 中的结构体与传统的 C 或者 C++ 有明显的不同。 C# 中的结构体有以下特征：</p><ul><li>结构体可以有方法，域，属性，索引器，操作方法，和事件。</li><li>结构体可以定义构造函数，但是不能构造析构函数。尽管如此，你还是不能定义一个结构体的默认构造函数。默认构造函数是自动定义的，且不能被改变。</li><li>与类不同，结构体不能继承其他的结构体或这其他的类。</li><li>结构体不能用于作为其他结构或者类的基。</li><li>结构体可以实现一个或多个接口。</li><li>结构体成员不能被指定为抽象的，虚拟的，或者保护的对象。</li><li>使用 <strong>New</strong> 运算符创建结构体对象时，将创建该结构体对象，并且调用适当的构造函数。与类不同的是，结构体的实例化可以不使用 New 运算符。</li><li>如果不使用 New 操作符，那么在初始化所有字段之前，字段将保持未赋值状态，且对象不可用。</li></ul><h2 id="类和结构体"><a href="#类和结构体" class="headerlink" title="类和结构体"></a>类和结构体</h2><p>类和结构体有以下几个主要的区别：</p><ul><li>类是引用类型，结构体是值类型</li><li>结构体不支持继承</li><li>结构体不能有默认构造函数</li></ul><p>针对上述讨论，让我们重写前面的例子：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">struct</span> Books</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">private</span> <span class="built_in">string</span> title;</span><br><span class="line">   <span class="keyword">private</span> <span class="built_in">string</span> author;</span><br><span class="line">   <span class="keyword">private</span> <span class="built_in">string</span> subject;</span><br><span class="line">   <span class="keyword">private</span> <span class="built_in">int</span> book_id;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getValues</span>(<span class="params"><span class="built_in">string</span> t, <span class="built_in">string</span> a, <span class="built_in">string</span> s, <span class="built_in">int</span> id</span>)</span></span><br><span class="line">   &#123;</span><br><span class="line">      title = t;</span><br><span class="line">      author = a;</span><br><span class="line">      subject = s;</span><br><span class="line">      book_id = id;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">display</span>()</span></span><br><span class="line">   &#123;</span><br><span class="line">      Console.WriteLine(<span class="string">&quot;Title : &#123;0&#125;&quot;</span>, title);</span><br><span class="line">      Console.WriteLine(<span class="string">&quot;Author : &#123;0&#125;&quot;</span>, author);</span><br><span class="line">      Console.WriteLine(<span class="string">&quot;Subject : &#123;0&#125;&quot;</span>, subject);</span><br><span class="line">      Console.WriteLine(<span class="string">&quot;Book_id :&#123;0&#125;&quot;</span>, book_id);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">testStructure</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">   &#123;</span><br><span class="line"></span><br><span class="line">      Books Book1 = <span class="keyword">new</span> Books();    <span class="comment">/* 将 Book1 声明为 Book 类型  */</span></span><br><span class="line">      Books Book2 = <span class="keyword">new</span> Books();    <span class="comment">/* 将 Book2 声明为 Book 类型 */</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">/* book 1 详细信息 */</span></span><br><span class="line">      Book1.getValues(<span class="string">&quot;C Programming&quot;</span>,</span><br><span class="line">      <span class="string">&quot;Nuha Ali&quot;</span>, <span class="string">&quot;C Programming Tutorial&quot;</span>,<span class="number">6495407</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">/* book 2 详细信息 */</span></span><br><span class="line">      Book2.getValues(<span class="string">&quot;Telecom Billing&quot;</span>,</span><br><span class="line">      <span class="string">&quot;Zara Ali&quot;</span>, <span class="string">&quot;Telecom Billing Tutorial&quot;</span>, <span class="number">6495700</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">/* 打印 Book1 信息 */</span></span><br><span class="line">      Book1.display();</span><br><span class="line"></span><br><span class="line">      <span class="comment">/* 打印 Book2 信息 */</span></span><br><span class="line">      Book2.display(); </span><br><span class="line"></span><br><span class="line">      Console.ReadKey();</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p> 编译执行上述代码，得到如下结果： </p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Title : C Programming</span><br><span class="line">Author : Nuha Ali</span><br><span class="line">Subject : C Programming Tutorial</span><br><span class="line">Book_id : <span class="number">6495407</span></span><br><span class="line">Title : Telecom Billing</span><br><span class="line">Author : Zara Ali</span><br><span class="line">Subject : Telecom Billing Tutorial</span><br><span class="line">Book_id : <span class="number">6495700</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="三、七层网络"><a href="#三、七层网络" class="headerlink" title="三、七层网络"></a>三、七层网络</h1><p><img src="https://s1.51cto.com/oss/201909/19/b43212195d977d6a05684a78d2b3bc4a.jpeg-wh_651x-s_563001546.jpeg"></p><p><img src="https://img-blog.csdn.net/20180131003527468?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM2MjQ5NTI=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"></p><p><img src="https://img-blog.csdn.net/20180131003636168?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM2MjQ5NTI=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"></p><h2 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h2><blockquote><ul><li>主要指的是应用程序部分，比如我们的程序，应用层所产生的的数据成为应用层数据，典型的应用层协议，比如有HTTP协议，dubbo的rpc协议，这些都是由我们的应用层程序自己定义的；</li><li>主要是为了一些终端应用程序提供服务。直接面对着用户的</li></ul></blockquote><h2 id="表示层"><a href="#表示层" class="headerlink" title="表示层"></a>表示层</h2><blockquote><ul><li>这一层主要是对应用层的数据进行一些格式转换，加解密或者进行压缩和解压缩的功能；</li><li>主要进行对接收数据的解释、加密与解密、压缩与解压缩，确保一个系统的应用层发送的数据能被另一个系统的应用层识别</li></ul></blockquote><h2 id="会话层"><a href="#会话层" class="headerlink" title="会话层"></a>会话层</h2><blockquote><ul><li>会话层的主要作用是负责进程与进程之间会话的建立、管理以及终止的服务。</li><li>通过传输层建立数据传输的通路，主要在系统之间发起会话或者接收会话请求</li></ul></blockquote><h2 id="传输层："><a href="#传输层：" class="headerlink" title="传输层："></a>传输层：</h2><blockquote><ul><li>传输层提供了两台机器之间端口到端口的一个数据传输服务，因为应用层、表示层和会话层所针对的都是某个应用进程，而进程是和端口绑定的，但是同一台服务器上是可以有多个进程的，因而传输层提供的就是这种不同的端口到端口的访问，以实现区分不同进程之间的通信服务。在传输层最典型的协议有TCP和UDP协议，TCP提供的是面向连接的、可靠的数据传输服务，而UDP则是无连接的、不可靠的数据传输服务。在上面的图中我们也可以看出，经过传输层之后，数据会被加上TCP或者UDP头部，用以实现不同传输层协议的功能; </li><li>定义了一些数据传输的协议和端口号。 主要将接收的数据进行分段和传输，到达目的地址后在进行重组。 常把这一层的数据叫做段。</li></ul></blockquote><h2 id="网络层："><a href="#网络层：" class="headerlink" title="网络层："></a>网络层：</h2><blockquote><ul><li>传输层提供的是同一台主机上的端口到端口的传输服务，而网络层则提供的是不同主机之间的连接服务，最典型的网络层协议就是IP协议，网络层会将当前的数据包加上一个IP头部，从而实现目标机器的寻址; </li><li>主要将接收到的数据进行 IP 地址的封装与解封装。 常把这一层的数据叫做数据包。这一层设备是路由器。</li></ul></blockquote><h2 id="数据链路层："><a href="#数据链路层：" class="headerlink" title="数据链路层："></a>数据链路层：</h2><blockquote><ul><li>这一层是承接软件和硬件的一层，由于其会将当前的数据报发送到不稳定的物理层硬件上进行传输，因而为了保障数据的完整性和可靠性，数据链路层就提供了校验、确认和反馈等机制，用以提供可靠的数据报传输服务; </li><li>主要将接收到的数据进行 MAC 地址（网卡地址）的封装与解封装。 常把这一层的数据叫做帧。这一层常工作的设备是交换机。</li></ul></blockquote><h2 id="物理层："><a href="#物理层：" class="headerlink" title="物理层："></a>物理层：</h2><blockquote><ul><li>物理层的主要作用就是将0101这种二进制的比特流数据转换为光信号，用以在物理介质上进行传输。 </li><li>主要定义物理设备标准，如网线的接口类型、光纤的接口类型、各种传输介质的传输速率等。 主要作用是将数据最终编码为用 0、1 标识的比特流，通过物理介质传输，这一层的数据叫做比特。</li></ul></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> 有趣的编程知识 </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity学习杂乱笔记</title>
      <link href="/RookieRoom/2020/05/19/unity-xue-xi-za-luan-bi-ji/"/>
      <url>/RookieRoom/2020/05/19/unity-xue-xi-za-luan-bi-ji/</url>
      
        <content type="html"><![CDATA[<h4 id="Time-timeScale、游戏暂停"><a href="#Time-timeScale、游戏暂停" class="headerlink" title="Time.timeScale、游戏暂停"></a>Time.timeScale、游戏暂停</h4><blockquote><p> timeScale不会影响Update和LateUpdate的执行速度。因为FixedUpdate是根据时间来的，所以timeScale只会影响FixedUpdate的速度 </p><p> 会影响的是Time.time的时间， Time.timeScale影响的是Unity的游戏时间缩放比例。Unity里面所有跟时间有关系的东西都是根据timeScale来演算的 </p><p> 动画，粒子特效，声音播放也会受影响</p><p> 如果你想取到游戏的实际时间，那么使用Time.timeSinceLevelLoad就可以，前提是必须在Awake()方法以后再取，</p><p> 如果在Awake()方法里面取Time.realtimeSinceStartup会取出一个错误的值，在Start方法里面取的话就正常了。 </p></blockquote><blockquote><p>1.游戏暂停</p><p>设置 Time.timeScale ＝ 0；即可让游戏暂停。 其实我们暂停的主要是 人物动画，还有技能特效，比如一个火球打了一半。</p><p>如果游戏暂停以后想在暂停界面上继续播放一些不受Time.timeScale 影响的动画，那么我们就需要用到Time.realtimeSinceStartup </p></blockquote><span id="more"></span><h4 id="Random类"><a href="#Random类" class="headerlink" title="Random类"></a>Random类</h4><p><img src="https://t1.picb.cc/uploads/2019/11/18/kwJlnW.png"></p><h4 id="SmoothDamp-制作相机跟踪效果"><a href="#SmoothDamp-制作相机跟踪效果" class="headerlink" title="SmoothDamp()制作相机跟踪效果"></a>SmoothDamp()制作相机跟踪效果</h4><p>Mathf.SmoothDamp() 方法可以制作相机的跟踪效果，让物体的移动不是那么僵硬而是做减速的缓冲效果。</p><h4 id="Input-类"><a href="#Input-类" class="headerlink" title="Input 类"></a>Input 类</h4><p>Input 类提供的成员变量如下：</p><img src="https://t1.picb.cc/uploads/2019/11/18/kwguk8.png"  /><p><img src="https://t1.picb.cc/uploads/2019/11/18/kwgc0X.png"></p><h4 id="摄像机目标渲染纹理targetTexture"><a href="#摄像机目标渲染纹理targetTexture" class="headerlink" title="摄像机目标渲染纹理targetTexture"></a>摄像机目标渲染纹理targetTexture</h4><p>使用Raw Image制作小地图</p><blockquote><p>1.制作一个小地图</p><p>2.将相机放置在地图的正上方，可以设置Culling Mask（遮       </p><p>挡剔除）</p><p>3.创建一张Render Texture，将Target Texture属性指向这</p><p>张纹理</p><p>4.创建UI面板，创建Raw Iamge，将Raw Image下的</p><p>Texture属性指向小地图纹理即可</p><p>5.如果要制作圆形的小地图，可以为Raw Image添加Iamge </p><p>为父物体，为Image添加Mask（遮罩），然后为Image </p><p>选择图片就可以实现      </p></blockquote><h4 id="扇形技能的伤害判定"><a href="#扇形技能的伤害判定" class="headerlink" title="扇形技能的伤害判定"></a><strong>扇形技能的伤害判定</strong></h4><p>​     1.已知两个向量，如何求两个向量的夹角  </p><p><img src="https://t1.picb.cc/uploads/2019/11/18/kwZhyg.png"></p><h4 id="从摄像机位置形成射线，按下按钮使物体的颜色变红"><a href="#从摄像机位置形成射线，按下按钮使物体的颜色变红" class="headerlink" title="从摄像机位置形成射线，按下按钮使物体的颜色变红"></a>从摄像机位置形成射线，按下按钮使物体的颜色变红</h4><p><img src="https://t1.picb.cc/uploads/2019/11/18/kwZjxK.png"></p><h4 id="从枪口位置产生射线，击中目标物体，产生准心效果"><a href="#从枪口位置产生射线，击中目标物体，产生准心效果" class="headerlink" title="从枪口位置产生射线，击中目标物体，产生准心效果"></a>从枪口位置产生射线，击中目标物体，产生准心效果</h4><p><img src="https://t1.picb.cc/uploads/2019/11/18/kwZzZJ.png"></p><p><img src="https://t1.picb.cc/uploads/2019/11/18/kwZUTr.png"></p><h4 id="Line检测"><a href="#Line检测" class="headerlink" title="Line检测"></a>Line检测</h4><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断两个对象间有没有障碍物</span></span><br><span class="line">RaycastHit hit;</span><br><span class="line"><span class="keyword">if</span> (Physics.Linecast (start.position, end.position,<span class="keyword">out</span> hit))</span><br><span class="line">&#123;</span><br><span class="line">print (hit.transform.position);</span><br><span class="line">hit.transform.GetComponent&lt;MeshRenderer&gt;().material.color=Color.red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="OverlapShpere检测的应用"><a href="#OverlapShpere检测的应用" class="headerlink" title="OverlapShpere检测的应用"></a>OverlapShpere检测的应用</h4><p>检测范围内的碰撞器，添加爆发力</p><p><img src="https://t1.picb.cc/uploads/2019/11/18/kww0hv.png"></p><p>动画重定向：让一个没有动画、没有状态机的模型使用其他已经创建好的模型的动画Animation Clip和状态机Animation Controller，达到和参考模型相同动画效果</p><p>1、设置相同的导入方式：Rig—Animation Type—Humanoid</p><p>2、如果模型之间骨骼节点相同，可使用Avatar Definition—Copy From Other Avatar，不同则需重新创建骨骼映射，Create From This Model</p><p>3、给重定向模型选择参照模型的骨骼映射Avatar（若骨骼相同，则选；不相同，则为自身创建）、Animator Controller状态机</p><p>记得给重定向模型添加C#</p>]]></content>
      
      
      
        <tags>
            
            <tag> Unity </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c#基础学习</title>
      <link href="/RookieRoom/2020/05/19/cji-chu-xue-xi/"/>
      <url>/RookieRoom/2020/05/19/cji-chu-xue-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="c-学习"><a href="#c-学习" class="headerlink" title="c#学习"></a>c#学习</h1><blockquote><p>C# csharp<br>Microsoft 专为.NET推出的高级编程语言。<br>从语言技术、风格、严谨性等特点上来说，c#可成为诸多编程语言中最为优秀的一款，甚至由它而引发出计算机语言界中的多种新规范和新特征。 </p></blockquote><span id="more"></span><blockquote><p> Mono<br> Novell公司支持在其他操作系统下开发.NET程序的框架。<br> Unity借助Mono实现跨平台，Mono提供了微软的.Net框架另一种实现，其核心还是.NET Framework 框架。 </p></blockquote><p>​    <img src="http://changetm.oss-cn-beijing.aliyuncs.com/Temp/fe7a5d75-fcb8-4bbf-84b2-4757432a00cf.png"></p><p><img src="http://changetm.oss-cn-beijing.aliyuncs.com/Temp/d180d23b-d8a6-4838-baec-9d370768564f.png"></p><p> <img src="http://changetm.oss-cn-beijing.aliyuncs.com/Temp/e0f46790-8bb9-4cbf-a4b9-d2b39b75c78a.png" alt="CLS"></p><p><strong>公共语言规范 Common Language Specification：</strong></p><blockquote><p>定义了.NET平台上运行的语言所必须支持的规范，用以避免不同语言特性产生的错误，实现语言间互操作。<br>CLR<br>公共语言运行库 Common Language Runtime：<br>程序的运行环境，负责内存分配、垃圾收集、安全检查等工作。<br>.Net程序编译过程<br>计算机语言发展史<br>第一代语言：机器语言<br>第二代语言：汇编语言<br>第三代语言：高级语言<br>编译运行过程：<br>源代码–(CLS编译)-&gt;CIL(通用中间语言)–(CLR编译)-&gt;机器码 </p></blockquote><p> <strong>语法</strong></p><blockquote><p>1.声明变量<br>1）.声明：在内存中开辟一块空间<br>声明类型 变量名；<br>2). 命名规则<br>以小写字母开头。<br>如果包含多个单词，除第一个单词外其他单词首字母大写。<br>增加类型前缀便于理解。<br>例如 string studentName;<br>2.赋值：在该空间存储数据<br>变量名&#x3D;数据；（&#x3D;这个符号从今天开始表示赋值）<br>注：<br>局部变量在使用前必须赋值。<br>赋值的数据类型和变量声明时的类型必须相同。<br>同一变量名只能声明一次，但可以多次赋值。<br>占位符<br>在字符串中插入变量，如下所示<br>string name &#x3D; “张三”;<br>int hp &#x3D; 120;<br>Console.WriteLine(“用户名为:{0}，生命值为：{1}”,name,hp);<br>用法：<br>string str &#x3D; string.Format(“用户名为:{0}，生命值为：{1}”, name, hp);<br>Console.WriteLine(str);<br>转义字符<br>&#x2F;&#x2F;我爱”Unity” 打印这句话<br>Console.WriteLine(“我爱”Unity””);<br>&#x2F;&#x2F;表示单引号<br>char c &#x3D; ‘’’; </p></blockquote><p><strong>标识符</strong></p><blockquote><p>1.什么是标识符？<br>标识符是开发人员（程序员）对程序中的各个元素命名时使用的字符序列。元素包括：类、方法、变量、常量等元素。</p><p>2.标识符命名规则<br>标识符应遵循以下具体规则：</p><p>标识符由大小写字母、数字、下划线、@等组成；<br>标识符不能以数字开头，除数字外，其它几种都允许；<br>C#严格区分大小写，即：大写和小写被认为有不同含义；<br>不能使用C#的关键字或保留字，除非它们前面加@前缀；<br>标识符必须不包含任何嵌入的空格或符号，比如 ：<br>　 ? - +! # % ^ &amp; * ( ) [ ] { } . ; : “ ’ &#x2F; \。　<br>注：随着版本不断升级，C#中可识别的标识符种类也越来越多，比如：汉字可作为变量名，类名等，但是不推荐。</p></blockquote><p><img src="https://t1.picb.cc/uploads/2019/11/17/kZTElT.png"></p><h2 id="Day1"><a href="#Day1" class="headerlink" title="Day1"></a>Day1</h2><h4 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h4><blockquote><p>对数值类型(整形、非整形)进行算数运算的符号。<br>包括：加+ 减- 乘* 除&#x2F; 取模%<br>int a &#x3D; 5, b &#x3D; 2;<br>int c &#x3D; a &#x2F; b; —结果为 2<br>int c&#x3D;a%b; —结果为1<br>注：取模%可以判断数字是否能被另一个数字整除<br>String类型可以使用+，意为字符的拼接。<br>string s1 &#x3D; “5”, s2 &#x3D; “2”;<br>string s3 &#x3D; s1 + s2; —结果为 “52” </p></blockquote><h4 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h4><blockquote><p>判断数值间大小关系的符号。<br>包括：大于&gt; 小于&lt; 大于等于&gt;&#x3D;<br>小于等于&lt;&#x3D; 等于&#x3D;&#x3D; 不等于!&#x3D;<br>bool isEqual &#x3D;1 !&#x3D;2; —true<br>String类型可以使用 &#x3D;&#x3D; 和 !&#x3D;，意为文本是否相同。</p></blockquote><h4 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h4><blockquote><p>判断 bool 值关系的符号。<br>参与逻辑运算的变量或表达式都是bool类型，结果也为bool类型。<br>bool result01&#x3D; true &amp;&amp; true;<br>bool result02 &#x3D; 2 &gt; 3 || 1 !&#x3D; 1; </p><p>&amp;&amp; ：表示“并且” 的关系，一假俱假。<br>|| ：表示“或者” 的关系，一真俱真。<br>! ：表示“取反”。</p></blockquote><p><img src="http://changetm.oss-cn-beijing.aliyuncs.com/Temp/f347cbf4-c566-489a-9013-386093fa4cb6.png"></p><h4 id="短路逻辑"><a href="#短路逻辑" class="headerlink" title="短路逻辑"></a>短路逻辑</h4><blockquote><p>—对于&amp;&amp;运算符，当第一个操作数为false时，将不会判断第二个操作数，因为此时无论第二个操作数为何，最后的运算结果一定是false。<br>—对于||运算符，当第一个操作数为true时，将不会判断第二个操作数，因为此时无论第二个操作数为何，最后的运算结果一定是true。<br>快捷运算符<br>一个变量与另外一个值做算数运算后的结果再赋值给该变量，可以使用快捷运算符。<br>包含：+&#x3D; -&#x3D; *&#x3D; &#x2F;&#x3D; %&#x3D;<br>int num&#x3D;1;<br>num &#x3D; num + 1; &#x3D;&#x3D;&gt; num +&#x3D; 1;</p></blockquote><p>一元运算符</p><blockquote><p>操作数只有1个的运算符。<br>自增()和自减(–)：使变量自身增加1或减少1。<br>int i &#x3D; 1;<br>i;<br>Console.WriteLine(i); — 2<br>后缀增量操作i++： 返回的结果为自增以前的值。<br>前缀增量操作++i：返回的结果为自增以后的值。</p></blockquote><h4 id="三元运算符"><a href="#三元运算符" class="headerlink" title="三元运算符"></a>三元运算符</h4><blockquote><p>具有3个操作数的运算符。<br>结构为：<br>数据类型 变量名 &#x3D; 条件? 结果1：结果2；<br>规则：<br>先计算bool条件，为true返回结果1，为false返回结果2<br>string strResult &#x3D; 1 &gt; 2 ? “对了”:”错了”; </p></blockquote><h4 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h4><blockquote><p>位运算符作用于位，并逐位执行操作。即：进行位运算时，应该先将参与运算的数据转为二进制类型，然后再运算。&amp;、 | 和 ^ 的真值表如下所示：</p></blockquote><p><img src="http://changetm.oss-cn-beijing.aliyuncs.com/Temp/d1db4f90-1ca7-44a6-a01d-035f681d65ce.png"></p><blockquote><p>假设若 A &#x3D; 60，且 B &#x3D; 13，现在以二进制格式表示：<br>60的二进制： 0 0 1 1 1 1 0 0<br>13的二进制： 0 0 0 0 1 1 0 1</p><p>A&amp;B &#x3D; 0 0 0 0 1 1 0 0<br>A | B &#x3D; 0 0 1 1 1 1 0 1<br>A^B &#x3D; 0 0 1 1 0 0 0 1<br>~A &#x3D; 1 1 0 0 0 0 1 1　 </p></blockquote><p><img src="http://changetm.oss-cn-beijing.aliyuncs.com/Temp/d1db4f90-1ca7-44a6-a01d-035f681d65ce.png"></p><h4 id="其他运算符"><a href="#其他运算符" class="headerlink" title="其他运算符"></a>其他运算符</h4><blockquote><p>typeof：返回 class 的类型。<br>sizeof：返回数据类型的大小（在内存中所占字节数）<br>is：判断对象是否为某一类型。<br>as：强制转换，即使转换失败也不会抛出异常。　　 </p></blockquote><p>下表将按运算符优先级从高到低列出各个运算符，如下：</p><p><img src="http://changetm.oss-cn-beijing.aliyuncs.com/Temp/319e7446-fbb6-4551-af1d-08250e1bed1c.png"></p><h4 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换</h4><p><img src="http://changetm.oss-cn-beijing.aliyuncs.com/Temp/2478c603-3771-49d9-8411-a5d850528764.png"></p><p><strong>ToString转换</strong></p><blockquote><p>任意类型转换为字符串类型。<br>int num &#x3D; 100;<br>string strNumber &#x3D; num.ToString();</p></blockquote><p><strong>Pares转换</strong></p><blockquote><p>字符串类型转换为其他类型<br>string strNumber &#x3D; “100”;<br>int num &#x3D; int.Parse(strNumber);<br>若字符串未被识别为该类型的有效值，则程序抛异常。<br>int number01 &#x3D; int.Parse(“1.0”);<br>float number02&#x3D; float.Parse(“1.0f”);</p></blockquote><h4 id="代码和作用域"><a href="#代码和作用域" class="headerlink" title="代码和作用域"></a>代码和作用域</h4><blockquote><p>在程序中可以使用一对大括号框住一部分代码，被框住的代码区域称之为代码块。<br>作用域可以理解为起作用的范围。<br>局部变量作用域：从声明开始，到所属 } 结束。 </p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">例<span class="number">1.</span> <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">int</span> a = <span class="number">1</span>;</span><br><span class="line">    &#123;</span><br><span class="line">         <span class="built_in">int</span> a = <span class="number">2</span>;<span class="comment">//原来的a依然存在，所以程序错误     </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">例<span class="number">2.</span> <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">int</span> a = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">Console.WriteLine(a);<span class="comment">//超过a的作用域，所以程序错误</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="If-else语句"><a href="#If-else语句" class="headerlink" title="If else语句"></a>If else语句</h4><p> 1.判断语句 </p><blockquote><p> 格式： if结构只考虑条件为真的情况。</p><p> 注：条件语句判断语句是 逻辑判断 &#x3D;&#x3D;、!&#x3D;、&gt;&#x3D;、&lt;&#x3D;、&gt;、&lt;  </p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;我被执行了！&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> a=<span class="number">1</span>;</span><br><span class="line"><span class="built_in">int</span> b=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(a&lt;b)</span><br><span class="line">&#123;</span><br><span class="line">      Console.WriteLine(<span class="string">&quot;a小于b，我被执行了！&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2 .if-else语句 </p><blockquote><p> if-else语句允许在两个程序块之间进行选择，同样无论条件的值如何，都能有且只有一种选择被执行。<br> 注：从上到下为并列关系，if else if只要有一个判断正确，后面的else if就不再执行。 </p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;我被执行了！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">     Console.WriteLine(<span class="string">&quot;上面被执行了，我不会被执行了！&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3 . if-else if语句 </p><blockquote><p> 注：条件表达式1;false&amp;&amp;条件表达式2;true。执行第二条表达式中的语句块。<br> else执行时说明所有条件都不满足。 </p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(条件表达式<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"> Console.WriteLine(<span class="string">&quot;如果我的判断条件是对的，我执行&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(条件表达式<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"> Console.WriteLine(<span class="string">&quot;如果上面没有被执行了，并且我的判断条件是对的，我执行！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"> Console.WriteLine(<span class="string">&quot;如果上面都没被执行了，我会被执行！&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Switch语句"><a href="#Switch语句" class="headerlink" title="Switch语句"></a>Switch语句</h4><blockquote><p> 注： case标签必须是具有唯一性的，不能有两个case值相同的值。<br> 执行过程： 首先计算表达式，根据计算结果匹配case的值，若有匹配项就执行语句，跳出switch-case。<br> 如果所有的值都不匹配，若default后有语句，执行default后的执行语句。若default后没有语句，则跳出switch-case，什么都不执行。<br> 从哪里开始：从第一个匹配的case开始<br> 从哪里结束：匹配以后，遇到的第一个break结束 </p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(条件表达式/变量)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">执行语句;<span class="comment">//是1的话，执行</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">执行语句;<span class="comment">//是2的话，执行</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">执行语句;<span class="comment">//是3或者4的话，执行 </span></span><br><span class="line">        <span class="comment">//如果没有特别需求，一定要写break结束上面的条件选择啊，不然语句宝宝就掉到其他条件选择的怀中了</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="literal">default</span>:</span><br><span class="line">执行语句；</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> if-else if 与switch 的区别，</p><blockquote><p> 相同点：都可以实现多分支结构。<br> 不同点：if-else if：可以处理范围<br> switch: 一般只能用于等值比较。 </p></blockquote><h4 id="For循环"><a href="#For循环" class="headerlink" title="For循环"></a>For循环</h4><blockquote><p> 对特定条件进行判断，满足则执行循环体，用于将某个语句或语句块重复执行预定次数。 </p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>（初始化；条件；增减变量）</span><br><span class="line">&#123;</span><br><span class="line">循环体</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span>; i&lt;<span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h4><blockquote><p> 1.do-while循环体系，先执行do后面的语句块，后判断，至少执行一次语句块。在判断循环条件是否满足，满足继续循环，不满足退出循环。 </p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">执行语句；</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>（条件表达式）；</span><br></pre></td></tr></table></figure><blockquote><p> 2.while循环  当循环条件为true时，执行循环语句继续循环，否则退出循环。循环至少一次。 </p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(判断条件)</span><br><span class="line">&#123;</span><br><span class="line">语句块;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="跳转语句"><a href="#跳转语句" class="headerlink" title="跳转语句"></a>跳转语句</h4><blockquote><p> 用于将控制转移给另一段代码。<br> 包括：continue 语句、break 语句、return 语句。 </p></blockquote><p><strong>Continue语句</strong></p><blockquote><p>退出本次循环，执行下次循环。</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//计算1到100之间能被3整除的数字累加和</span></span><br><span class="line"><span class="built_in">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i % <span class="number">3</span> != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">continue</span>;跳转不能被<span class="number">3</span>整除的数字</span><br><span class="line">&#125;</span><br><span class="line">sum += i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p> Break语句</p><blockquote><p>退出最近的循环体或switch语句。 </p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) 死循环</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(退出条件)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>; 满足跳转则退出循环</span><br><span class="line">&#125;</span><br><span class="line">循环体</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*******************/</span></span><br><span class="line"><span class="built_in">int</span> a=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(a&gt;<span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    a++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Goto语句"><a href="#Goto语句" class="headerlink" title="Goto语句"></a>Goto语句</h4><blockquote><p> goto语句只允许在一个语句块内跳出，或者在一个语句块内的一个地方跳到另一个地方；不允许从一个语句块外面跳入一个语句块的内部 </p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> i = <span class="number">0</span>;</span><br><span class="line">    cc: Console.Write(i);</span><br><span class="line">        <span class="keyword">if</span> (i &lt; <span class="number">9</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            i++;</span><br><span class="line">            <span class="keyword">goto</span> cc;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Day2"><a href="#Day2" class="headerlink" title="Day2"></a>Day2</h2><h4 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h4><h5 id="什么是方法"><a href="#什么是方法" class="headerlink" title="什么是方法"></a>什么是方法</h5><blockquote><p>各种语言都有方法的概念，有的语言成其为函数或者过程。<br>方法就是对一系列语句的命名，表示一个功能或者行为。<br>如：Start、Update、Movement……<br>使用方法可以提高代码的可重用性和可维护性（代码层次结构更清晰）。</p><p>其实工作就是做方法（工具）</p></blockquote><h5 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h5><blockquote><p>定义方法：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[访问修饰符] [可选修饰符] 返回类型 方法名称(参数列表)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//方法体</span></span><br><span class="line"><span class="keyword">return</span> 结果；</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">int</span> a</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">Console.WirteLine(<span class="string">&quot;我被执行了！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><h5 id="调用方法："><a href="#调用方法：" class="headerlink" title="调用方法："></a>调用方法：</h5><blockquote><p> 方法名称(参数); </p> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> a=<span class="number">1</span>;</span><br><span class="line">Main(a);</span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><h5 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h5><blockquote><p> 返回值：方法定义者告诉调用者的结果。<br> 如果方法有返回值，方法体中必须有return语句，且返回的数据与返回值类型必须兼容。<br> void代表无返回值类型，方法体中return关键字可有可无。<br> return后面的语句将不再执行。<br> 调用方法时，如果需要结果，声明相应类型的变量接收返回值数据。 </p></blockquote><h5 id="参数列表"><a href="#参数列表" class="headerlink" title="参数列表"></a>参数列表</h5><blockquote><p> 1.参数 </p><p> 方法定义者需要调用者传递的信息。<br> 定义方法时叫形式参数，简称形参；<br> 调用方法是叫实际参数，简称实参；<br> 实参与形参要一一对应(类型、数量、顺序) </p></blockquote><blockquote><p> 2.值参数<br> 默认为值参数。<br> 调用方法时复制实参变量所存储的内容。<br> 作用：传递数据。<br> 语法：<br> ……（数据类型 参数名[,数据类型 参数名]） </p> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Main(<span class="built_in">int</span> a)</span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><blockquote><p> 3.引用参数<br> 使用ref关键字修饰。<br> 调用方法时复制实参变量在栈中的引用。<br> 作用：改变数据。<br> 语法：<br> ……（ref 数据类型 参数名[,ref 数据类型 参数名]） </p> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Main(<span class="keyword">ref</span> a);</span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><blockquote><p> 4.输出参数<br> 使用out关键字修饰。<br> 调用方法时复制实参变量在栈中的引用。<br> 作用：返回结果。<br> 语法：<br> ……（out 数据类型 参数名[,out 数据类型 参数名]）</p> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Main(<span class="keyword">out</span> a);</span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><blockquote><p> 与引用参数区别</p><ul><li>ref 要求实参必须在传递前进行赋值</li><li>out 要求形参离开方法前必须赋值</li></ul></blockquote><blockquote><p> 5.TryParse<br> 通过bool表达式配合TryParse使用，防止类型转换失败。<br> 语法：</p> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> number;</span><br><span class="line"><span class="built_in">bool</span> result = <span class="built_in">int</span>.TryParse(“<span class="number">520</span>”, <span class="keyword">out</span> number); </span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><h5 id="方法重载"><a href="#方法重载" class="headerlink" title="方法重载"></a>方法重载</h5><ul><li><p>两个方法名称相同，但参数列表不同。</p></li><li><p>用于在不同条件下解决同一类型的问题。</p></li><li><p>仅仅out与ref的区别不可以构成重载</p></li></ul><h4 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h4><h5 id="什么是数组"><a href="#什么是数组" class="headerlink" title="什么是数组"></a>什么是数组</h5><blockquote><p>从Array类派生的，一组数据类型相同的变量组合。<br>一种空间连续的数据结构 。<br>元素通过索引（位置的序号）进行操作。 </p></blockquote><h5 id="定义数组"><a href="#定义数组" class="headerlink" title="定义数组"></a>定义数组</h5><blockquote><p>语法<br>声明数组<br>数据类型[] 数组名;<br>初始化数组<br>数组名 &#x3D; new 数据类型[元素总数];<br>初始化的元素类型与声明时的类型必须相同。<br>例：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span>[] array01 = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">5</span>];</span><br><span class="line"><span class="built_in">string</span>[] array02 = <span class="keyword">new</span> <span class="built_in">string</span>[<span class="number">3</span>]; </span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><h5 id="初始化数组"><a href="#初始化数组" class="headerlink" title="初始化数组"></a>初始化数组</h5><blockquote><p> 1.初始化<br> 数组初始化后，内存中存储该数据类型的默认值。<br> – 整形为 0<br> – 非整形为 0.0<br> – char为 \0<br> – string为 null<br> – bool为 false </p></blockquote><blockquote><p> 2.初始化+赋值<br> 1）可以在数组初始化的同时对元素进行赋值。<br> 语法：<br> 数据类型[] 数组名&#x3D;new 数据类型[]{元素1,元素2};<br> 例如：</p> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span>[] array01 = <span class="keyword">new</span> <span class="built_in">int</span>[]&#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span> &#125;;</span><br><span class="line"><span class="built_in">string</span>[] array02 = <span class="keyword">new</span> <span class="built_in">string</span>[] &#123;“a”, “b”, “c”&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p> 初始化时[]内也可以填入数组长度，但必须与所赋值的元素总数一致。<br> 例如：</p> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">double</span>[] array03 = <span class="keyword">new</span> <span class="built_in">double</span>[<span class="number">2</span>]&#123; <span class="number">1.0</span>, <span class="number">2.0</span> &#125;; </span><br><span class="line"></span><br></pre></td></tr></table></figure><p> 2）可以在数组声明的同时对元素进行赋值。<br> 语法：<br> 数据类型[] 数组名&#x3D; {元素1,元素2};<br> 例如： </p> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span>[] array01 = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span> &#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p> 元素个数即为数组长度。<br> 程序员可以省略初始化，但编译器内部仍然会”new 数据类型[]” 。<br> 不支持以下写法：</p> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">double</span>[] array03;</span><br><span class="line">array03 =&#123; <span class="number">1.0</span>, <span class="number">2.0</span> &#125;; </span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><h5 id="访问数组元素"><a href="#访问数组元素" class="headerlink" title="访问数组元素"></a>访问数组元素</h5><blockquote><p>通过索引访问<br>可以通过数组的索引(位置的序号)进行读写操作。<br>语法：<br>数组名[索引]<br>例如：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span>[] array = <span class="keyword">new</span> <span class="built_in">string</span>[] &#123;“a”, “b”, “c”&#125;;</span><br><span class="line">Console.WriteLine(array[<span class="number">0</span>]); – 获取数组第一个元素</span><br><span class="line">Console.WriteLine(array[<span class="number">2</span>]); – 获取数组第三个元素 </span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><blockquote><p> 通过for遍历<br> 遍历：按照某种顺序访问每一个元素。<br> for 循环遍历数组元素，正序输出到控制台中：</p> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span>[] array = <span class="keyword">new</span> <span class="built_in">string</span>[] &#123; “a”, “b”, “c” &#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; array.Length; i++)</span><br><span class="line">&#123;</span><br><span class="line">Console.WriteLine( array[i] );</span><br><span class="line">&#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><blockquote><p> 通过for遍历（2）<br> for 循环遍历数组元素，倒序输出到控制台中：</p> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span>[] array = <span class="keyword">new</span> <span class="built_in">string</span>[] &#123; “a”, “b”, “c” &#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = array.Length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i–)</span><br><span class="line">&#123;</span><br><span class="line">Console.WriteLine( array[i] );</span><br><span class="line">&#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><blockquote><p> 通过foreach遍历<br> foreach 是一种更简单更明了的读取数组元素的语句。<br> 局限性：<br> – 只能读取全部元素(语句本身)<br> – 不能修改元素<br> – 只能遍历实现Ienumerable接口的集合对象<br> 语法：</p> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span>(元素类型 变量名 <span class="keyword">in</span> 数组名)</span><br><span class="line">&#123;</span><br><span class="line">变量名表示数组中的每个元素</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p> 通过 foreach 遍历(2)<br> foreach 循环遍历数组元素，输出到控制台中：</p> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span>[] array = <span class="keyword">new</span> <span class="built_in">string</span>[] &#123; “a”, “b”, “c” &#125;;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="built_in">string</span> item <span class="keyword">in</span> array)</span><br><span class="line">&#123;</span><br><span class="line">Console.WriteLine( item );</span><br><span class="line">&#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><h5 id="常用方法及属性"><a href="#常用方法及属性" class="headerlink" title="常用方法及属性"></a>常用方法及属性</h5><blockquote><p>数组长度：数组名.Length<br>清除元素值：Array.Clear<br>复制元素： Array.copy 数组名.CopyTo<br>克隆：数组名.Clone<br>查找元素： Array.IndexOf Array.LastIndexOf<br>排序： Array.Sort<br>反转： Array.Reverse </p></blockquote><h5 id="数组的分类"><a href="#数组的分类" class="headerlink" title="数组的分类"></a>数组的分类</h5><ul><li>一维数组</li></ul><blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> [] a=&#123;&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><ul><li><p>多维数组 </p><blockquote><p> 具有两个或多个索引的数组</p><p> 语法：<br> – 声明 + 初始化</p> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">数据类型[,] 数组名 = <span class="keyword">new</span> 数据类型[行数,列数];</span><br><span class="line"><span class="built_in">string</span>[,] array01 = <span class="keyword">new</span> <span class="built_in">string</span>[<span class="number">3</span>,<span class="number">2</span>];</span><br><span class="line"></span><br></pre></td></tr></table></figure><p> – 初始化 + 赋值</p> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">数组名 = <span class="keyword">new</span> 数据类型[,]&#123; &#123;元素<span class="number">1</span>,元素<span class="number">2</span>&#125;, &#123;元素<span class="number">3</span>,元素<span class="number">4</span>&#125; &#125;;</span><br><span class="line"><span class="built_in">int</span>[,] array02 = <span class="keyword">new</span> <span class="built_in">int</span>[,]&#123; &#123;<span class="number">1</span>,<span class="number">2</span>&#125;,&#123;<span class="number">3</span>,<span class="number">4</span>&#125; &#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p> – 读写元素</p> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">数组名[行索引,列索引] </span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote></li></ul><h5 id="交错数组"><a href="#交错数组" class="headerlink" title="交错数组"></a>交错数组</h5><blockquote><p>元素为数组的数组，每个元素都是一个新的一位数组。</p></blockquote><p>语法：</p><blockquote><p>– 定义</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">数据类型[][] 数组名 = <span class="keyword">new</span> 数据类型[ 元素总数 ] [];</span><br><span class="line"><span class="built_in">string</span>[][] array = <span class="keyword">new</span> <span class="built_in">string</span>[<span class="number">3</span>] [];</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>– 赋值</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">数组名[索引] = <span class="keyword">new</span> 数据类型[子元素数];</span><br><span class="line">array[<span class="number">0</span>] = <span class="keyword">new</span> <span class="built_in">string</span>[<span class="number">2</span>];</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>– 读写元素</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">数组名[元素索引][子元素索引]</span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><p> 参数数组</p><blockquote><p>在方法形参中通过关键字params定义。<br>方法调用者可以传递数组，也可以传递一组数据类型相同的变量，甚至可以不传递参数。</p></blockquote><blockquote><p>注意：<br>参数数组必须在形参列表中的最后一位。<br>只能在一维数组上使用params关键字。<br>WriteLine中使用占位符，就是通过参数数组实现的。<br>例：定义整数相加的方法</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">int</span> <span class="title">Add</span>(<span class="params"> <span class="keyword">params</span> <span class="built_in">int</span>[] array </span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="built_in">int</span> item <span class="keyword">in</span> array)</span><br><span class="line">sum += item;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h4><h5 id="类型分类"><a href="#类型分类" class="headerlink" title="类型分类"></a>类型分类</h5><blockquote><p>通用类型系统CTS(Common Type System)是.NET框架中的一个组成部分，为所有面向.NET框架的语言定义了数据类型的规则。</p></blockquote><ul><li>值类型：存储数据本身。</li><li>引用类型：存储数据的引用(内存地址)</li></ul><h5 id="类型归属"><a href="#类型归属" class="headerlink" title="类型归属"></a>类型归属</h5><p><img src="http://changetm.oss-cn-beijing.aliyuncs.com/Temp/f6d79857-6cfa-46b9-9712-deb91dc9d7a8.png"></p><h5 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h5><blockquote><p>定义在方法内部的变量。</p></blockquote><p>特点：</p><blockquote><p>– 没有默认值，必须自行设定初始值，否则不能使用。<br>– 方法被调用时，存在栈中，方法调用结束时从栈中清除。<br>值类型与引用类型<br>值类型：<br>声明在栈中，数据存储在栈中。<br>引用类型：<br>声明在栈中，数据存储在堆中，栈中存储该数据的引用。 </p></blockquote><p><img src="http://changetm.oss-cn-beijing.aliyuncs.com/Temp/eece1fb8-770b-4c29-a886-bbcffa9388ab.png"></p><h5 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h5><blockquote><p>定义在类中方法外的变量</p></blockquote><p>特点：</p><blockquote><p>– 具有默认值。<br>– 所在类被实例化后，存在堆中，对象被回收时，成员变量从堆中清除。<br>– 可以与局部变量重名</p><p>值类型与引用类型<br>值类型：<br>声明在堆中，数据存储在堆中。<br>引用类型：<br>声明在堆中，数据存储在堆的另一块空间。</p></blockquote><p><img src="http://changetm.oss-cn-beijing.aliyuncs.com/Temp/83e562e9-59ed-420d-bee2-8c712e5b993e.png"></p><h5 id="拆装箱"><a href="#拆装箱" class="headerlink" title="拆装箱"></a>拆装箱</h5><p>装箱Box</p><blockquote><p>值类型隐式转换为 object 类型或由此值类型实现的任何接口类型的过程。<br>内部机制：<br>1.在堆中开辟内存空间<br>2.将值类型的数据复制到堆中<br>3.返回堆中新分配对象的地址</p></blockquote><p>拆箱 unBox</p><blockquote><p>从 object 类型到值类型或从接口类型到实现该接口的值类型的显式转换。<br>内部机制：<br>1.判断给定类型是否是装箱时的类型<br>2.返回已装箱实例中属于原值类型字段的地址</p></blockquote><p>注意</p><blockquote><p>拆箱后的类型必须与装箱时的类型相同。<br>伴随拆箱的字段复制步骤不属于拆箱过程。<br>装箱和拆箱不是互逆的过程，装箱的性能开销远大于拆箱。</p></blockquote><h5 id="String类"><a href="#String类" class="headerlink" title="String类"></a>String类</h5><p>特性</p><blockquote><p>字符串常量具备字符串池特性<br>字符串常量在创建前，首先在字符串池中查找是否存在相同文本。如果存在，则直接返回该对象引用；如果不存在，则开辟空间存储。<br>目的：提高内存利用率。</p></blockquote><p>字符串具有不可变性</p><blockquote><p>字符串常量一旦进入内存，就不得再次改变。因为如果在原位置改变会使其他对象内存被破坏，导致内存泄漏。当遇到字符串变量引用新值时，会在内存中新建一个字符串，将该字符串地址交由该变量引用。</p></blockquote><h5 id="垃圾回收器"><a href="#垃圾回收器" class="headerlink" title="垃圾回收器"></a>垃圾回收器</h5><blockquote><p>GC(Garbage Collection)是CLR中一种针对托管堆自动回收释放内存的服务。<br>GC线程从栈中的引用开始跟踪，从而判定哪些内存是正在使用的，若GC无法跟踪到某一块堆内存，那么就认为这块内存不再使用了，即为可回收的。</p></blockquote><h4 id="Day3"><a href="#Day3" class="headerlink" title="Day3"></a>Day3</h4><h5 id="类和对象"><a href="#类和对象" class="headerlink" title="类和对象"></a>类和对象</h5><p> 什么是类和对象</p><blockquote><p>面向对象：是一种软件开发的思想，用于指导程序员如何用人的思维方式对软件进行分析、设计与编程。</p></blockquote><ul><li>类是一个抽象的概念，即为生活中的”类别”。</li><li>对象是类的具体实例，即归属于某个类别的”个体”。</li></ul><blockquote><p>例如：学生是一个类，表示一种类型，”八戒同学”则是一个对象。<br>名词类型的状态，作为数据成员。<br>动词类型的行为，作为方法成员。 </p></blockquote><p>创建类</p><blockquote><p>语法：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">访问级别 <span class="keyword">class</span> 类名</span><br><span class="line">&#123;</span><br><span class="line">类成员……</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">class</span> <span class="title">MyClass</span></span><br><span class="line">&#123;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>通常每个类都在一个独立的c#源文件中。<br>创建新的类意味着在当前项目中产生了一种新的数据类型。</p></blockquote><p>创建对象</p><blockquote><p>语法： </p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//类名 引用名;</span></span><br><span class="line"><span class="comment">//引用名 = new 构造函数(参数列表);</span></span><br><span class="line">MyClass myclass = <span class="keyword">new</span> MyClass();</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>创建对象的过程也称为”实例化”,</p></blockquote><p>访问修饰符</p><blockquote><p>用于修饰类及类成员的访问可见范围。</p></blockquote><ul><li>public：所属类的成员以及非所属类的成员都可以访问。</li><li>private：只有所属类的成员才能访问。[类成员的默认级别]</li></ul><p>属性</p><blockquote><p>对字段起保护作用，可实现只读、只写功能。<br>本质就是对字段的读取与写入方法。</p></blockquote><p>语法：</p><blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[访问修饰符] 数据类型 属性名</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">get</span> &#123; <span class="keyword">return</span> 字段； &#125;</span><br><span class="line"><span class="keyword">set</span> &#123; 字段 = <span class="keyword">value</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">int</span> A</span><br><span class="line">&#123;</span><br><span class="line"> <span class="keyword">get</span>&#123;<span class="keyword">return</span> <span class="keyword">this</span>.<span class="keyword">value</span>;&#125;</span><br><span class="line"> <span class="keyword">set</span>&#123;<span class="keyword">this</span>.<span class="keyword">value</span> = <span class="keyword">value</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>通常一个公有属性和一个私有字段对应。</li><li>属性只是外壳，实际上操作的私有字段。</li></ul></blockquote><p> 自动属性</p><blockquote><p>当属性访问器中不需要任何其他逻辑时，使用自动属性可以更加简洁。<br>本质就是一个字段两个方法。</p></blockquote><p>语法：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[访问修饰符] 数据类型 属性名 &#123; <span class="keyword">get</span> ; <span class="keyword">set</span> ; &#125; </span><br><span class="line"><span class="keyword">public</span> <span class="built_in">int</span> A&#123; <span class="keyword">get</span> ; <span class="keyword">set</span> ; &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="http://changetm.oss-cn-beijing.aliyuncs.com/Temp/b9c897cf-a4ce-4930-8a40-9b944794a9b7.png"></p><p> 构造函数</p><blockquote><p>提供了创建对象的方式，初始化类数据成员的特殊方法。</p></blockquote><p>语法：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//[访问修饰符] 类名（[参数列表]）</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//初始化……</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Myclass</span>(<span class="params"><span class="built_in">int</span> a</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//初始化……</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>特点</p><ul><li>与类同名。</li><li>没有返回值，也不能写void。</li><li>不能被直接调用，必须通过new运算符在创建对象时才会自动调用。</li><li>每个类都必须至少有一个构造函数，若不提供，编译器自动生成一个无参构造函数。</li><li>如果程序员定义了构造函数，则编译器不会再提供。</li></ul><p> this关键字</p><blockquote><ul><li>表示当前对象的引用。</li><li>访问当前类成员时，使用this关键字，可以提高代码的可读性；在没有歧义的情况下，也可以省略。</li></ul></blockquote><p>类结构</p><blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">访问级别 <span class="keyword">class</span> 类名</span><br><span class="line">&#123;</span><br><span class="line">字段：存储数据</span><br><span class="line">属性：保护字段</span><br><span class="line">构造函数：提供创建对象的方式，初始化类的数据成员</span><br><span class="line">方法：向类的外部提供某种功能</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><p> Static</p><ul><li>使用static关键字修饰的成员变量。</li><li>静态成员变量属于类，类被加载时初始化，且只有一份。</li><li>实例成员变量属于对象，在每个对象被创建时初始化，每个对象一份。</li></ul><p>特点：</p><blockquote><p>存在优先于对象，被所有对象所共享，常驻内存</p></blockquote><p>静态构造函数</p><blockquote><ul><li>初始化类的静态数据成员。</li><li>仅在类被加载时执行一次。</li><li>不允许使用访问修饰符。</li></ul></blockquote><p> 静态方法</p><blockquote><ul><li>通过引用调用实例方法时，会隐式的传递对象引用，以便在方法内部可以正确访问该对象成员变量。</li><li>通过类名调用静态方法时，因为没有具体对象，所以在static方法中不能访问实例成员。</li></ul></blockquote><p>静态类</p><blockquote><ul><li>使用static关键字修饰的类。</li><li>不能实例化，只能包含静态成员。</li><li>静态类不能被继承，但是静态方法、属性都可以被继承。</li></ul></blockquote><p> 适用性</p><blockquote><ul><li>利：单独空间存储，所有对象共享，可直接被类名调用。</li><li>弊：静态方法中只能访问静态成员，共享数据被多个对象访问会出现并发。</li></ul></blockquote><p> 适用场合：</p><blockquote><p>1.所有对象需要共享的数据。<br>2.在没有对象前就要访问成员。<br>3.工具类适合做静态类(常用，不需要过多数据)。 </p></blockquote><h5 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h5><p> 什么是结构</p><blockquote><p>定义：用于封装小型相关变量的值类型。与类语法相似，都可以包含数据成员和方法成员。但结构属于值类型，类属于引用类型。</p></blockquote><p>适用性：</p><blockquote><p>表示点、颜色等轻量级对象。如创建存储1000个点的数组，如果使用类，将为每个对象分配更多内存，使用结构可以节约资源。</p></blockquote><p>定义结构</p><blockquote><ul><li>使用 struct 关键字定义。</li><li>除非字段被声明为 const 或 static，否则无法初始化。</li><li>结构不能继承，但可以实现接口。</li></ul></blockquote><p><img src="http://changetm.oss-cn-beijing.aliyuncs.com/Temp/7cd10626-cf83-4784-8a74-5f6a98f410d1.png"></p><p> 构造函数</p><blockquote><ul><li>结构总会包含无参数构造函数。</li><li>构造函数中必须初始化所有字段。</li></ul></blockquote><p><img src="http://changetm.oss-cn-beijing.aliyuncs.com/Temp/f54f247e-68d3-41b2-b415-4abd3299430d.png"></p><p><img src="http://changetm.oss-cn-beijing.aliyuncs.com/Temp/ef367492-b7a0-4eac-a09a-673612eeb986.png"></p><h5 id="枚举"><a href="#枚举" class="headerlink" title="枚举"></a>枚举</h5><p> 枚举</p><blockquote><p>列举某种数据的所有取值。</p></blockquote><p>作用：</p><blockquote><p>增强代码的可读性，限定取值。</p></blockquote><p>语法：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">enum</span> 名字&#123;值<span class="number">1</span>，值<span class="number">2</span>，值<span class="number">3</span>，值<span class="number">4</span>&#125;</span><br><span class="line"><span class="built_in">enum</span> A&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>枚举元素默认为int，准许使用的枚举类型有byte、sbyte、short、ushort、int、uint、long或ulong。</li><li>每个枚举元素都是有枚举值。默认情况下，第一个枚举的值为0，后面每个枚举的值一次递增1，可以修改值，后面枚举数的值依次递增。</li></ul><p> 标志枚举</p><blockquote><p>可以同时赋多个枚举值。</p></blockquote><p>条件：</p><blockquote><p>– 任意两个枚举值做按位或运算的结果不能与其他枚举值相同。<br>– 使用 [Flags] 特性标记枚举类型。<br>标志枚举（续1） </p></blockquote><p> 语法：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">Flags</span>]</span><br><span class="line"><span class="built_in">enum</span> 枚举类型名称</span><br><span class="line">&#123;</span><br><span class="line">枚举值<span class="number">1</span> = <span class="number">1</span>,</span><br><span class="line">枚举值<span class="number">2</span> = <span class="number">2</span>,</span><br><span class="line">枚举值<span class="number">3</span> = <span class="number">4</span>,</span><br><span class="line">枚举值<span class="number">4</span> = <span class="number">8</span>,</span><br><span class="line">枚举值<span class="number">4</span> = <span class="number">16</span>,</span><br><span class="line">……</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>数据类型转换</p><blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Enum --&gt; <span class="built_in">int</span></span><br><span class="line"><span class="built_in">int</span> 变量名 =(<span class="built_in">int</span>)枚举值; </span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><p><img src="http://changetm.oss-cn-beijing.aliyuncs.com/Temp/015c2deb-2143-413b-9820-3d7c04ab5033.png"></p><blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> --&gt; Enum</span><br><span class="line">枚举类型 变量名 =(枚举类型)整数; </span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><p><img src="http://changetm.oss-cn-beijing.aliyuncs.com/Temp/029eae9a-f51d-4d45-baea-8d462ac20257.png"></p><blockquote><p>数据类型转换（续1）</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Enum --&gt; <span class="built_in">string</span></span><br><span class="line"><span class="built_in">string</span> 变量名 = 枚举值.ToString();</span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> --&gt;  Enum </span><br><span class="line">枚举类型 变量名 = </span><br><span class="line">(枚举类型)Enum.Parse(<span class="keyword">typeof</span>(枚举类型 ), <span class="string">&quot;枚举值&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生成多个新页面例子</title>
      <link href="/RookieRoom/2020/05/19/sheng-cheng-duo-ge-xin-ye-mian-li-zi/"/>
      <url>/RookieRoom/2020/05/19/sheng-cheng-duo-ge-xin-ye-mian-li-zi/</url>
      
        <content type="html"><![CDATA[<h2 id="第一步：aspx界面搭建"><a href="#第一步：aspx界面搭建" class="headerlink" title="第一步：aspx界面搭建"></a>第一步：aspx界面搭建</h2><p>界面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span> <span class="attr">runat</span>=<span class="string">&quot;server&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=utf-8&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">&quot;form1&quot;</span> <span class="attr">runat</span>=<span class="string">&quot;server&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            &lt;%-- 添加数据表单 --%&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;生成静态页面&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><span id="more"></span><p>后台</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Web;</span><br><span class="line"><span class="keyword">using</span> System.Web.UI;</span><br><span class="line"><span class="keyword">using</span> System.Web.UI.WebControls;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">BookShop.Web.AdminManager</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">CreateStaticPage</span> : <span class="title">System.Web.UI.Page</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">Page_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//生成页面   提交表单    Post</span></span><br><span class="line">            <span class="comment">//测试 要为所有的课本生成静态页面</span></span><br><span class="line">            <span class="keyword">if</span> (IsPostBack)</span><br><span class="line">            &#123;</span><br><span class="line">                BLL.BookManager bll = <span class="keyword">new</span> BLL.BookManager();</span><br><span class="line">                List&lt;Model.Book&gt; list = bll.GetModelList(<span class="string">&quot;&quot;</span>);<span class="comment">//获取所有的书本</span></span><br><span class="line">                <span class="keyword">foreach</span> (Model.Book item <span class="keyword">in</span> list)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//为每一本书都调用生成静态页面的方法</span></span><br><span class="line">                    bll.CreateStaticHtmlPage(item.Id);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第二步：按要求生成目录和html"><a href="#第二步：按要求生成目录和html" class="headerlink" title="第二步：按要求生成目录和html"></a>第二步：按要求生成目录和html</h2><p>模板页 BookTemplate.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*//设置加入购物车超链接的样式*/</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.buy_now</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: <span class="number">700</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">vertical-align</span>: middle;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#df3033</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;/Css/tableStyle.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--使用样式的时候，一定要记得修改为绝对路径--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/js/jquery-1.7.1.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--使用样式的时候，一定要记得修改为绝对路径--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/ckeditor/ckeditor.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;/Css/themes/ui-lightness/jquery-ui-1.8.2.custom.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/js/jquery-ui-1.8.2.custom.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            $(<span class="string">&quot;#btnAdd&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title class_">AddComment</span>();</span></span><br><span class="line"><span class="language-javascript">            &#125;);</span></span><br><span class="line"><span class="language-javascript">            <span class="title class_">LoadComment</span>();</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//加载一个富文本编辑器</span></span></span><br><span class="line"><span class="language-javascript">            <span class="title class_">LoadBBCode</span>();</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//给加入购物车注册事件</span></span></span><br><span class="line"><span class="language-javascript">            $(<span class="string">&quot;#addCart&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//跳出一个模态页面 1.提示加入购物车成功 2.请登录(Session)</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="title class_">AddProductCart</span>();</span></span><br><span class="line"><span class="language-javascript">            &#125;);</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">AddProductCart</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//购物车表中需要用户Id和商品ID    用户Id来自Session</span></span></span><br><span class="line"><span class="language-javascript">            $.<span class="title function_">post</span>(<span class="string">&quot;/ashx/ProcessCart.ashx&quot;</span>, &#123; <span class="string">&quot;bookId&quot;</span>: $bookId &#125;, <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> serverData = data.<span class="title function_">split</span>(<span class="string">&#x27;:&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span> (serverData[<span class="number">0</span>] == <span class="string">&quot;ok&quot;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">//登陆成功</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    $(<span class="string">&quot;#msg&quot;</span>).<span class="title function_">text</span>(serverData[<span class="number">1</span>]);</span></span><br><span class="line"><span class="language-javascript">                    $(<span class="string">&quot;#showResult&quot;</span>).<span class="title function_">css</span>(<span class="string">&quot;display&quot;</span>, <span class="string">&quot;block&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                    $(<span class="string">&quot;#showResult&quot;</span>).<span class="title function_">dialog</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">height</span>: <span class="number">260</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">width</span>: <span class="number">300</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">modal</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">buttons</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">ok</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                                $(<span class="variable language_">this</span>).<span class="title function_">dialog</span>(<span class="string">&quot;close&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                            &#125;</span></span><br><span class="line"><span class="language-javascript">                        &#125;</span></span><br><span class="line"><span class="language-javascript">                    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">else</span> <span class="keyword">if</span> (serverData[<span class="number">0</span>] == <span class="string">&quot;no&quot;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">//登陆成功，添加失败</span></span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">//如果Login  提示登陆</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="title class_">ShowLoginDialog</span>();</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">                </span></span><br><span class="line"><span class="language-javascript">            &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//弹出登陆窗口  窗口用一个Jquery—UI</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">ShowLoginDialog</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//显示登陆窗口 做一个div</span></span></span><br><span class="line"><span class="language-javascript">            $(<span class="string">&quot;#loginDiv&quot;</span>).<span class="title function_">css</span>(<span class="string">&quot;display&quot;</span>, <span class="string">&quot;block&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            $(<span class="string">&quot;#loginDiv&quot;</span>).<span class="title function_">dialog</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">height</span>: <span class="number">260</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">width</span>: <span class="number">350</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">modal</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">buttons</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">ok</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                        </span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">var</span> txtUserName = $(<span class="string">&quot;#txtUserName&quot;</span>).<span class="title function_">val</span>();</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">var</span> txtPwd = $(<span class="string">&quot;#txtPwd&quot;</span>).<span class="title function_">val</span>();</span></span><br><span class="line"><span class="language-javascript">                        $.<span class="title function_">post</span>(<span class="string">&quot;/ashx/Login.ashx&quot;</span>, &#123; <span class="string">&quot;txtUserName&quot;</span>: txtUserName, <span class="string">&quot;txtPwd&quot;</span>: txtPwd &#125;, <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                            <span class="keyword">if</span> (data == <span class="string">&quot;ok&quot;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                                </span></span><br><span class="line"><span class="language-javascript">                                <span class="title function_">alert</span>(<span class="string">&quot;登录失败,请输入正确的用户名和密码！&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                               </span></span><br><span class="line"><span class="language-javascript">                            &#125;</span></span><br><span class="line"><span class="language-javascript">                            <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                                $(<span class="variable language_">this</span>).<span class="title function_">dialog</span>(<span class="string">&quot;close&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                                <span class="title function_">alert</span>(data);</span></span><br><span class="line"><span class="language-javascript">                                <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="string">&quot;/shoppingCart/shoppingCart.aspx&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">                            &#125;</span></span><br><span class="line"><span class="language-javascript">                           </span></span><br><span class="line"><span class="language-javascript">                        &#125;);</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//BBCode</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">LoadBBCode</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//把我们的textarea  替换成了  BBCode编辑器</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable constant_">CKEDITOR</span>.<span class="title function_">replace</span>(<span class="string">&#x27;txtContent&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">extraPlugins</span>: <span class="string">&#x27;bbcode&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">removePlugins</span>: <span class="string">&#x27;bidi,button,dialogadvtab,div,filebrowser,flash,format,forms,horizontalrule,iframe,indent,justify,liststyle,pagebreak,showborders,stylescombo,table,tabletools,templates&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">toolbar</span>:</span></span><br><span class="line"><span class="language-javascript">                        [</span></span><br><span class="line"><span class="language-javascript">                            [<span class="string">&#x27;Source&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;Save&#x27;</span>, <span class="string">&#x27;NewPage&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;Undo&#x27;</span>, <span class="string">&#x27;Redo&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">                            [<span class="string">&#x27;Find&#x27;</span>, <span class="string">&#x27;Replace&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;SelectAll&#x27;</span>, <span class="string">&#x27;RemoveFormat&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">                            [<span class="string">&#x27;Link&#x27;</span>, <span class="string">&#x27;Unlink&#x27;</span>, <span class="string">&#x27;Image&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">                            <span class="string">&#x27;/&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                            [<span class="string">&#x27;FontSize&#x27;</span>, <span class="string">&#x27;Bold&#x27;</span>, <span class="string">&#x27;Italic&#x27;</span>, <span class="string">&#x27;Underline&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">                            [<span class="string">&#x27;NumberedList&#x27;</span>, <span class="string">&#x27;BulletedList&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;Blockquote&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">                            [<span class="string">&#x27;TextColor&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;Smiley&#x27;</span>, <span class="string">&#x27;SpecialChar&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;Maximize&#x27;</span>]</span></span><br><span class="line"><span class="language-javascript">                        ],</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">smiley_images</span>:</span></span><br><span class="line"><span class="language-javascript">                        [</span></span><br><span class="line"><span class="language-javascript">                            <span class="string">&#x27;regular_smile.gif&#x27;</span>, <span class="string">&#x27;sad_smile.gif&#x27;</span>, <span class="string">&#x27;wink_smile.gif&#x27;</span>, <span class="string">&#x27;teeth_smile.gif&#x27;</span>, <span class="string">&#x27;tounge_smile.gif&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="string">&#x27;embaressed_smile.gif&#x27;</span>, <span class="string">&#x27;omg_smile.gif&#x27;</span>, <span class="string">&#x27;whatchutalkingabout_smile.gif&#x27;</span>, <span class="string">&#x27;angel_smile.gif&#x27;</span>, <span class="string">&#x27;shades_smile.gif&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="string">&#x27;cry_smile.gif&#x27;</span>, <span class="string">&#x27;kiss.gif&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                        ],</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">smiley_descriptions</span>:</span></span><br><span class="line"><span class="language-javascript">                        [</span></span><br><span class="line"><span class="language-javascript">                            <span class="string">&#x27;smiley&#x27;</span>, <span class="string">&#x27;sad&#x27;</span>, <span class="string">&#x27;wink&#x27;</span>, <span class="string">&#x27;laugh&#x27;</span>, <span class="string">&#x27;cheeky&#x27;</span>, <span class="string">&#x27;blush&#x27;</span>, <span class="string">&#x27;surprise&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="string">&#x27;indecision&#x27;</span>, <span class="string">&#x27;angel&#x27;</span>, <span class="string">&#x27;cool&#x27;</span>, <span class="string">&#x27;crying&#x27;</span>, <span class="string">&#x27;kiss&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                        ]</span></span><br><span class="line"><span class="language-javascript">                &#125;);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//加载评论</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">LoadComment</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            $.<span class="title function_">post</span>(<span class="string">&quot;/ashx/BookComment.ashx&quot;</span>, &#123; <span class="string">&quot;action&quot;</span>: <span class="string">&quot;load&quot;</span>, <span class="string">&quot;bookId&quot;</span>: $bookId &#125;, <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//获取到data  添加到ul标签</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> serverData = $.<span class="title function_">parseJSON</span>(data);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> serverDataLength = serverData.<span class="property">length</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//alert(serverDataLength);</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; serverDataLength; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">//alert(serverData[i].Msg);</span></span></span><br><span class="line"><span class="language-javascript">                    $(<span class="string">&quot;&lt;li&gt;&quot;</span> + serverData[i].<span class="property">ShowTime</span> + <span class="string">&quot;:&quot;</span> + serverData[i].<span class="property">Msg</span> + <span class="string">&quot;&lt;/li&gt;&quot;</span>).</span></span><br><span class="line"><span class="language-javascript">                        <span class="title function_">appendTo</span>(<span class="string">&quot;#commentList&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//添加评论</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">AddComment</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//var msg = $(&quot;#txtContent&quot;).val();</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//获取用户输入的评论</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> oEditor = <span class="variable constant_">CKEDITOR</span>.<span class="property">instances</span>.<span class="property">txtContent</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//alert( oEditor.getData() );</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> msg = oEditor.<span class="title function_">getData</span>();</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//现在获取不到，数据库加载出来的都是空</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (msg != <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//$bookId 被替换掉</span></span></span><br><span class="line"><span class="language-javascript">                $.<span class="title function_">post</span>(<span class="string">&quot;/ashx/BookComment.ashx&quot;</span>, &#123; <span class="string">&quot;action&quot;</span>: <span class="string">&quot;add&quot;</span>, <span class="string">&quot;msg&quot;</span>: msg, <span class="string">&quot;bookId&quot;</span>: $bookId &#125;, <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">var</span> serverData = data.<span class="title function_">split</span>(<span class="string">&#x27;:&#x27;</span>);<span class="comment">//no    评论中…………</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span> (serverData[<span class="number">0</span>] == <span class="string">&quot;ok&quot;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="comment">//情况内容 重新获取光标</span></span></span><br><span class="line"><span class="language-javascript">                        <span class="comment">//$(&quot;#txtContent&quot;).val(&quot;&quot;);</span></span></span><br><span class="line"><span class="language-javascript">                        oEditor.<span class="title function_">setData</span>(<span class="string">&quot;&quot;</span>);<span class="comment">//文本编辑框设置为空</span></span></span><br><span class="line"><span class="language-javascript">                        $(<span class="string">&quot;#txtContent&quot;</span>).<span class="title function_">focus</span>();</span></span><br><span class="line"><span class="language-javascript">                        $(<span class="string">&quot;#txtMsg&quot;</span>).<span class="title function_">text</span>(serverData[<span class="number">1</span>]);</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                        $(<span class="string">&quot;#txtMsg&quot;</span>).<span class="title function_">text</span>(serverData[<span class="number">1</span>]);</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                $(<span class="string">&quot;#txtMsg&quot;</span>).<span class="title function_">text</span>(<span class="string">&quot;评论不能为空&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                $(<span class="string">&quot;#txtContent&quot;</span>).<span class="title function_">focus</span>();</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>书名<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>$title<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>作者<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>$author<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>单价<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>$unitprice <span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0)&quot;</span> <span class="attr">class</span>=<span class="string">&quot;buy_now&quot;</span> <span class="attr">id</span>=<span class="string">&quot;addCart&quot;</span>&gt;</span>加入购物车<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>封面<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/Images/BookCovers/$isbn.jpg&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>简介<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>$content<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;commentList&quot;</span> <span class="attr">class</span>=<span class="string">&quot;comments&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">&quot;txtContent&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;100&quot;</span> <span class="attr">class</span>=<span class="string">&quot;reply_box&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;用什么感谢?留下吧…………&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;发布评论&quot;</span> <span class="attr">id</span>=<span class="string">&quot;btnAdd&quot;</span> <span class="attr">class</span>=<span class="string">&quot;reply_btn&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;txtMsg&quot;</span> <span class="attr">style</span>=<span class="string">&quot;font-size:20px;color:yellow&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;loginDiv&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display:none;&quot;</span> <span class="attr">title</span>=<span class="string">&quot;登录&quot;</span>  &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">strong</span> <span class="attr">style</span>=<span class="string">&quot;margin-top:20px;&quot;</span>&gt;</span>用户名：<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;txtUserName&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top:20px;&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">strong</span> <span class="attr">style</span>=<span class="string">&quot;margin-top:10px;&quot;</span>&gt;</span>密　码：<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;txtPwd&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top:10px;&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;showResult&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display:none&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;msg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>访问<span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">&quot;font-size:20px;color:red&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/shoppingCart/shoppingCart.aspx&quot;</span>&gt;</span>购物车<span class="tag">&lt;/<span class="name">a</span>&gt;</span>页面,进行支付</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>页面生成</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> 将商品信息生成静态页面</span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;id&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">CreateStaticHtmlPage</span>(<span class="params"><span class="built_in">int</span> id</span>)</span></span><br><span class="line">       &#123;</span><br><span class="line">           <span class="comment">//读取模板页BookTemplate,替换占位符$title</span></span><br><span class="line">           <span class="comment">//替换成根据ID从数据库读取的数据</span></span><br><span class="line">           <span class="comment">//1.读取商品ID，找到对应的商品信息</span></span><br><span class="line">           Model.Book model = dal.GetModel(id);</span><br><span class="line">           <span class="comment">//2.读取模板文件 IO</span></span><br><span class="line">           <span class="built_in">string</span> template = HttpContext.Current.Request.MapPath(<span class="string">&quot;/Template/BookTemplate.html&quot;</span>);</span><br><span class="line">           <span class="comment">//3.替换</span></span><br><span class="line">           <span class="built_in">string</span> fileContent = File.ReadAllText(template);</span><br><span class="line">           fileContent = fileContent.Replace(<span class="string">&quot;$title&quot;</span>, model.Title).Replace(<span class="string">&quot;$author&quot;</span>, model.Author).</span><br><span class="line">                Replace(<span class="string">&quot;$unitprice&quot;</span>, model.UnitPrice.ToString(<span class="string">&quot;0.00&quot;</span>)).Replace(<span class="string">&quot;$isbn&quot;</span>, model.ISBN).</span><br><span class="line">                Replace(<span class="string">&quot;$content&quot;</span>, model.ContentDescription).Replace(<span class="string">&quot;$bookId&quot;</span>, model.Id.ToString());</span><br><span class="line">           <span class="comment">//如果是数字需要转换一下  例如&quot;$bookId&quot;, model.Id.ToString()</span></span><br><span class="line"></span><br><span class="line">           <span class="comment">//4.生成静态文件 保存文件 可以根据书本出版信息分类</span></span><br><span class="line">           <span class="built_in">string</span> dir = <span class="string">&quot;/HtmlPage/&quot;</span> + model.PublishDate.Year </span><br><span class="line">               + <span class="string">&quot;/&quot;</span> + model.PublishDate.Month </span><br><span class="line">               + <span class="string">&quot;/&quot;</span> + model.PublishDate.Day + <span class="string">&quot;/&quot;</span>;</span><br><span class="line">           <span class="comment">//目录结构 /HtmlPage/2015/3/4/mme.html</span></span><br><span class="line">           Directory.CreateDirectory(Path.GetDirectoryName(HttpContext.Current.Request.MapPath(dir)));</span><br><span class="line">           <span class="comment">//请求路径转换为绝对路径</span></span><br><span class="line">           <span class="built_in">string</span> fullDir = dir + model.Id + <span class="string">&quot;.html&quot;</span>;</span><br><span class="line">           File.WriteAllText(HttpContext.Current.Request.MapPath(fullDir), </span><br><span class="line">               fileContent, System.Text.Encoding.UTF8);</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h2 id="提醒："><a href="#提醒：" class="headerlink" title="提醒："></a>提醒：</h2><blockquote><p>Eval返回一个object类型的返回值</p><p>获取返回的东西可以使用以下方法</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">GetString</span>(<span class="params"><span class="built_in">object</span> obj</span>)</span></span><br><span class="line">       &#123;</span><br><span class="line">           <span class="comment">//Eval() 返回的是Obj</span></span><br><span class="line">           DateTime t = Convert.ToDateTime(obj);</span><br><span class="line">           <span class="keyword">return</span> <span class="string">&quot;/HtmlPage/&quot;</span> + t.Year + <span class="string">&quot;/&quot;</span> + t.Month + <span class="string">&quot;/&quot;</span> + t.Day + <span class="string">&quot;/&quot;</span>;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> net </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>获取接口的全部实现类</title>
      <link href="/RookieRoom/2020/05/19/huo-qu-jie-kou-de-quan-bu-shi-xian-lei/"/>
      <url>/RookieRoom/2020/05/19/huo-qu-jie-kou-de-quan-bu-shi-xian-lei/</url>
      
        <content type="html"><![CDATA[<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line"></span><br><span class="line">          InterfaceType(<span class="keyword">typeof</span>(IInterface));</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">      <span class="comment"><span class="doctag">///</span> 获取接口的全部实现类</span></span><br><span class="line">      <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">InterfaceType</span>(<span class="params">Type InterfaceTypeValue</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">var</span> types = AppDomain.CurrentDomain.GetAssemblies().</span><br><span class="line">             SelectMany(a =&gt; a.GetTypes().</span><br><span class="line">             Where(t =&gt; t.GetInterfaces().Contains(InterfaceTypeValue))).ToArray();</span><br><span class="line"></span><br><span class="line">          <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; types.Length; i++)</span><br><span class="line">          &#123;</span><br><span class="line">              Console.WriteLine(types[i].Name);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/S架构和B/S架构介绍</title>
      <link href="/RookieRoom/2020/05/19/cs-jia-gou-he-bs-jia-gou-jie-shao/"/>
      <url>/RookieRoom/2020/05/19/cs-jia-gou-he-bs-jia-gou-jie-shao/</url>
      
        <content type="html"><![CDATA[<p>一、C&#x2F;S架构</p><ol><li>C&#x2F;S架构及其背景</li></ol><p>C&#x2F;S架构是一种比较早的软件架构，主要应用于局域网内。在这之前经历了集中计算模式，随着计算机网络的进步与发展，尤其是可视化工具的应用，出现过两层C&#x2F;S和三层C&#x2F;S架构，不过一直很流行也比较经典的是我们所要研究的两层C&#x2F;S架构。</p><p><img src="https://img-blog.csdn.net/20161106211353157?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="img"></p><p>C&#x2F;S架构软件（即客户机&#x2F;服务器模式）分为客户机和服务器两层：第一层是在客户机系统上结合了表示与业务逻辑，第二层是通过网络结合了数据库服务器。简单的说就是第一层是用户表示层，第二层是数据库层。客户端和服务器直接相连，这两个组成部分都承担着重要的角色。</p><span id="more"></span><ol start="2"><li>C&#x2F;S架构的优点</li></ol><p>a. 客户端和服务器直接相连。点对点的连接方式更安全，可以直接操作本地文本，比较方便。</p><p>b. 客户端可以处理一些逻辑事务。可以进行数据处理和数据存储，提供一定的帮助。</p><p>c. 客户端直接操作界面。</p><ol start="3"><li>C&#x2F;S架构的缺点</li></ol><p>a&gt; C&#x2F;S架构适用于局域网，对网速的要求比较高。</p><p>b&gt; 客户端界面缺乏通用性，且当业务更改时就需要更改界面，重新编写。</p><p>c&gt; 随着用户数量的增多，会出现通信拥堵、服务器响应速度慢等情况。</p><p>d&gt; 系统的维护也比较麻烦。</p><ol start="4"><li>C&#x2F;S架构的应用</li></ol><p>C&#x2F;S架构的软件是在是数不胜数，从办公的OFFICE，WPS，WINRAR到杀毒软件如金山，瑞金再到我们的娱乐软件，如播放器，QQ，微信等，无处不见C&#x2F;S架构。</p><p>二、B&#x2F;S架构</p><ol><li>B&#x2F;S架构及其背景<br>随着Internet和WWW的流行，以往的主机&#x2F;终端和C&#x2F;S都无法满足当前的全球网络开放、互连、信息随处可见和信息共享的新要求，于是就出现了B&#x2F;S型模式，即浏览器&#x2F;服务器结构。它是C&#x2F;S架构的一种改进，可以说属于三层C&#x2F;S架构。主要是利用了不断成熟的WWW浏览器技术，用通用浏览器就实现了原来需要复杂专用软件才能实现的强大功能，并节约了开发成本，是一种全新的软件系统构造技术。</li></ol><p><img src="https://img-blog.csdn.net/20161106212513319?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="img"></p><p>第一层是浏览器（即客户端）只有简单的输入输出功能，处理极少部分的事务逻辑。由于客户不需要安装客户端，只要有浏览器就能上网浏览，所以它面向的是大范围的用户，所以界面设计得比较简单，通用。<br>第二层是WEB服务器，扮演着信息传送的角色。当用户想要访问数据库时，就会首先向WEB服务器发送请求，WEB服务器统一请求后会向数据库服务器发送访问数据库的请求，这个请求是以SQL语句实现的。<br>第三层是数据库服务器，它存放着大量的数据。当数据库服务器收到了WEB服务器的请求后，会对SQL语句进行处理，并将返回的结果发送给WEB服务器，接下来，WEB服务器将收到的数据结果转换为HTML文本形式发送给浏览器。</p><ol start="2"><li>B&#x2F;S架构的优点</li></ol><p>a&gt; 浏览器和数据库服务器采用多对多的方式连接。因此适合在广域网里实现巨大的互联网，甚至是全球网，有着很强大的信息共享性。</p><p>b&gt; 浏览器只处理一些简单的逻辑事务，负担小。</p><p>c&gt; 数据都集中存放在数据库服务器，所以不存在数据不一致现象。</p><p>d&gt; 随着服务器负载的增加，可以平滑地增加服务器的个数并建立集群服务器系统，然后在各个服务器之间做负载均衡。</p><p>e&gt; B&#x2F;S建立在广域网上，所以需要的网速要求不高。</p><p>f&gt; 不需要安装客户端，只要能连上网，就能随时随地的浏览页面。</p><p>g&gt; 能有效地保护数据平台和管理访问权限，确保服务器数据库的数据安全。</p><ol start="3"><li>B&#x2F;S架构的缺点</li></ol><p>a&gt; 服务器承担着重要的责任，数据负荷较重。一旦发生服务器“崩溃”等问题，后果不堪设想。</p><p>b&gt; 页面需要不断地动态刷新，当用户增多时，网速会变慢。</p><ol start="4"><li>B&#x2F;S架构的应用</li></ol><p>比如WEBQQ，从WEBQQ名称中的WEB就不难看出它属于B&#x2F;S架构，是一种浏览器服务器结构。事实上也是如此，因为WEBQQ根本不需要安装客户端，只需要有浏览器就可以进行聊天交互了</p><p>原文链接：<a href="https://blog.csdn.net/zhengqijun_/article/details/53056624">https://blog.csdn.net/zhengqijun_&#x2F;article&#x2F;details&#x2F;53056624</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> net </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JSON与XML的区别比较</title>
      <link href="/RookieRoom/2020/05/19/json-yu-xml-de-qu-bie-bi-jiao/"/>
      <url>/RookieRoom/2020/05/19/json-yu-xml-de-qu-bie-bi-jiao/</url>
      
        <content type="html"><![CDATA[<p>2.XML和JSON优缺点</p><p>(1).XML的优缺点<br>&lt;1&gt;.XML的优点<br>　　A.格式统一，符合标准；<br>　　B.容易与其他系统进行远程交互，数据共享比较方便。<br>&lt;2&gt;.XML的缺点<br>　　A.XML文件庞大，文件格式复杂，传输占带宽；<br>　　B.服务器端和客户端都需要花费大量代码来解析XML，导致服务器端和客户端代码变得异常复杂且不易维护；<br>　　C.客户端不同浏览器之间解析XML的方式不一致，需要重复编写很多代码；<br>　　D.服务器端和客户端解析XML花费较多的资源和时间。</p><span id="more"></span><p>(2).JSON的优缺点<br>&lt;1&gt;.JSON的优点：<br>　　A.数据格式比较简单，易于读写，格式都是压缩的，占用带宽小；<br>　　B.易于解析，客户端JavaScript可以简单的通过eval()进行JSON数据的读取；<br>　　C.支持多种语言，包括ActionScript, C, C#, ColdFusion, Java, JavaScript, Perl, PHP, Python, Ruby等服务器端语言，便于服务器端的解析；<br>　　D.在PHP世界，已经有PHP-JSON和JSON-PHP出现了，偏于PHP序列化后的程序直接调用，PHP服务器端的对象、数组等能直接生成JSON格式，便于客户端的访问提取；<br>　　E.因为JSON格式能直接为服务器端代码使用，大大简化了服务器端和客户端的代码开发量，且完成任务不变，并且易于维护。<br>&lt;2&gt;.JSON的缺点<br>　　A.没有XML格式这么推广的深入人心和喜用广泛，没有XML那么通用性；<br>　　B.JSON格式目前在Web Service中推广还属于初级阶段。</p><p>资料地址：<a href="https://www.cnblogs.com/SanMaoSpace/p/3139186.html">https://www.cnblogs.com/SanMaoSpace/p/3139186.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Json </tag>
            
            <tag> xml </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ashx和aspx的区别</title>
      <link href="/RookieRoom/2020/05/19/ashx-he-aspx-de-qu-bie/"/>
      <url>/RookieRoom/2020/05/19/ashx-he-aspx-de-qu-bie/</url>
      
        <content type="html"><![CDATA[<p>ashx是什么文件?</p><p>.ashx 文件用于写web handler的。.ashx文件与.aspx文件类似，可以通过它来调用HttpHandler类，它免去了普通.aspx页面的控件解析以及页面处理的过程。其实就是带HTML和C#的混合文件。</p><span id="more"></span><p>.ashx文件适合产生供浏览器处理的、不需要回发处理的数据格式，例如用于生成动态图片、动态文本等内容。</p><p>ashx文件是.net 2.0新加的文件类型(其实在.net 1.0下已经可用,但是没有公开提供).</p><p>ashx文件和aspx文件有什么不同? 我们先新建一个ashx文件看看:<br>代码示例：<br>当然你完全可以用.aspx 的文件后缀。使用.ashx 可以让你专注于编程而不用管相关的WEB技术。.ashx必须包含IsReusable. 如下例所示 </p><p>资料链接：<a href="https://blog.csdn.net/whatday/article/details/54893889">https://blog.csdn.net/whatday/article/details/54893889</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> net </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何用ASP.NET实现弹出添加成功对话框，然后页面跳转</title>
      <link href="/RookieRoom/2020/05/19/ru-he-yong-aspnet-shi-xian-dan-chu-tian-jia-cheng-gong-dui-hua-kuang-ran-hou-ye-mian-tiao-zhuan/"/>
      <url>/RookieRoom/2020/05/19/ru-he-yong-aspnet-shi-xian-dan-chu-tian-jia-cheng-gong-dui-hua-kuang-ran-hou-ye-mian-tiao-zhuan/</url>
      
        <content type="html"><![CDATA[<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Response.Write(<span class="string">&quot; &lt;script&gt;alert(&#x27;添加成功&#x27;);location=&#x27;carMan.aspx&#x27;&lt;/script&gt;&quot;</span>); </span><br></pre></td></tr></table></figure><p>资料地址：<a href="https://www.itdaan.com/blog/2009/02/10/cd829e88709590f4ea44866258fa2ed.html">https://www.itdaan.com/blog/2009/02/10/cd829e88709590f4ea44866258fa2ed.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> net </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>input 输入框实时监听输入内容</title>
      <link href="/RookieRoom/2020/05/19/input-shu-ru-kuang-shi-shi-jian-ting-shu-ru-nei-rong/"/>
      <url>/RookieRoom/2020/05/19/input-shu-ru-kuang-shi-shi-jian-ting-shu-ru-nei-rong/</url>
      
        <content type="html"><![CDATA[<p>JQ版本：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/jquery-1.11.3.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;input&quot;</span> &gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     $(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        $(<span class="string">&#x27;input&#x27;</span>).<span class="title function_">bind</span>(<span class="string">&#x27;input porpertychange&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>($(<span class="variable language_">this</span>).<span class="title function_">val</span>());</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><span id="more"></span><p>JS版本：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;input&quot;</span> <span class="attr">oninput</span>=<span class="string">&quot;aa(event)&quot;</span> <span class="attr">onporpertychange</span>=<span class="string">&quot;aa(event)&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   <span class="keyword">var</span> input = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;input&#x27;</span>); </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">function</span> <span class="title function_">aa</span>(<span class="params">e</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">console</span>.<span class="title function_">log</span>(input.<span class="property">value</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SqlServer仅仅删除表格中的数据</title>
      <link href="/RookieRoom/2020/05/19/sqlserver-jin-jin-shan-chu-biao-ge-zhong-de-shu-ju/"/>
      <url>/RookieRoom/2020/05/19/sqlserver-jin-jin-shan-chu-biao-ge-zhong-de-shu-ju/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> 表名称</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqlserver 重置标识符</title>
      <link href="/RookieRoom/2020/05/19/sql-chong-zhi-biao-shi-fu/"/>
      <url>/RookieRoom/2020/05/19/sql-chong-zhi-biao-shi-fu/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DBCC CHECKIDENT (<span class="string">&#x27;table_name&#x27;</span>, RESEED, <span class="number">0</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编译型语言、解释型语言、脚本语言的区别</title>
      <link href="/RookieRoom/2020/05/19/bian-yi-xing-yu-yan-jie-shi-xing-yu-yan-jiao-ben-yu-yan-de-qu-bie/"/>
      <url>/RookieRoom/2020/05/19/bian-yi-xing-yu-yan-jie-shi-xing-yu-yan-jiao-ben-yu-yan-de-qu-bie/</url>
      
        <content type="html"><![CDATA[<h2 id="编译型语言、解释型语言、脚本语言的区别"><a href="#编译型语言、解释型语言、脚本语言的区别" class="headerlink" title="编译型语言、解释型语言、脚本语言的区别"></a>编译型语言、解释型语言、脚本语言的区别</h2><blockquote><p>​        计算机不能直接理解高级语言，只能直接理解机器语言，所以必须要把高级语言翻译成机器语言，计算机才能执行高级语言编写的程序。</p><p>​         把高级语言翻译成机器语言的两种方式：一种是编译，一种是解释。两种方式只是翻译的时间不通。</p></blockquote><span id="more"></span><h2 id="1-编译"><a href="#1-编译" class="headerlink" title="1.编译"></a>1.编译</h2><blockquote><p>编译型语言写的程序执行之前，需要一个专门的编译过程，把程序编译成为机器语言的文件，比如exe文件，以后要运行的话就不用重新翻译了，直接使用编译的结果就行了（exe文件），因为翻译只做了一次，运行时不需要翻译，所以编译型语言的程序执行效率高，但也不能一概而论，部分解释型语言的解释器通过在运行时动态优化代码，甚至能够使解释型语言的性能超过编译型语言。</p><p>最典型的例子就是C语言。</p></blockquote><h2 id="2-解释"><a href="#2-解释" class="headerlink" title="2.解释"></a>2.解释</h2><blockquote><p>解释则不同，解释性语言的程序不需要编译，省了道工序，解释性语言在运行程序的时候才翻译，比如解释性basic语言，专门有一个解释器能够直接执行basic程序，每个语句都是执行的时候才翻译。这样解释性语言每执行一次就要翻译一次，效率比较低。解释是一句一句的翻译。</p><p>此外，随着Java等基于虚拟机的语言的兴起，我们又不能把语言纯粹地分成解释型和编译型这两种。</p><p>用Java来举例，Java首先是通过编译器编译成字节码文件，然后在运行时通过解释器给解释成机器文件。所以我们说Java是一种先编译后解释的语言。</p><p>再换成C#，C#首先是通过编译器将C#文件编译成IL文件，然后在通过CLR将IL文件编译成机器文件。所以我们说C#是一门纯编译语言，但是C#是一门需要二次编译的语言。同理也可等效运用到基于.NET平台上的其他语言。</p></blockquote><h2 id="脚本语言"><a href="#脚本语言" class="headerlink" title="脚本语言"></a>脚本语言</h2><blockquote><p> 脚本语言是一种解释性的语言</p><p> 脚本语言又被称为扩建的语言，或者动态语言，脚本语言不需要编译，可以直接用，由解释器来负责解释。</p><p> 脚本语言一般都是以文本形式存在,类似于一种命令.</p><p> 举个例子说,如果你建立了一个程序,叫aaa.exe,可以打开.aa为扩展名的文件.</p><p> 你为.aa文件的编写指定了一套规则(语法),当别人编写了.aa文件后,你的程序用这种规则来理解编写人的意图,并作出回应.那么,这一套规则就是脚本语言</p></blockquote><h2 id="解释型语言是不是完全等同于脚本语言"><a href="#解释型语言是不是完全等同于脚本语言" class="headerlink" title="解释型语言是不是完全等同于脚本语言?"></a><strong>解释型语言是不是完全等同于脚本语言?</strong></h2><blockquote><p>何为解释型语言？典型的是java，凡是运行java作的程序都得装个虚拟机(jre),这个jre就是解释器。脚本，我比较熟悉的是perl，也是典型的解释型语言。但是显然java不是脚本语言，脚本语言的特征主要有无类型、无内存管理等等，功能较弱，但是使用方便。</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 有趣的编程知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git GUI如何汉化设置成中文？</title>
      <link href="/RookieRoom/2020/05/08/git-gui-ru-he-han-hua-she-zhi-cheng-zhong-wen/"/>
      <url>/RookieRoom/2020/05/08/git-gui-ru-he-han-hua-she-zhi-cheng-zhong-wen/</url>
      
        <content type="html"><![CDATA[<p>Git bash的汉化很简单，只需要在命令行界面点击右键-选择option-Windows-然后在里面将language设置成中文就可以了。</p><p><img src="https://img-blog.csdnimg.cn/20191102111109755.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTQ3MjM0Nzk=,size_16,color_FFFFFF,t_70" alt="img"></p><p>上图是设置好的界面。</p><span id="more"></span><p>但是反观Git GUI，想要设置成中文就显得没那么容易了。打开设置里面，全是密密麻麻的的英文，而且找了半天也没找到对应的语言设置，那么到底应该怎么设置Git GUI的中文显示呢？</p><p>其实Git GUI本身是真的没有这个语言设置选项的，所幸的是网上已有网友针对其开发出了对应的汉化包，我们只需要<a href="https://github.com/stayor/git-gui-zh">下载</a>安装即可。</p><p>下载下来之后，将其放到&#x2F;mingw64&#x2F;share&#x2F;git-gui&#x2F;lib&#x2F;msgs&#x2F;zh_cn.msg，有可能Git的安装路径下面没有msgs这个文件夹，那么需要自己创建之后再将这个汉化包来放进去。这样就算是汉化完了。</p><p>重新打开软件，你就会发现软件界面已经变成了熟悉的中文了。</p><p><img src="https://img-blog.csdnimg.cn/20191102112411542.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTQ3MjM0Nzk=,size_16,color_FFFFFF,t_70" alt="img"></p><p><img src="https://img-blog.csdnimg.cn/20191102112546330.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTQ3MjM0Nzk=,size_16,color_FFFFFF,t_70" alt="img"></p><p>转自:<a href="https://blog.csdn.net/u014723479/article/details/102869727">https://blog.csdn.net/u014723479/article/details/102869727<a></p>]]></content>
      
      
      
        <tags>
            
            <tag> git版本控制器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git安装教程（Windows安装超详细教程）</title>
      <link href="/RookieRoom/2020/05/08/git-an-zhuang-jiao-cheng-windows-an-zhuang-chao-xiang-xi-jiao-cheng/"/>
      <url>/RookieRoom/2020/05/08/git-an-zhuang-jiao-cheng-windows-an-zhuang-chao-xiang-xi-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<blockquote><p>今天重新安装一下Git软件；就详细的记录一下安装步骤；毕竟自己的系列还差各位一个许诺；其实安装非常简单；但是具体的含义；大家一定要明白。</p><p>个人安装的环境：（快速安装基本简单；下一步默认其实也可以；看图就懂）</p><p>Windows10 64bit</p><p>Git 2.13.0(下载 git网址 ： <a href="https://link.jianshu.com/?t=https://git-scm.com/download">https://git-scm.com/download</a>）</p></blockquote><span id="more"></span><p>一.安装步骤</p><blockquote><p>以图为主；补充一些课外的知识吧！</p></blockquote><h4 id="1-开始安装的界面–开始吧"><a href="#1-开始安装的界面–开始吧" class="headerlink" title="1.开始安装的界面–开始吧!"></a>1.开始安装的界面–开始吧!</h4><p><img src="https://upload-images.jianshu.io/upload_images/1625340-ed9bf0f750dd9dd9.png?imageMogr2" alt="img"></p><p>安装的界面</p><h4 id="2-安装路径"><a href="#2-安装路径" class="headerlink" title="2.安装路径"></a>2.安装路径</h4><p><img src="https://upload-images.jianshu.io/upload_images/1625340-4ea6a4a9f6a02d39.png?imageMogr2" alt="img"></p><p>安装路径</p><h4 id="3-选择安装组件–推荐全选哟！"><a href="#3-选择安装组件–推荐全选哟！" class="headerlink" title="3.选择安装组件–推荐全选哟！"></a>3.选择安装组件–推荐全选哟！</h4><p><img src="https://upload-images.jianshu.io/upload_images/1625340-be289d5604878843.png?imageMogr2" alt="img"></p><p>选择安装组件</p><h4 id="4-我的选择"><a href="#4-我的选择" class="headerlink" title="4.我的选择"></a>4.我的选择</h4><p><img src="https://upload-images.jianshu.io/upload_images/1625340-b6e5e27802fc9847.png?imageMogr2" alt="img"></p><p>我的选择</p><h4 id="5-菜单文件夹–没什么要讲的-默认！"><a href="#5-菜单文件夹–没什么要讲的-默认！" class="headerlink" title="5.菜单文件夹–没什么要讲的 默认！"></a>5.菜单文件夹–没什么要讲的 默认！</h4><p><img src="https://upload-images.jianshu.io/upload_images/1625340-2f31b5b0f9b7d7e8.png?imageMogr2" alt="img"></p><p>菜单文件夹</p><h4 id="6-修改系统的环境变量—建议选择上面两个（我是第一个）"><a href="#6-修改系统的环境变量—建议选择上面两个（我是第一个）" class="headerlink" title="6.修改系统的环境变量—建议选择上面两个（我是第一个）"></a>6.修改系统的环境变量—建议选择上面两个（我是第一个）</h4><p><img src="https://upload-images.jianshu.io/upload_images/1625340-b8dcc9ec2d4c323b.png?imageMogr2" alt="img"></p><p>修改系统的环境变量</p><h4 id="7-SSL的证书的选择"><a href="#7-SSL的证书的选择" class="headerlink" title="7.SSL的证书的选择"></a>7.SSL的证书的选择</h4><p><img src="https://upload-images.jianshu.io/upload_images/1625340-6d5a020a0eb30c66.png?imageMogr2" alt="img"></p><p>SSL的证书的选择</p><blockquote><p><strong>https：（全称：Hyper Text Transfer Protocol over Secure Socket Layer）</strong></p><p>简单讲是HTTP的安全版。即HTTP下加入SSL层，HTTPS的安全基础是SSL，因此加密的详细内容就需要SSL。 它是一个URI scheme（抽象标识符体系），句法类同<a href="https://link.jianshu.com/?t=https://baike.baidu.com/item/http">http</a>:体系。用于安全的HTTP数据传输。</p><p><a href="https://link.jianshu.com/?t=https://baike.baidu.com/item/https/285356?fr=aladdin">参考链接：百科</a></p></blockquote><h4 id="8-配置行尾结束符（个人选择第三个了；可以根据自己情况而定）"><a href="#8-配置行尾结束符（个人选择第三个了；可以根据自己情况而定）" class="headerlink" title="8.配置行尾结束符（个人选择第三个了；可以根据自己情况而定）"></a>8.配置行尾结束符（个人选择第三个了；可以根据自己情况而定）</h4><p><img src="https://upload-images.jianshu.io/upload_images/1625340-6f1357783077497e.png?imageMogr2" alt="img"></p><p><strong>配置行尾结束符</strong></p><p><img src="https://upload-images.jianshu.io/upload_images/1625340-09404bca515d8faa.png?imageMogr2" alt="img"></p><p>Unix-style和Windows：简单说:windows&lt;回车换行&gt; （carriage return AND line feed）使用：“\n\r” 换行；Unix&lt;换行&gt; （carriage return）下使用：“\n”；各个系统换行问题：</p><p><strong>9.配置终端仿真</strong></p><p><img src="https://upload-images.jianshu.io/upload_images/1625340-c8455f88430080cd.png?imageMogr2" alt="img"></p><blockquote><p>大多数其他Cygwin&#x2F;MSYS终端一样，MinTTY也是基于pseudo终端(“pty”)设备的。但是MinTTY并不能完全替代windows的<a href="https://link.jianshu.com/?t=https://baike.baidu.com/item/%E5%91%BD%E4%BB%A4%E6%8F%90%E7%A4%BA%E7%AC%A6">命令提示符</a>。windows上自带简单的<a href="https://link.jianshu.com/?t=https://baike.baidu.com/item/%E6%96%87%E6%9C%AC%E8%BE%93%E5%87%BA">文本输出</a>的原生态的<a href="https://link.jianshu.com/?t=https://baike.baidu.com/item/%E5%91%BD%E4%BB%A4%E6%8F%90%E7%A4%BA%E7%AC%A6">命令提示符</a>通常可以很好的工作，但交互性更好的诸如MinTTY这样的应用程序却可能出现故障——虽然通常都有应对方案。这就是为什么MinTTY不能完全替代windows自带的<a href="https://link.jianshu.com/?t=https://baike.baidu.com/item/%E5%91%BD%E4%BB%A4%E6%8F%90%E7%A4%BA%E7%AC%A6">命令提示符</a>。</p><p><a href="https://link.jianshu.com/?t=https://baike.baidu.com/item/MinTTY/9579126?fr=aladdin">参考链接：百科</a></p></blockquote><p><strong>10.其他的配置–默认即可</strong></p><p><img src="https://upload-images.jianshu.io/upload_images/1625340-ed74bffae2a8a283.png?imageMogr2" alt="img"></p><blockquote><p>认证管理器：<a href="https://link.jianshu.com/?t=https://github.com/Microsoft/Git-Credential-Manager-for-Windows">参考链接</a>就是Github的账号等认证机制</p><p>符号链接：<a href="https://link.jianshu.com/?t=https://github.com/git-for-windows/git/wiki/Symbolic-Links">参考</a>官方介绍<a href="https://link.jianshu.com/?t=http://blog.csdn.net/u013777351/article/details/50557260">参考博文</a></p></blockquote><h4 id="11-安装中；文件复制…"><a href="#11-安装中；文件复制…" class="headerlink" title="11.安装中；文件复制…"></a><strong>11.安装中；文件复制…</strong></h4><p><img src="https://upload-images.jianshu.io/upload_images/1625340-e502dd0ca2958b03.png?imageMogr2" alt="img"></p><p>安装中</p><h4 id="12-使用测试界面"><a href="#12-使用测试界面" class="headerlink" title="12.使用测试界面"></a>12.使用测试界面</h4><p><img src="https://upload-images.jianshu.io/upload_images/1625340-e496c05441dd1b45.png?imageMogr2" alt="img"></p><p>.使用测试界面</p><p>13、使用过程问题解决会汇总</p><p>如果中文没有正常显示，请求鼠标右击选择“option”选项，更换语言即可。</p><p><img src="https://upload-images.jianshu.io/upload_images/1625340-ca4128fa0b62c4af.png?imageMogr2" alt="img"></p><p>编码修改</p><p>转自：<a href="https://www.jianshu.com/p/414ccd423efc">https://www.jianshu.com/p/414ccd423efc</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> git版本控制器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>partial 局部类型概念中的修饰符 可以在多个地方续写类、接口、结构</title>
      <link href="/RookieRoom/2020/05/08/partial-ju-bu-lei-xing-gai-nian-zhong-de-xiu-shi-fu-ke-yi-zai-duo-ge-di-fang-xu-xie-lei-jie-kou-jie-gou/"/>
      <url>/RookieRoom/2020/05/08/partial-ju-bu-lei-xing-gai-nian-zhong-de-xiu-shi-fu-ke-yi-zai-duo-ge-di-fang-xu-xie-lei-jie-kou-jie-gou/</url>
      
        <content type="html"><![CDATA[<p>partial是局部类型概念中的<a href="https://baike.baidu.com/item/%E4%BF%AE%E9%A5%B0/10912887">修饰</a>符，同一个类型的各个部分都必须有，修饰符在编译的时候仍会将各个部分的局部类型合并成一个完整的类。</p><h2 id="操作方法"><a href="#操作方法" class="headerlink" title="操作方法"></a>操作方法</h2><ol><li>c#2.0引入了局部类型的概念。局部类型允许我们将一个类、接口或结构分成好几个部分，分别实现在几个不同的.cs文件中。<br>　　局部类型适用于以下情况：</li></ol><p>（1）类型特别大，<em><strong>不宜</strong></em>放在一个文件中实现。</p><p>（2）一个类型中的一部分代码为自动化工具生成的代码，不宜与我们自己编写的代码混合在一起。</p><p>（3）需要多人合作编写一个类。</p><span id="more"></span><p>局部类型是一个纯语言层的编译处理，不影响任何执行机制–事实上c#<a href="https://baike.baidu.com/item/%E7%BC%96%E8%AF%91%E5%99%A8">编译器</a>在编译的时候仍会将各个部分的局部类型合并成一个完整的类。</p><p>public partial class Program</p><p>( )</p><p>static void main(string args)</p><p>( )</p><p>partial class Program</p><p>( )</p><p>public void test( )</p><p>( )</p><h2 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h2><p>（1）局部类型只适用于类、接口、结构，不支持委托和枚举。</p><p>（2）同一个类型的各个部分必须都有<a href="https://baike.baidu.com/item/%E4%BF%AE%E9%A5%B0%E7%AC%A6">修饰符</a>partial。</p><p>（3）使用局部类型时，一个类型的各个部分必须位于相同的命名空间中。</p><p>（4）一个类型的各个部分必须同时编译。</p><h2 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h2><p>（1）关键字partial是一个上下文关键字，只有和class、struct、interface放在一起时才有关键字的含义。因此partial的引入不会影响现有代码中名称为partial的变量。</p><p>（2）局部类型的各个部分一般是分开放在几个不同的.cs文件中，但c#<a href="https://baike.baidu.com/item/%E7%BC%96%E8%AF%91%E5%99%A8">编译器</a>允许我们将他们放在同一文件中。</p><h2 id="应用特性"><a href="#应用特性" class="headerlink" title="应用特性"></a>应用特性</h2><p>在局部类型上的特性具有“累加”效应。</p><p>[Attribute1,Attribute2(“hello”)]</p><p>partial class Class1{}</p><p>[Attribute3,Attribute2(“Exit”)]</p><p>partial class Class1{}</p><p>相当于</p><p>[Attribute1,Attribute2(“hello”),Attribute3,Attribute2(“Exit”)]</p><p>class Class1{}</p><h2 id="修饰符"><a href="#修饰符" class="headerlink" title="修饰符"></a>修饰符</h2><p>（1）一个类型的各个部分上的访问修饰符必须维持一致性。</p><p>（2）一个类型有一个部分使用了abstract<a href="https://baike.baidu.com/item/%E4%BF%AE%E9%A5%B0%E7%AC%A6">修饰符</a>，那么整个类都将被视为<a href="https://baike.baidu.com/item/%E6%8A%BD%E8%B1%A1%E7%B1%BB">抽象类</a>。</p><p>（3）如果一个类型有一个部分使用了sealed修饰符，那么整个类都将被视为<a href="https://baike.baidu.com/item/%E5%AF%86%E5%B0%81%E7%B1%BB">密封类</a>。</p><p>（4）一个类的各个部分不能使用相互矛盾的修饰符，比如不能再一个部分上使用abstract，又在另一个部分上使用sealed。</p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用C# Winform写个英汉词典</title>
      <link href="/RookieRoom/2020/05/07/yong-c-winform-xie-ge-ying-han-ci-dian/"/>
      <url>/RookieRoom/2020/05/07/yong-c-winform-xie-ge-ying-han-ci-dian/</url>
      
        <content type="html"><![CDATA[<p><strong>简介</strong></p><p>平日里我们学习,生活中可能都要用到各种词典,许多人可能觉得 词典是个多么神奇的东西.</p><p>其实 一本简单的词典软件要写出来很简单, 当然 功能强大 智能的词典软件 就另当别论了.</p><p>那么,我们今天就来写一款 英汉词典翻译软件 吧 :)</p> <span id="more"></span><p><strong>原理</strong></p><p>这里 主要用到了 一个泛型字典 Dictionary&lt;string, string&gt; 通过他的键key作为词典搜索的英文单词 来找到其相对应的值Value(中文意思)</p><p>查找方式是 通过输入文本框的 TextChanged 事件 进行自动搜索 泛型字典里对应的中文意思(Value值)</p><p>当然 不可能每个单词 我这里都能搜索到 为此,在本地没有搜索到的情况下 </p><p>这里新增了一个在线搜索功能 (当然是默认为 5秒时间内 文本框没有输入内容的时候[默认为已经确认为要查找的单词]</p><p>才触发的-这里用了timer的tick计时事件)</p><p>使用 LinkLabel 的功能 将在线翻译网站 ICIBA.com(爱词霸的链接显示出来) 当然链接附加了 当前未搜索到的单词</p><p>只需要点击该链接 就能直接获取到 爱词霸网站 该单词的中文翻译了 :)</p><p>此外, 经过学友<a href="http://www.cnblogs.com/JuneZhang/">@June</a>的推荐 参考了下<a href="http://www.cnblogs.com/JuneZhang/archive/2011/03/22/1991631.html">June的学习笔记</a>以及<a href="http://www.cnblogs.com/zhaoblogs/archive/2011/12/07/2278938.html">阿东东先生的博文-C#WinformTextbox猜想输入</a></p><p>在这里添加了一个 输入单词 智能提示的功能(输入某个不完整的单词 获取相应的智能提示列表)  如下图</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011121905412038.jpg" alt="img"></p><p>首先让我们开始做 界面设计</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011111612055713.jpg" alt="img"></p><p>在程序里 我们需要调用 英汉词典.txt 文本文件, 我们可以直接拷贝 粘贴该文件到 项目下面 </p><p>但如果 直接粘贴  该文本文件到项目下的话 我们需要调用其绝对路径 比如</p><p>D:\study\博客园cnblog\博客日志\英汉词典\英汉词典\英汉字典\英汉词典.txt</p><p>这样有个缺点, 一旦 D:...\英汉字典\ 下的 英汉词典.txt 被转移了 我们项目程序 就无法找到该文本文件了, 同理 如果你将你的该项目程序打包 发给你的朋友</p><p>在他电脑上也无法找到 文本文件 因为该文本仅存在于 你电脑的 D:...\英汉字典\ 目录下</p><p>所以 我们需要 将其绝对路径 设置为相对路径</p><p>这里介绍一个 调用相对路径的办法 请看 <a href="http://www.cnblogs.com/longwu/articles/2300010.html">Visual Studio 项目下 设置文件路径为 相对路径</a></p><p>文本词典内容</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011111704123384.jpg" alt="img"></p><p>英汉词典.txt <a href="http://files.cnblogs.com/longwu/%E8%8B%B1%E6%B1%89%E8%AF%8D%E5%85%B8.txt">下载</a></p><p>代码如下(附 新增的智能提示代码)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line">public partial class frmDictionary : Form</span><br><span class="line">&#123;</span><br><span class="line">    public frmDictionary()</span><br><span class="line">    &#123;</span><br><span class="line">        InitializeComponent();</span><br><span class="line">        this.Load += (s, e) =&gt; &#123; InitializeTimer(); &#125;; //窗体加载的时候 初始化计时器</span><br><span class="line">    &#125;</span><br><span class="line">    //new一个泛型字典来装载 英汉词典.txt里的内容(键值对)</span><br><span class="line">    Dictionary&lt;string, string&gt; dic = new Dictionary&lt;string, string&gt;();</span><br><span class="line"></span><br><span class="line">    //----------------------------新增代码---------------------------//</span><br><span class="line">    //new一个 泛型list  用来装载智能提示的单词</span><br><span class="line">    List&lt;string&gt; lsSmart = new List&lt;string&gt;();</span><br><span class="line">    //----------------------------新增代码---------------------------//</span><br><span class="line"></span><br><span class="line">    //读取 绝对路径下的英汉词典.txt的每一行数据 采用的是系统默认的Encoding编码格式</span><br><span class="line">    //string[] strArr = File.ReadAllLines(@&quot;D:\study\博客园cnblogs\博客日志\C#日志\英汉词典\英汉词典\英汉词典.txt&quot;, Encoding.Default);</span><br><span class="line"></span><br><span class="line">    //读取 英汉词典.txt的相对 路径</span><br><span class="line">    string[] strArr = File.ReadAllLines(@&quot;英汉词典.txt&quot;, Encoding.Default);</span><br><span class="line"></span><br><span class="line">    //在窗体加载的时候自动运行</span><br><span class="line">    private void frmDictionary_Load(object sender, EventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line">        //遍历每一行 </span><br><span class="line">        //每行有2个数 英文单词 和 中文翻译</span><br><span class="line">        for (int i = 0; i &lt; strArr.Length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            //使用Split方法 移除空的单个字符</span><br><span class="line">            string[] strArr1 = strArr[i].Split(new char[] &#123; &#x27; &#x27; &#125;, StringSplitOptions.RemoveEmptyEntries);</span><br><span class="line"></span><br><span class="line">            //如果 泛型字典的键key值里 不包含数组里strArr1第0个数</span><br><span class="line">            //避免重复添加</span><br><span class="line">            if (dic.Keys.Contains(strArr1[0]) == false)</span><br><span class="line">            &#123;</span><br><span class="line">                //则将数组里的键(英文单词) 和值(中文翻译) 添加到泛型字典里</span><br><span class="line">                dic.Add(strArr1[0], strArr1[1]);</span><br><span class="line"></span><br><span class="line">                //----------------------新增代码-------------------------------//</span><br><span class="line">                lsSmart.Add(strArr1[0]);    //将每行 数组里的第0个元素 即英文单词 添加到泛型list中</span><br><span class="line">                //----------------------新增代码-------------------------------//</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        //----------------------新增代码-------------------------------//</span><br><span class="line">        // C#封装了一个AutoCompleteStringCollection 类 用于完成某些 窗体控件 自动补全 功能的字符串集合</span><br><span class="line">        AutoCompleteStringCollection strings = new AutoCompleteStringCollection();</span><br><span class="line">        // 将获取所有英文单词的 list泛型转换成数组 添加到 strings里</span><br><span class="line">        strings.AddRange(lsSmart.ToArray());</span><br><span class="line">        txtInput.AutoCompleteCustomSource = strings;  //然后赋给文本框的 自动补全 所需的资源 属性</span><br><span class="line">        txtInput.AutoCompleteSource = AutoCompleteSource.CustomSource;  //指定 CustomSource 为数据源</span><br><span class="line">        txtInput.AutoCompleteMode = AutoCompleteMode.Suggest; //启动自动补全模式</span><br><span class="line">        //----------------------新增代码-------------------------------//</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //在文本框的TextChanged 事件下进行 键值查询</span><br><span class="line">    private void txtInput_TextChanged(object sender, EventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line">        //如果泛型字典里的包含有key 与文本框输入相同的话</span><br><span class="line">        //则在 下面的文本框里显示结果Value</span><br><span class="line">        if (dic.Keys.Contains(txtInput.Text.Trim()))</span><br><span class="line">        &#123;</span><br><span class="line">            //如果输入文本框的内容 存在于泛型字典的键key中</span><br><span class="line">            //则显示该键相对应的值 并赋给文本框</span><br><span class="line">            txtResult.Text = dic[txtInput.Text.Trim()];</span><br><span class="line">            //由于此时搜索到了翻译结果 所以请求在线搜索变为false</span><br><span class="line">            linkWebSearch.Visible = false;</span><br><span class="line">            timer.Stop();</span><br><span class="line">            TimeLength = 0;</span><br><span class="line">        &#125;</span><br><span class="line">        //如果输入的数据为空</span><br><span class="line">        else if (txtInput.Text.Trim() == &quot;&quot;)</span><br><span class="line">        &#123;</span><br><span class="line">            //提示 输入单词</span><br><span class="line">            txtResult.Text = &quot;请输入你要查询的单词&quot;;</span><br><span class="line">            //此时没有进行查询  所以请求在线搜索变为false</span><br><span class="line">            linkWebSearch.Visible = false;</span><br><span class="line">            timer.Stop();</span><br><span class="line">            TimeLength = 0;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;   //否则显示正在搜索中</span><br><span class="line">            txtResult.Text = &quot;正在搜索...&quot;;</span><br><span class="line">            timer.Start(); //开始计时</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //这里 调用了 LinkLable的 click事件</span><br><span class="line">    private void linkWebSearch_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)</span><br><span class="line">    &#123;</span><br><span class="line">        //显示出 网络链接 http://www.iciba.com/ 后面加上 当前在没有搜索到的单词</span><br><span class="line">        //点击后 直接在线搜索 http://www.iciba.com/单词 </span><br><span class="line">        System.Diagnostics.Process.Start(&quot;explorer.exe&quot;, &quot;http://www.iciba.com/&quot; + txtInput.Text.Trim());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    //定义一个初始化正在搜索时间为0</span><br><span class="line">    public int TimeLength = 0;</span><br><span class="line"></span><br><span class="line">    public Timer timer;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 初始化计时器</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public void InitializeTimer()</span><br><span class="line">    &#123;</span><br><span class="line">        timer = new Timer();</span><br><span class="line">        timer.Interval = 1000; //间隔为1秒</span><br><span class="line">        timer.Tick += (s, e) =&gt; &#123; ShowOnlineSearch(); &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 判断正在搜索的时间 如果超过5秒则启动在线搜索</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public void ShowOnlineSearch()</span><br><span class="line">    &#123;</span><br><span class="line">        TimeLength++;</span><br><span class="line">        //当时间到5秒的时候</span><br><span class="line">        if (TimeLength &gt;= 5)</span><br><span class="line">        &#123;</span><br><span class="line">            //将txtResult文本框的 内容清空</span><br><span class="line">            txtResult.Text = &quot;&quot;;</span><br><span class="line">            //在线翻译网站链接显示出来</span><br><span class="line">            linkWebSearch.Visible = true;</span><br><span class="line">            //显示LinkLabel的文本内容</span><br><span class="line">            linkWebSearch.Text = &quot;没找到? 试下在爱词霸在线翻译里查找:&quot; + &quot;\r\n&quot; + txtInput.Text.Trim() + &quot;  :)&quot;;</span><br><span class="line">            //计时器停止计时</span><br><span class="line">            timer.Stop();</span><br><span class="line">            TimeLength = 0;</span><br><span class="line">            //lblTimer.Text = TimeLength.ToString();</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            //否则 网站链接不显示</span><br><span class="line">            linkWebSearch.Visible = false;</span><br><span class="line">            //lblTimer.Text = TimeLength.ToString();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新增效果测试: </p><p>当输入一个不完整的单词 textbox会自动提供相应的下拉列表来 匹配你的输入</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011121906285522.jpg" alt="img"></p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011121906395214.jpg" alt="img"></p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011121906384915.jpg" alt="img"></p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011121906401263.jpg" alt="img"></p><p>当输入某些 特殊词汇 查找不到的时候</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011111612421687.jpg" alt="img"></p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011111612425220.jpg" alt="img"></p><p>点击链接 直接跳转到 ICIBA.com 翻译页面</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012022104313544.jpg" alt="img"></p><p>这样一个英汉词典就完成了 ~~~~ :)</p><p><strong>附上源代码</strong>   <a href="http://files.cnblogs.com/longwu/%E8%8B%B1%E6%B1%89%E8%AF%8D%E5%85%B8.zip">英汉词典.zip</a></p><p>转自：<a href="https://www.cnblogs.com/longwu/archive/2011/11/16/2251009.html">https://www.cnblogs.com/longwu/archive/2011/11/16/2251009.html<a></p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> 有趣的编程知识 </tag>
            
            <tag> winfrom </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用C# Winform写个猜拳小游戏</title>
      <link href="/RookieRoom/2020/05/07/yong-c-winform-xie-ge-cai-quan-xiao-you-xi/"/>
      <url>/RookieRoom/2020/05/07/yong-c-winform-xie-ge-cai-quan-xiao-you-xi/</url>
      
        <content type="html"><![CDATA[<p><strong>简介</strong></p><p>猜拳游戏,也叫划拳游戏. 顾名思义就是: 2个人在一起划拳,比谁赢,比谁输. 这里的猜拳游戏是人和电脑之间的较量.</p><p><strong>原理</strong></p><p>原理很简单, 给人3个值(字符串): 剪刀 石头 布. 电脑的出拳用的随机的Random函数得到整型值,然后将其转换成相应的字符串 用于显示在窗体界面上.同时再写一个方法将字符串(剪刀 石头 布)转成成相应的整型值. 写一个裁判的方法 将两者的整型值进行比较,得出输,赢,平局的结果.</p> <span id="more"></span><p>界面设计(如图)</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011101704532255.jpg" alt="img"></p><p>代码:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line">public FingerGuessingGame()</span><br><span class="line">&#123;</span><br><span class="line">    InitializeComponent();</span><br><span class="line">    //注册各个按钮的鼠标单击事件</span><br><span class="line">    this.btnJiandao.Click += (s, e) =&gt; &#123; Jiandao(); &#125;;</span><br><span class="line">    this.btnShitou.Click += (s, e) =&gt; &#123; Shitou(); &#125;;</span><br><span class="line">    this.btnBu.Click += (s, e) =&gt; &#123; Bu(); &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 玩家出剪刀</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">public void Jiandao()</span><br><span class="line">&#123;</span><br><span class="line">    //将玩家单击按钮的内容显示在玩家出了的label框中</span><br><span class="line">    lblPlayer.Text = btnJiandao.Text;     </span><br><span class="line">    //获取label框中的内容并转换成整数</span><br><span class="line">    int vPlayer = ChangeStrToInt(lblPlayer.Text);</span><br><span class="line">    //调用裁判的方法  将玩家和电脑的数据进行对比 并显示在结果框中</span><br><span class="line">    lblResult.Text =  Judge(vPlayer, PC());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 玩家出石头</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">public void Shitou()</span><br><span class="line">&#123;</span><br><span class="line">    lblPlayer.Text = btnShitou.Text;</span><br><span class="line">    int vPlayer = ChangeStrToInt(btnShitou.Text);</span><br><span class="line">    lblResult.Text = Judge(vPlayer, PC());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 玩家出布</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">public void Bu()</span><br><span class="line">&#123;</span><br><span class="line">    lblPlayer.Text = btnBu.Text;</span><br><span class="line">    int vPlayer = ChangeStrToInt(btnBu.Text);</span><br><span class="line">    lblResult.Text = Judge(vPlayer, PC());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 写一个将鼠标点击事件 将字符串转换成相应数值的方法</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">/// &lt;param name=&quot;str&quot;&gt;玩家点击的按钮内容&lt;/param&gt;</span><br><span class="line">/// &lt;returns&gt;按钮相对应的整数值&lt;/returns&gt;</span><br><span class="line">public int ChangeStrToInt(string str)</span><br><span class="line">&#123;</span><br><span class="line">    int n = 0;</span><br><span class="line">    //对传入的字符串进行判断</span><br><span class="line">    switch (str)</span><br><span class="line">    &#123;</span><br><span class="line">        case &quot;剪刀&quot;:</span><br><span class="line">            n = 1;</span><br><span class="line">            break;</span><br><span class="line">        case &quot;石头&quot;:</span><br><span class="line">            n = 2;</span><br><span class="line">            break;</span><br><span class="line">        case &quot;布&quot;:</span><br><span class="line">            n = 3;</span><br><span class="line">            break;</span><br><span class="line">        default:</span><br><span class="line">            throw new Exception(&quot;未知出法&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    return n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 写一个电脑随机出拳的方法</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">/// &lt;returns&gt;电脑的出拳值&lt;/returns&gt;</span><br><span class="line">public int PC()</span><br><span class="line">&#123;</span><br><span class="line">    Random ran = new Random();</span><br><span class="line">    //random.Next方法 取最小值,但不取最大值, 所以在1-3内随机取值</span><br><span class="line">    int vPC = ran.Next(1, 4);</span><br><span class="line">    string strPC = string.Empty;</span><br><span class="line">    //进行简单判定 获取的随机值 同时转换成相应的字符串</span><br><span class="line">    switch (vPC)</span><br><span class="line">    &#123;</span><br><span class="line">        case 1:</span><br><span class="line">            strPC = &quot;剪刀&quot;;</span><br><span class="line">            break;</span><br><span class="line">        case 2:</span><br><span class="line">            strPC = &quot;石头&quot;;</span><br><span class="line">            break;</span><br><span class="line">        case 3:</span><br><span class="line">            strPC = &quot;布&quot;;</span><br><span class="line">            break;</span><br><span class="line">        default:</span><br><span class="line">            throw new Exception(&quot;未知错误:无法判断玩家出的拳!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    lblPC.Text = strPC;//显示电脑出的拳</span><br><span class="line">    return vPC;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 比较玩家和电脑的值 判断谁赢谁输</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">/// &lt;param name=&quot;Player&quot;&gt;玩家的出拳值&lt;/param&gt;</span><br><span class="line">/// &lt;param name=&quot;PC&quot;&gt;电脑的出拳值&lt;/param&gt;</span><br><span class="line">public string Judge(int Player, int PC)</span><br><span class="line">&#123;</span><br><span class="line">    //剪刀1  石头2  布3</span><br><span class="line">    //赢的情况有2种 1种是 玩家比电脑值大1  一种是小2</span><br><span class="line">    int tmp =  Player - PC;</span><br><span class="line">    string judgedResult = string.Empty;</span><br><span class="line">    if (tmp == 1 || tmp == -2)</span><br><span class="line">        judgedResult = &quot;你赢了&quot;;</span><br><span class="line">    //平的情况只有1种 即为出拳相同</span><br><span class="line">    else if (tmp == 0)</span><br><span class="line">        judgedResult = &quot;平局&quot;;</span><br><span class="line">    //除此之外 只有输的情况了</span><br><span class="line">    else</span><br><span class="line">        judgedResult = &quot;你输了&quot;;</span><br><span class="line">    return judgedResult;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果测试:</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011101705032421.jpg" alt="img"></p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011101705035852.jpg" alt="img"></p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011101705041858.jpg" alt="img"></p><p>这样一个猜拳小游戏就做好了!~~~:)</p><p>转自：<a href="https://www.cnblogs.com/longwu/archive/2011/10/17/2214531.html">https://www.cnblogs.com/longwu/archive/2011/10/17/2214531.html<a></p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> 有趣的编程知识 </tag>
            
            <tag> winfrom </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>写个简单的18禁图片查看器</title>
      <link href="/RookieRoom/2020/05/07/xie-ge-jian-dan-de-18-jin-tu-pian-cha-kan-qi/"/>
      <url>/RookieRoom/2020/05/07/xie-ge-jian-dan-de-18-jin-tu-pian-cha-kan-qi/</url>
      
        <content type="html"><![CDATA[<p><strong>简介</strong></p><p>这是一个用C# Winform 写的简易的成人图片查看器,通过输入你的身份证号码来判断你是否年满18岁,如果18岁以上,你则允许查看图片,否则会提示你”未成年”,不能查看.</p><p><strong>原理</strong></p><p>就是通过截取身份证18位号码中的第7到第10位 那是每个公民的出生年份,然后与当前系统的年份相比较,如果差距大于18,说明你成年了,小于18则未成年.</p> <span id="more"></span><p><strong>界面设计</strong></p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011092217014985.jpg" alt="img"></p><p><strong>代码</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">public void Check18OrNot(string input)</span><br><span class="line">&#123;</span><br><span class="line">    //首先判断身份证是否为18位</span><br><span class="line">    //如果身份证ID不等于18位,则弹出提示</span><br><span class="line">    if (input.Length != 18)</span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(&quot;身份证必须为长度为18位的整数(可包含字母)!&quot;);</span><br><span class="line">        //弹出提示,同时,美女图片的可看性为false,即不能查看</span><br><span class="line">        pbGirl.Visible = false;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    else  //如果为18位长度,则进行截取其中的年份字符</span><br><span class="line">    &#123;</span><br><span class="line">        //截取里面的出生年份</span><br><span class="line">        //比如 361855199308128866</span><br><span class="line">        //从第7个数开始(索引序号为6) 截取4位数</span><br><span class="line">        string idYear = input.Substring(6, 4);</span><br><span class="line"></span><br><span class="line">        //获取当前系统年份并减去身份证中的年份</span><br><span class="line">        //如果小于18,说明你未成年,不能看</span><br><span class="line">        if (DateTime.Now.Year - int.Parse(idYear) &lt; 18)</span><br><span class="line">        &#123;</span><br><span class="line">            MessageBox.Show(&quot;对不起,你未成年,不能查看!&quot;);</span><br><span class="line">            //图片的可见性为false</span><br><span class="line">            pbGirl.Visible = false;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            //如果通过了,则弹出提示,可以查看.</span><br><span class="line">            MessageBox.Show(&quot;请查看!&quot;);</span><br><span class="line">            //图片可见性为true</span><br><span class="line">            pbGirl.Visible = true;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">private void btnCheck_Click(object sender, EventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    //获取文本框中输入的身份证ID</span><br><span class="line">    string idNumber = txtIdNumber.Text.Trim();</span><br><span class="line">    Check18OrNot(idNumber); //检查用户是否满18岁</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>运行效果测试</strong></p><p>开始运行,当前图片为隐藏.</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011092217062749.jpg" alt="img"></p><p>随便输入一串号码数字和字母(数量不足18位), 弹出提示 身份证号码不足18位!</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011092217064185.jpg" alt="img"></p><p>随便输入一串数字(仅数字且不足18位),弹出提示 身份证号码不足18位!</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011092217073129.jpg" alt="img"></p><p>输入准确的18位身份证号码,弹出提示 请查看,同时图片为可见.</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011092217074715.jpg" alt="img"></p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011092217080592.jpg" alt="img"></p><p>如果你未满18岁,弹出提示:”你未成年,不允许看图片.” 图片为不可见!</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011092302100358.jpg" alt="img"></p><p>呵呵 一个简单的18禁 图片查看器就写好了! ~~~~~:)</p><p>转自：<a href="https://www.cnblogs.com/longwu/archive/2011/09/22/2185327.html">https://www.cnblogs.com/longwu/archive/2011/09/22/2185327.html<a></p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> 有趣的编程知识 </tag>
            
            <tag> winfrom </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Silverlight圣诞下雪动画及其扩展应用的实现</title>
      <link href="/RookieRoom/2020/05/07/silverlight-sheng-dan-xia-xue-dong-hua-ji-qi-kuo-zhan-ying-yong-de-shi-xian/"/>
      <url>/RookieRoom/2020/05/07/silverlight-sheng-dan-xia-xue-dong-hua-ji-qi-kuo-zhan-ying-yong-de-shi-xian/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a><strong>简介</strong></h2><p>前段时间看到网上有几篇关于silverlight下雪动画的文章,看过Demo之后,觉得非常有趣;于是脑海里闪现出一些想法,学习了下,并将其扩展成了以下几个有趣的web小应用.关于Silverlight下雪动画的实现方法有很多,这里有篇文章介绍的非常详细,值得一看: <a href="http://www.kirupa.com/blend_silverlight/falling_snow_silverlight_pg1.htm">Falling Snow in Silverlight</a> </p> <span id="more"></span><h2 id="应用展示"><a href="#应用展示" class="headerlink" title="应用展示"></a><strong>应用展示</strong></h2><p>这里有3个扩展的web应用 <strong>Merry Christmas</strong>, <strong>古风歌曲页面 以及 情人节快乐!</strong></p><p>主要用到了物体飘落的动画,加之背景图片音效,以及一些操作功能,使得一个简单的页面看起来变得更生动了些.</p><p><strong>Merry Christmas(无音乐版)</strong>                                      <a href="http://files.cnblogs.com/longwu/SL_MerryChristmas_XAP.zip">XAP发布包</a>(带音乐版)             </p><iframe id="_sl_historyFrame" width="320" height="240" style="margin: 0px; padding: 0px; visibility: hidden; height: 0px; width: 0px; border: 0px;"></iframe>  <p><strong>古风歌曲页面(无音乐版)</strong>                                       <a href="http://files.cnblogs.com/longwu/Duihuanghun_XAP.zip">XAP发布包</a>(带音乐版)</p><iframe id="_sl_historyFrame" width="320" height="240" style="margin: 0px; padding: 0px; visibility: hidden; height: 0px; width: 0px; border: 0px;"></iframe> <p><strong>情人节快乐!</strong> <strong>(无音乐版)</strong>                                       <a href="http://files.cnblogs.com/longwu/SL_LoveYou_XAP.zip">XAP发布包</a>(带音乐版)</p><p>如有需要, 各位男生可以模仿着做个, 送给心怡的她哦 :)</p><iframe id="_sl_historyFrame" width="320" height="240" style="margin: 0px; padding: 0px; visibility: hidden; height: 0px; width: 0px; border: 0px;"></iframe> <p>好了,展示就到这里结束,开始我们今天的主题,实现圣诞下雪扩展应用之Merry Christmas!</p><h2 id="Merry-Christmas-实现"><a href="#Merry-Christmas-实现" class="headerlink" title="Merry Christmas 实现"></a>Merry Christmas 实现</h2><p><strong>1. 创建Silverlight导航应用程序</strong></p><p>首先,我们需要新建一个Silverlight导航应用程序,这里用到了Silverlight导航框架,主要因为它为我们定义好了页面自适应浏览器大小的框架以及页面顶端的导航控制按钮. 所以我们稍作修改就可以用了,非常方便.</p><p><img src="https://images0.cnblogs.com/blog/326877/201303/21033517-ec6393e1c797497295af9699ed3ba829.png" alt="01"></p><p>Silverlight 导航应用程序主页面</p><p> <img src="https://images0.cnblogs.com/blog/326877/201303/21033518-ca44009e9d2e4c86b93eeee55ba1b51e.png" alt="03"></p><p><strong>2. 添加应用程序背景</strong></p><p>我们在MainPage.xaml页面添加一张圣诞快乐的背景图片</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--背景图片 Begin--&gt;</span><br><span class="line">&lt;Grid.Background&gt;</span><br><span class="line">    &lt;ImageBrush ImageSource=&quot;Images/background_1600_900.jpg&quot;  Stretch=&quot;Fill&quot; /&gt;</span><br><span class="line">&lt;/Grid.Background&gt;</span><br><span class="line">&lt;!--背景图片 End--&gt;</span><br></pre></td></tr></table></figure><p>运行效果如下, 效果不错吧 :)</p><p><img src="https://images0.cnblogs.com/blog/326877/201303/21033528-b56d4508bf4d4843be29b4b001199300.png" alt="04"> </p><p><strong>3.下雪效果的实现</strong></p><p>首先,我们需要在MainPage.xaml页面画出一些静态的雪花Ellipse.</p><p>添加一个用于装载雪花Ellipse的Canvas;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;Canvas x:Name=&quot;CanvasLayOut&quot; Width=&quot;1600&quot; Height=&quot;900&quot; &gt;</span><br><span class="line">&lt;/Canvas&gt;</span><br></pre></td></tr></table></figure><p>然后,新建个UserControl, 名为SnowEllipse.xaml, 主要用于在Canvas内部动态添加多个Ellipse雪花,并让其运动.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;UserControl x:Class=&quot;SL_MerryChristmas.SnowEllipse&quot;</span><br><span class="line">    xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span><br><span class="line">    xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span><br><span class="line">    xmlns:d=&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span><br><span class="line">    xmlns:mc=&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span><br><span class="line">    Width=&quot;20&quot; Height=&quot;20&quot; &gt;</span><br><span class="line"></span><br><span class="line">    &lt;Grid x:Name=&quot;LayoutRoot&quot;  &gt;</span><br><span class="line">        &lt;Ellipse  Fill=&quot;#FFFFFF&quot; /&gt;</span><br><span class="line">    &lt;/Grid&gt;</span><br><span class="line">&lt;/UserControl&gt;</span><br></pre></td></tr></table></figure><p>之后,在后端C#代码里实现了 设置雪花属性 以及 使其运动起来的方法.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 设置雪花属性 </span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">/// &lt;param name=&quot;snowAreaWidth&quot;&gt;雪花可移动区域的宽度&lt;/param&gt;</span><br><span class="line">/// &lt;param name=&quot;snowAreaHeight&quot;&gt;雪花可移动区域的高度&lt;/param&gt;</span><br><span class="line">public void SetSnowEllipse(int snowAreaWidth, int snowAreaHeight)</span><br><span class="line">&#123;</span><br><span class="line">    scale = randomNumber.Next(1, 15); //定义一个中间值 确保高和宽一样</span><br><span class="line">    radius = randomNumber.Next(2); //雪花移动半径</span><br><span class="line"></span><br><span class="line">    //水平和垂直方向的移动速度</span><br><span class="line">    horizontalSpeed = randomNumber.NextDouble() / 50;</span><br><span class="line">    verticalSpeed = randomNumber.NextDouble() * 2;</span><br><span class="line"></span><br><span class="line">    //每个雪花的高和宽</span><br><span class="line">    this.Width = scale;</span><br><span class="line">    this.Height = scale;</span><br><span class="line"></span><br><span class="line">    //透明度</span><br><span class="line">    this.Opacity = 0.1 + randomNumber.NextDouble();</span><br><span class="line"></span><br><span class="line">    SnowArea = new Point(snowAreaWidth, snowAreaHeight);</span><br><span class="line"></span><br><span class="line">    //设置每个雪花的初始位置</span><br><span class="line">    Canvas.SetLeft(this, randomNumber.Next(snowAreaWidth));</span><br><span class="line">    Canvas.SetTop(this, randomNumber.Next(snowAreaHeight));</span><br><span class="line"></span><br><span class="line">    //获取初始的移动纵坐标 </span><br><span class="line">    yMovedPosition = Canvas.GetTop(this);</span><br><span class="line"></span><br><span class="line">    //注册雪花移动方法 循环触发</span><br><span class="line">    CompositionTarget.Rendering += (s, e) =&gt; &#123; MoveSnow(); &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 让页面上的雪花动起来</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">public void MoveSnow()</span><br><span class="line">&#123;</span><br><span class="line">    //移动过程中的位置变化</span><br><span class="line">    xMovedPosition += horizontalSpeed;</span><br><span class="line">    yMovedPosition += verticalSpeed;</span><br><span class="line"></span><br><span class="line">    //设置移动状态下的雪花坐标</span><br><span class="line">    Canvas.SetTop(this, yMovedPosition);</span><br><span class="line">    Canvas.SetLeft(this, Canvas.GetLeft(this) + radius * Math.Cos(xMovedPosition));</span><br><span class="line"></span><br><span class="line">    //如果雪花掉落出底部区域 则将其移回顶部</span><br><span class="line">    if (Canvas.GetTop(this) &gt; SnowArea.Y)</span><br><span class="line">    &#123;</span><br><span class="line">        Canvas.SetTop(this, -30);</span><br><span class="line">        yMovedPosition = Canvas.GetTop(this);</span><br><span class="line">    &#125;</span><br><span class="line">    //如果水平方向超出边界 则随机移动到可见区域的某个位置</span><br><span class="line">    if (Canvas.GetLeft(this) &gt; SnowArea.X || Canvas.GetLeft(this) &lt; 0)</span><br><span class="line">    &#123;</span><br><span class="line">        Canvas.SetLeft(this, randomNumber.Next((int)SnowArea.X));</span><br><span class="line">        xMovedPosition = Canvas.GetLeft(this);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为了能让程序跑起来,我们需要在MainPage.xaml.cs里写点代码. </p><p>DrawStaticSnow()方法主要用于在web页面画出静态雪花,而计时器timer则用于让静态的雪花在页面上飘起来.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">SnowEllipse snowEllipse = new SnowEllipse();</span><br><span class="line">private DispatcherTimer timer = new DispatcherTimer();</span><br><span class="line">public MainPage()</span><br><span class="line">&#123;</span><br><span class="line">    InitializeComponent();</span><br><span class="line">    //画雪花</span><br><span class="line">    DrawStaticSnow(200, 1600, 900);</span><br><span class="line"></span><br><span class="line">    //让雪花动起来</span><br><span class="line">    snowEllipse = new SnowEllipse();</span><br><span class="line">    timer.Interval = TimeSpan.FromMilliseconds(5);</span><br><span class="line">    timer.Tick += (s, e) =&gt; &#123; snowEllipse.MoveSnow(); &#125;;</span><br><span class="line">    timer.Start();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 在页面上画出静态雪花</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">/// &lt;param name=&quot;count&quot;&gt;雪花的个数&lt;/param&gt;</span><br><span class="line">/// &lt;param name=&quot;snowAreaWidth&quot;&gt;雪花可移动区域的宽度&lt;/param&gt;</span><br><span class="line">/// &lt;param name=&quot;snowAreaHeight&quot;&gt;雪花可移动区域的高度&lt;/param&gt;</span><br><span class="line">public void DrawStaticSnow(int count, int snowAreaWidth, int snowAreaHeight)</span><br><span class="line">&#123;</span><br><span class="line">    for (int i = 0; i &lt; count; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        snowEllipse = new SnowEllipse();</span><br><span class="line">        snowEllipse.SetSnowEllipse(snowAreaWidth, snowAreaHeight);</span><br><span class="line">        CanvasLayOut.Children.Add(snowEllipse);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 于是,雪花漫天飞舞的场景便做成了:) 我们运行下,看看效果.</p><p><img src="https://images0.cnblogs.com/blog/326877/201303/21033542-e22ca5919e8d4161a071b0f2213c9c1b.png" alt="动态下雪"></p><p><strong>4. 控制下雪以及增加操作提示功能</strong></p><p>为了增加一些我们想要的功能,于是把MainPage.xaml页面顶部导航栏内容稍作修改.</p><p>右侧的两个按钮改为一个开关下雪和一个操作提示按钮</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;HyperlinkButton x:Name=&quot;btnFallingSnowOrNot&quot; Style=&quot;&#123;StaticResource LinkStyle&#125;&quot; </span><br><span class="line">            Content=&quot;雪停〉_〈&quot; /&gt;</span><br><span class="line"></span><br><span class="line">&lt;Rectangle x:Name=&quot;Divider1&quot; Style=&quot;&#123;StaticResource DividerStyle&#125;&quot;/&gt;</span><br><span class="line"></span><br><span class="line">&lt;HyperlinkButton x:Name=&quot;btnToolTips&quot; Style=&quot;&#123;StaticResource LinkStyle&#125;&quot; </span><br><span class="line">                Content=&quot;操作提示&quot; /&gt;</span><br></pre></td></tr></table></figure><p>针对操作提示按钮,我们还需要写个Popup控件,用于在鼠标移上去的时候弹出操作提示框,移出的时候则让提示框隐藏起来.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--操作提示弹出窗口 Begin--&gt;</span><br><span class="line">&lt;Popup Name=&quot;ppTooltips&quot; HorizontalAlignment=&quot;Right&quot; Margin=&quot;0 40 140 5&quot; IsOpen=&quot;False&quot;&gt;</span><br><span class="line">    &lt;Border Width=&quot;140&quot; Height=&quot;165&quot; &gt;</span><br><span class="line">        &lt;StackPanel Orientation=&quot;Vertical&quot;&gt;</span><br><span class="line">            &lt;TextBlock Text=&quot;   鼠标右键有菜单哦&quot; Width=&quot;140&quot; FontSize=&quot;14&quot; Height=&quot;20&quot; Margin=&quot;0 3 0 0&quot; Foreground=&quot;White&quot; FontWeight=&quot;Bold&quot;&gt;&lt;/TextBlock&gt;</span><br><span class="line">            &lt;Image Source=&quot;Images/Menu/Menu.png&quot; Width=&quot;114&quot; Height=&quot;130&quot;&gt;&lt;/Image&gt;</span><br><span class="line">        &lt;/StackPanel&gt;</span><br><span class="line">    &lt;/Border&gt;</span><br><span class="line">&lt;/Popup&gt;</span><br><span class="line">&lt;!--操作提示弹出窗口 End--&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>接着,我们需要在后端实现这两个功能:</p><p>首先,在MainPage.xaml.cs的构造函数内部加入相应的鼠标事件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//给雪停 和 操作提示 两个按钮注册鼠标事件</span><br><span class="line">btnFallingSnowOrNot.Click += (s, e) =&gt; &#123; btnFallingSnowOrNot_Click(s, e); &#125;;</span><br><span class="line">btnToolTips.MouseEnter += (s, e) =&gt; &#123; btnToolTips_MouseEnter(s, e); &#125;;</span><br><span class="line">btnToolTips.MouseLeave += (s, e) =&gt; &#123; btnToolTips_MouseLevae(s, e); &#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>接着实现这些事件, 实现控制下雪事件:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 控制下雪单击事件</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">private void btnFallingSnowOrNot_Click(object sender, RoutedEventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    if (timer.IsEnabled)</span><br><span class="line">    &#123;</span><br><span class="line">        btnFallingSnowOrNot.Content = &quot;雪下∩_∩&quot;;</span><br><span class="line">        timer.Stop();</span><br><span class="line">        CanvasLayOut.Children.Clear(); //移除所有的雪花颗粒</span><br><span class="line">    &#125;</span><br><span class="line">    else if (!timer.IsEnabled)</span><br><span class="line">    &#123;</span><br><span class="line">        btnFallingSnowOrNot.Content = &quot;雪停〉_〈&quot;;</span><br><span class="line">        DrawStaticSnow(200, 1600, 900); //重新绘制雪花颗粒</span><br><span class="line">        timer.Start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>实现操作提示窗体弹出和隐藏事件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 提示窗体的弹出和隐藏事件</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">private void btnToolTips_MouseEnter(object sender, MouseEventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    if (!ppTooltips.IsOpen)</span><br><span class="line">        ppTooltips.IsOpen = true;</span><br><span class="line">&#125;</span><br><span class="line">private void btnToolTips_MouseLevae(object sender, MouseEventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    if (ppTooltips.IsOpen)</span><br><span class="line">        ppTooltips.IsOpen = false;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行下看看</p><p>默认为下雪中</p><p><img src="https://images0.cnblogs.com/blog/326877/201303/21033555-fb514e2dd43f41b68b0db2f922898618.png" alt="雪下"></p><p>点击雪停,则雪停.</p><p><img src="https://images0.cnblogs.com/blog/326877/201303/21033609-6541227e3b4e4ff082d5fdf19c9deeb4.png" alt="雪停"></p><p>鼠标移到操作提示按钮上,弹出操作提示.</p><p><img src="https://images0.cnblogs.com/blog/326877/201303/21033621-83c6015a51994e66a2cd4e035ba50f29.png" alt="操作提示"></p><p>移开鼠标,操作提示消失.</p><p><img src="https://images0.cnblogs.com/blog/326877/201303/21033634-b7ea9659fde34c869bcb263b27cc377b.png" alt="操作提示消失"></p><p><strong>5. 鼠标右键菜单</strong></p><p>好了,最后我们需要实现的是一个鼠标右键菜单.</p><p>实现前,我们需要先给页面添加一首背景音乐,让页面看起来更动感;在MainPage.xaml.cs构造函数内部加入如下代码.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//添加背景音乐</span><br><span class="line">backgroundMusic.Source = new Uri(&quot;/We Wish You A Merry Christmas.mp3&quot;, UriKind.RelativeOrAbsolute);</span><br><span class="line">backgroundMusic.AutoPlay = true;</span><br><span class="line">LayoutRoot.Children.Add(backgroundMusic);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这样当我们运行的时候 就能听到美妙动听的背景音乐了 :)</p><p>接着是制作鼠标右键菜单:</p><p>这里,我们需要先添加一个System.Windows.Controls.Input.Toolkit dll的引用.</p><p>如果添加引用里没有的话可以去这里下载 <a href="http://silverlight.codeplex.com/releases/view/43528/">http://silverlight.codeplex.com/releases/view/43528/</a> </p><p><img src="https://images0.cnblogs.com/blog/326877/201303/21033637-f5cd52bc05e142fe8fd7fc2a84a612a9.png" alt="添加Toolkit引用"></p><p>然后在MainPage.xaml里引用它</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xmlns:my=&quot;clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>并添加右键菜单的XAML代码,右键菜单包含了刷新页面,开关背景音乐,全屏观看以及关闭页面4个方法.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--右键菜单 Begin--&gt;</span><br><span class="line">&lt;my:ContextMenuService.ContextMenu&gt;</span><br><span class="line">    &lt;my:ContextMenu FontSize=&quot;14&quot; FontStyle=&quot;Normal&quot;  Foreground=&quot;#0087CB&quot;  BorderBrush=&quot;#0087CB&quot; BorderThickness=&quot;2&quot; &gt;</span><br><span class="line">        &lt;my:MenuItem  Header=&quot;刷新&quot; ToolTipService.ToolTip=&quot;刷新页面&quot; Click=&quot;MenuItem_Click&quot;&gt;</span><br><span class="line">            &lt;my:MenuItem.Icon&gt;</span><br><span class="line">                &lt;Image Source=&quot;Images/Menu/Refresh_blue.png&quot;/&gt;</span><br><span class="line">            &lt;/my:MenuItem.Icon&gt;</span><br><span class="line">        &lt;/my:MenuItem&gt;</span><br><span class="line">        &lt;my:Separator/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;my:MenuItem x:Name=&quot;itemCloseMusic&quot; Header=&quot;关闭音乐&quot; ToolTipService.ToolTip=&quot;关闭背景音乐&quot; Click=&quot;MenuItem_Click&quot;&gt;</span><br><span class="line">            &lt;my:MenuItem.Icon&gt;</span><br><span class="line">                &lt;Image x:Name=&quot;imgPlay&quot; Source=&quot;Images/Menu/Player Stop_blue.png&quot;  Width=&quot;16&quot; Height=&quot;16&quot; /&gt;</span><br><span class="line">            &lt;/my:MenuItem.Icon&gt;</span><br><span class="line">        &lt;/my:MenuItem&gt;</span><br><span class="line">        &lt;my:Separator/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;my:MenuItem x:Name=&quot;itemFullScreen&quot; Header=&quot;全屏模式&quot; ToolTipService.ToolTip=&quot;启动全屏模式&quot; Click=&quot;MenuItem_Click&quot;&gt;</span><br><span class="line">            &lt;my:MenuItem.Icon&gt;</span><br><span class="line">                &lt;Image Source=&quot;Images/Menu/Full Size_blue.png&quot; Width=&quot;16&quot; Height=&quot;16&quot; /&gt;</span><br><span class="line">            &lt;/my:MenuItem.Icon&gt;</span><br><span class="line">        &lt;/my:MenuItem&gt;</span><br><span class="line">        &lt;my:Separator/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;my:MenuItem  Header=&quot;关闭&quot;  ToolTipService.ToolTip=&quot;关闭当前页面&quot; Click=&quot;MenuItem_Click&quot;&gt;</span><br><span class="line">            &lt;my:MenuItem.Icon&gt;</span><br><span class="line">                &lt;Image Source=&quot;Images/Menu/Exit_blue.png&quot; Width=&quot;16&quot; Height=&quot;16&quot; /&gt;</span><br><span class="line">            &lt;/my:MenuItem.Icon&gt;</span><br><span class="line">        &lt;/my:MenuItem&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/my:ContextMenu&gt;</span><br><span class="line">&lt;/my:ContextMenuService.ContextMenu&gt;</span><br><span class="line">&lt;!--右键菜单 End--&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>之后,在后端相应的菜单按钮事件下,实现这些方法.</p><p>这里需要增加一个Menu类,里面包含了全屏,关闭当前页面,刷新3个方法.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">public class Menu</span><br><span class="line">&#123;</span><br><span class="line">    public static string FullScreen(string screenState)</span><br><span class="line">    &#123;</span><br><span class="line">        if (screenState == &quot;全屏模式&quot;)</span><br><span class="line">            screenState = &quot;退出全屏&quot;;</span><br><span class="line">        else</span><br><span class="line">            screenState = &quot;全屏模式&quot;;</span><br><span class="line">        if (!Application.Current.Host.Content.IsFullScreen)</span><br><span class="line">            Application.Current.Host.Content.IsFullScreen = true;</span><br><span class="line">        else</span><br><span class="line">            Application.Current.Host.Content.IsFullScreen = false;</span><br><span class="line">        return screenState;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void Exit()</span><br><span class="line">    &#123;</span><br><span class="line">        if (MessageBox.Show(&quot;确认关闭当前页面?(仅在IE下有效)&quot;, &quot;退出提示&quot;, MessageBoxButton.OKCancel) == MessageBoxResult.OK)</span><br><span class="line">        &#123;</span><br><span class="line">            System.Windows.Browser.HtmlPage.Window.Invoke(&quot;close&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void Refresh(Frame frame)</span><br><span class="line">    &#123;</span><br><span class="line">        frame.Refresh();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最后是实现我们的右键菜单的单击事件了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 鼠标右键菜单</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">private void MenuItem_Click(object sender, RoutedEventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    MenuItem menuItem = sender as MenuItem;</span><br><span class="line">    switch (menuItem.Header.ToString())</span><br><span class="line">    &#123;</span><br><span class="line">        case &quot;刷新&quot;:</span><br><span class="line">            timer.Stop();</span><br><span class="line">            CanvasLayOut.Children.Clear();</span><br><span class="line">            DrawStaticSnow(200, 1600, 900); //重新绘制雪花颗粒</span><br><span class="line">            timer.Start();</span><br><span class="line">            backgroundMusic.Stop();</span><br><span class="line">            backgroundMusic.Play();</span><br><span class="line">            break;</span><br><span class="line"></span><br><span class="line">        case &quot;关闭音乐&quot;:</span><br><span class="line">            backgroundMusic.Stop();</span><br><span class="line">            menuItem.Header = &quot;开启音乐&quot;;</span><br><span class="line">            ToolTipService.SetToolTip(menuItem, &quot;开启背景音乐&quot;);</span><br><span class="line">            Uri uriPlay = new Uri(&quot;Images/Menu/Player Play_blue.png&quot;, UriKind.RelativeOrAbsolute);</span><br><span class="line">            BitmapImage bitImg = new BitmapImage(uriPlay);</span><br><span class="line">            imgPlay.Source = bitImg;</span><br><span class="line">            break;</span><br><span class="line"></span><br><span class="line">        case &quot;开启音乐&quot;:</span><br><span class="line">            backgroundMusic.Play();</span><br><span class="line">            menuItem.Header = &quot;关闭音乐&quot;;</span><br><span class="line">            ToolTipService.SetToolTip(menuItem, &quot;关闭背景音乐&quot;);</span><br><span class="line">            Uri uriStop = new Uri(&quot;Images/Menu/Player Stop_blue.png&quot;, UriKind.RelativeOrAbsolute);</span><br><span class="line">            BitmapImage bitImg2 = new BitmapImage(uriStop);</span><br><span class="line">            imgPlay.Source = bitImg2;</span><br><span class="line">            break;</span><br><span class="line"></span><br><span class="line">        case &quot;全屏模式&quot;:</span><br><span class="line">            menuItem.Header = Menu.FullScreen(menuItem.Header.ToString());</span><br><span class="line">            ToolTipService.SetToolTip(menuItem, &quot;退出全屏模式&quot;);</span><br><span class="line">            break;</span><br><span class="line"></span><br><span class="line">        case &quot;退出全屏&quot;:</span><br><span class="line">            menuItem.Header = Menu.FullScreen(menuItem.Header.ToString());</span><br><span class="line">            ToolTipService.SetToolTip(menuItem, &quot;启动全屏模式&quot;);</span><br><span class="line">            break;</span><br><span class="line"></span><br><span class="line">        case &quot;关闭&quot;:</span><br><span class="line">            Menu.Exit();</span><br><span class="line">            break;</span><br><span class="line"></span><br><span class="line">        default:</span><br><span class="line">            break;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行看下</p><p><img src="https://images0.cnblogs.com/blog/326877/201303/21033647-351fbe81d7d24523a16954697c6ce482.png" alt="右键菜单"></p><p>到这里整个下雪的扩展小应用Merry Christmas便完成了 :)   <a href="http://files.cnblogs.com/longwu/SL_MerryChristmas.zip">Merry Christmas源代码下载</a></p><p>转自：<a href="https://www.cnblogs.com/longwu/archive/2013/03/21/2972460.html">https://www.cnblogs.com/longwu/archive/2013/03/21/2972460.html<a></p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> 有趣的编程知识 </tag>
            
            <tag> net </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C# Winform简单模拟水果店结账系统</title>
      <link href="/RookieRoom/2020/05/07/c-winform-jian-dan-mo-ni-shui-guo-dian-jie-zhang-xi-tong/"/>
      <url>/RookieRoom/2020/05/07/c-winform-jian-dan-mo-ni-shui-guo-dian-jie-zhang-xi-tong/</url>
      
        <content type="html"><![CDATA[<p><strong>简介</strong></p><p>现实生活中,结账系统无处不在,屡见不鲜,各种结账系统 例如:订餐结账系统,超市购物结账系统,酒店客房结账系统等等.</p><p>其实结账原理都大同小异,即将所有购买项的价格都相加,当然,那些复杂的系统所考虑的方面和功能就很多了,我们这里不考虑.</p><p>那么,今天我们这里简单的写个基于 C# winform 平台的水果店结账系统.</p> <span id="more"></span><p><strong>原理</strong></p><p>这里用到了一个主窗体类和一个构造函数类(用于存取物品的属性) 以及一个写有物品属性的文本文件(目的是方便后期更改物品的价格,折扣等属性).</p><p>首先,通过FileStream的OpenRead方法来打开并读取文本文件, 然后调用StreamReader类来读取FileStream的字符并将里面的字节转换成字符串.</p><p>具体FileStream和StreamReader的用法,可以参考<a href="http://blog.sina.com.cn/s/blog_3d4c358f0100ncbp.html">这里</a>. 从文本里获取到物品的属性之后,将其存到一个具有物品属性的数据结构的泛型list里.</p><p>然后在各个物品按钮下调用不同物品,每个物品在泛型list里的索引也是不一样的.之后再用一个整型数组来存储每个物品按钮的点击次数,即为每个物品的购买次数.</p><p>还用到一个泛型list来装载每个物品的价格,在计算总价的时候遍历并相加, 得到一个总价.</p><p>这里还用到了一个优惠价,即每个物品都有不同的打折方式(代码里有详细注释), 用到了一些简单的算法,并且在结账的时候自动计算每项物品最终优惠了多少.</p><p>然后用 总价-优惠价&#x3D;最终我们应该支付的价格,当然这里也实现了物品清空的功能.</p><p><strong>界面设计</strong></p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011122010324453.jpg" alt="img"></p><p>fruits.txt文本内容</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011122012184947.jpg" alt="img"></p><p>代码如下</p><p>ProductAttribute.cs 类里的代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">class ProductAttribute</span><br><span class="line">&#123;</span><br><span class="line">    //初始化各值</span><br><span class="line">    string name = &quot;&quot;;</span><br><span class="line">    float price = 0;</span><br><span class="line">    int code1 = 0;</span><br><span class="line">    int code2 = 0;</span><br><span class="line">    //构造方法</span><br><span class="line">    public ProductAttribute(string n, float p, int c1, int c2)</span><br><span class="line">    &#123;</span><br><span class="line">        //实现ProductAttribute的数据结构 </span><br><span class="line">        //里面可以传入如下参数</span><br><span class="line">        name = n;</span><br><span class="line">        price = p;</span><br><span class="line">        code1 = c1;</span><br><span class="line">        code2 = c2;</span><br><span class="line">    &#125;</span><br><span class="line">    //可以读取ProductAttribute里的Name 属性</span><br><span class="line">    public string Name</span><br><span class="line">    &#123;</span><br><span class="line">        get &#123; return name; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    //可以读取ProductAttribute里的Price 属性</span><br><span class="line">    public float Price</span><br><span class="line">    &#123;</span><br><span class="line">        get &#123; return price; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    // 一个save方法 用于判断 不同的折扣方式 并返回一个减去的钱数</span><br><span class="line">    public float save(int n)</span><br><span class="line">    &#123;</span><br><span class="line">        float m = 0;  //m用于获取 打折后的 价格 符合的物品数量</span><br><span class="line">        switch (code1)</span><br><span class="line">        &#123;</span><br><span class="line">            case 0: //code1为0 的时候 </span><br><span class="line">                m = n;  //买多少斤 最终价格还是 按多少斤算</span><br><span class="line">                break;</span><br><span class="line">            case 1: //code1为1的时候 有2种情况 </span><br><span class="line">                if (code2 == 0)  //code2为0  买1斤 第2斤免费 即买一送一 </span><br><span class="line">                    m = (float)((n / 2) + (n % 2));  //买1斤 第2斤免费  但买3斤 还是1斤免费 </span><br><span class="line">                else if (code2 == 1) //code2为1  这里是买1斤 第2斤半价 即买2斤 1斤半的钱  买4斤 3斤的钱</span><br><span class="line">                    m = (float)(1.5 * (n / 2) + (n % 2));</span><br><span class="line">                break;</span><br><span class="line">            case 2:   //code1 为2的时候 也有2种方法</span><br><span class="line">                if (code2 == 0)  //code1为2 code2 为0 买2斤 第3斤免费</span><br><span class="line">                    m = (float)(n - (n / 3));</span><br><span class="line">                else if (code2 == 1) //code1为2  code2为1 即买2斤 第3斤半价</span><br><span class="line">                    m = (float)(n - 0.5 * (n / 3));</span><br><span class="line">                break;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        float save = (n - m) * price; //计算出一个最终的价格</span><br><span class="line">        return save;  //返回省去的钱数</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主窗体类代码 frmFruitShopping.cs</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line">public partial class frmFruitShopping : Form</span><br><span class="line">&#123;        </span><br><span class="line">    public frmFruitShopping()</span><br><span class="line">    &#123;</span><br><span class="line">        InitializeComponent();</span><br><span class="line"></span><br><span class="line">        this.Load += (s, e) =&gt; &#123; ReadFruitsData();  FruitClick(); &#125;;</span><br><span class="line">        btnTotal.Click += (s, e) =&gt; &#123; GetTotalCost(); &#125;;</span><br><span class="line">        btnEmpty.Click += (s, e) =&gt; &#123; EmptyShoppingBox(); &#125;;</span><br><span class="line">        btnDeleteOne.Click += (s, e) =&gt; &#123; DeleteOneShoppingItem(); &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    List&lt;ProductAttribute&gt; productList;</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 读取txt文本数据</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    private void ReadFruitsData()</span><br><span class="line">    &#123;</span><br><span class="line">        //创建一个水果属性的集合</span><br><span class="line">        productList = new List&lt;ProductAttribute&gt;();</span><br><span class="line">        string strRead; //创建一个字符串 用来接受读取的数据</span><br><span class="line">        // 创建FileStream文件流 可以用来读取任何文件 其内部读取格式是 最原始的字节</span><br><span class="line">        FileStream fs = File.OpenRead(&quot;fruits.txt&quot;);</span><br><span class="line">        //通过流读取来读取fs文件里的东西,并将 文字格式设置为默认的ANSI编码</span><br><span class="line">        using (StreamReader sr = new StreamReader(fs, Encoding.Default))</span><br><span class="line">        &#123;</span><br><span class="line">            //用while循环来 一行行读取  如果读到的内容不为空 则进入循环 否则不读</span><br><span class="line">            while ((strRead = sr.ReadLine()) != null)</span><br><span class="line">            &#123;</span><br><span class="line">                //这里用到了个字符串分割 每行都有几个参数 通过&#x27;-&#x27; 隔开 分割后存到一个数组里</span><br><span class="line">                string[] part = strRead.Split(&#x27;-&#x27;);</span><br><span class="line">                //new一个 构造方法来装载 这些参数</span><br><span class="line">                ProductAttribute pa = new ProductAttribute(part[0], (float)Convert.ToDouble(part[1]), Convert.ToInt32(part[2]), Convert.ToInt32(part[3]));</span><br><span class="line">                //将 装载的参数 存到水果属性的list集合中</span><br><span class="line">                productList.Add(pa);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //创建一个TotalCost集合 来装载 所有的开销</span><br><span class="line">    List&lt;float&gt; TotalCost = new List&lt;float&gt;();</span><br><span class="line">    //定义一个 可以容纳12个整数的整型数组 用于装载 每样产品的点击数</span><br><span class="line">    int[] intQuantity = new int[12];</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 记录并打印每项水果的花费</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=&quot;i&quot;&gt;物品的索引&lt;/param&gt;</span><br><span class="line">    public void printCost(int i)</span><br><span class="line">    &#123;</span><br><span class="line">        intQuantity[i]++;</span><br><span class="line">        lstMenu.Items.Add(&quot;您购买了\t&quot; + productList[i].Name + &quot;\t &quot; + productList[i].Price + &quot;元/斤&quot;);</span><br><span class="line">        TotalCost.Add(productList[i].Price);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 实现所有水果按钮单击事件下触发的打印花费的方法</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    private void FruitClick()</span><br><span class="line">    &#123;</span><br><span class="line">        //每个按钮下 都调用了一个 printCost();方法 </span><br><span class="line">        //传入的整型参数 是购物品在TotalCost集合里的位置 同时也是intQuantity的索引位置</span><br><span class="line">        btnApple.Click += (s, e) =&gt; &#123; printCost(0); &#125;;</span><br><span class="line">        btnOrange.Click += (s, e) =&gt; &#123; printCost(1); &#125;;</span><br><span class="line">        btnPear.Click += (s, e) =&gt; &#123; printCost(2); &#125;;</span><br><span class="line">        btnbanana.Click += (s, e) =&gt; &#123; printCost(3); &#125;;</span><br><span class="line">        btnHawthorn.Click += (s, e) =&gt; &#123; printCost(4); &#125;;</span><br><span class="line">        btnHoneyPeach.Click += (s, e) =&gt; &#123; printCost(5); &#125;;</span><br><span class="line">        btnCoconut.Click += (s, e) =&gt; &#123; printCost(6); &#125;;</span><br><span class="line">        btnFig.Click += (s, e) =&gt; &#123; printCost(7); &#125;;</span><br><span class="line">        btnGrape.Click += (s, e) =&gt; &#123; printCost(8); &#125;;</span><br><span class="line">        btnLitchi.Click += (s, e) =&gt; &#123; printCost(9); &#125;;</span><br><span class="line">        btnPlum.Click += (s, e) =&gt; &#123; printCost(10); &#125;;</span><br><span class="line">        btnPomelo.Click += (s, e) =&gt; &#123; printCost(11); &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 计算总共花费</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    private void GetTotalCost()</span><br><span class="line">    &#123;</span><br><span class="line">        //遍历 TotalCost里所有的值 全部加起来</span><br><span class="line">        float tCost = 0;</span><br><span class="line">        foreach (float cost in TotalCost)</span><br><span class="line">        &#123;</span><br><span class="line">            tCost += cost;</span><br><span class="line">        &#125;</span><br><span class="line">        lstMenu.Items.Add(&quot;------------------------&quot;);</span><br><span class="line">        lstMenu.Items.Add(&quot;优惠前总价为:\t\t &quot; + Math.Round(tCost, 1) + &quot;元&quot;); //打印出总价(打折前的价格)</span><br><span class="line">        //调用Saving()方法 计算 总共节省的钱数 </span><br><span class="line">        float totalSaving = Saving();</span><br><span class="line">        lstMenu.Items.Add(&quot;打折后最终您需要付款为\t &quot; + Math.Round((tCost - totalSaving), 1) + &quot;元&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    float tSaving = 0;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 计算优惠额</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;returns&gt;优惠额&lt;/returns&gt;</span><br><span class="line">    public float Saving()</span><br><span class="line">    &#123;</span><br><span class="line">        for (int i = 0; i &lt;= intQuantity.Length - 1; i++)</span><br><span class="line">        &#123;   //当物品 购买数 &gt;= 2的时候 才有优惠  </span><br><span class="line">            if (intQuantity[i] &gt;= 2)</span><br><span class="line">            &#123;   //这里 苹果和无花果 是不存在优惠的</span><br><span class="line">                if (productList[i].Name == &quot;苹果&quot; || productList[i].Name == &quot;无花果&quot;)</span><br><span class="line">                    lstMenu.Items.Add(&quot;您购买了&quot; + productList[i].Name + &quot; 一共&quot; + intQuantity[i] + &quot;斤&quot; + &quot; 最近&quot; + productList[i].Name + &quot;无优惠&quot;);</span><br><span class="line">                else //否则其他水果 都有优惠</span><br><span class="line">                &#123;</span><br><span class="line">                    lstMenu.Items.Add(&quot;您购买了&quot; + productList[i].Name + &quot; 一共&quot; + intQuantity[i] + &quot;斤&quot; + &quot; 优惠&quot; + Math.Round(productList[i].save(intQuantity[i]), 1) + &quot;元&quot;);</span><br><span class="line">                    tSaving += productList[i].save(intQuantity[i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            //当购买单项 水果 小于2斤的时候 是没有优惠享受的 </span><br><span class="line">            else if (1 &lt;= intQuantity[i] &amp;&amp; intQuantity[i] &lt; 2)</span><br><span class="line">            &#123; </span><br><span class="line">                lstMenu.Items.Add(&quot;您购买了&quot; + productList[i].Name + &quot; 只有&quot; + intQuantity[i] + &quot;斤&quot; + &quot; 没有优惠!&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        //最终 打印出 所有物品节约的 总价</span><br><span class="line">        lstMenu.Items.Add(&quot;--------------------------------------&quot;);</span><br><span class="line">        lstMenu.Items.Add(&quot;所有水果一共优惠了\t &quot; + tSaving + &quot;元&quot;);</span><br><span class="line"></span><br><span class="line">        return tSaving;//返回优惠额</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 清空购物车</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    private void EmptyShoppingBox()</span><br><span class="line">    &#123;</span><br><span class="line">        lstMenu.Items.Clear();  //清空listMenu控件里面的所有项(表面清除) </span><br><span class="line">        TotalCost.Clear();      //清空TotalCost里的所有项(从系统中移除)</span><br><span class="line">        tSaving = 0;  //把之前节省的钱 全部清空  </span><br><span class="line">        //清空的时候 要将打折省去的钱数 也清掉</span><br><span class="line">        //这里用的是 清空所有购买水果的数量 当水果数为0的时候 就没有打折省去的钱数了</span><br><span class="line">        for (int i = 0; i &lt; intQuantity.Length; i++)</span><br><span class="line">            intQuantity[i] = 0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 删除已购买的单项物品</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    private void DeleteOneShoppingItem()</span><br><span class="line">    &#123;</span><br><span class="line">        //从listbox 里移除 购买项 (表面移除, 实际值需要从装载值的TotalCost集合里移除)</span><br><span class="line">        lstMenu.Items.Remove(lstMenu.SelectedItem);</span><br><span class="line">        //SelectedIndex 是从0开始的索引 但实际你删除项的索引是大于0的整数</span><br><span class="line">        //从TotalCost里移除购买项</span><br><span class="line">        TotalCost.RemoveAt(lstMenu.SelectedIndex + 1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行效果 如下</p><p>1.结账</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011122011201345.jpg" alt="img"></p><p>2.清空购物车</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011122011284749.jpg" alt="img"></p><p>3.再点结账 看下 确实所有值 都被清空了 (清空购物车功能 没问题) </p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011122011290327.jpg" alt="img"></p><p>\4. 但是删除单项 这里出问题了 请看下面</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011122011395745.jpg" alt="img"></p><p>5 删除2项 山楂后 总价虽然正常减少了 而且原先买了3斤山楂 现在删除了2斤山楂 剩1斤</p><p>应该是没有优惠了 但这里还是保持原先 买3斤时候的优惠 </p><p>而且总优惠价格 也是不但没减少 还把之前的再次相加了一次 导致最终价格不正常 (可能还有一些问题没有发现)</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011122011403357.jpg" alt="img"></p><p>这里思路是有 就是 根据删除项在listbox里的索引 相对应的也是在用来装载所有购买物品价格的泛型list(TotalCost)的索引</p><p>但是 <strong>怎样判断这个索引是哪个物品</strong>呢 这里是关键.</p><p>由于这里涉及到的判断比较多 个人能力有限 还请 对该程序感兴趣的大牛们 帮忙解决下</p><p>谢了!  :)</p><p>这里附上源代码 <a href="http://files.cnblogs.com/longwu/%E6%B0%B4%E6%9E%9C%E5%BA%97%E7%BB%93%E8%B4%A6%E7%B3%BB%E7%BB%9F.zip">水果店结账系统</a> 点击下载</p><p>转自：<a herf="https://www.cnblogs.com/longwu/archive/2011/12/20/2294297.html">https://www.cnblogs.com/longwu/archive/2011/12/20/2294297.html<a></p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> winfrom </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#简易电影记录管理系统:完结篇[权限分配]</title>
      <link href="/RookieRoom/2020/05/07/cjian-yi-dian-ying-ji-lu-guan-li-xi-tong-wan-jie-pian-quan-xian-fen-pei/"/>
      <url>/RookieRoom/2020/05/07/cjian-yi-dian-ying-ji-lu-guan-li-xi-tong-wan-jie-pian-quan-xian-fen-pei/</url>
      
        <content type="html"><![CDATA[<p><strong>本期概述</strong></p><p>上一期,我们实现了简单的数据恢复(通过先前备份的Excel数据文件导入Sql Server来恢复数据);这期我们来一起学习下针对普通用户的权限分配功能(看看管理员是如何给普通用户进行权限分配的).</p> <span id="more"></span><p><strong>原理</strong></p><p>在登录窗体类中创建一个全局变量FRight, 用来获取用户成功登录后的功能权限值, 权限值等于1为功能可用,0或者其它为不可用;当普通用户成功登录后,在主窗体FrmMain里获取这个全局变量,同时将相应的功能按钮的Enable属性设置为true或者false(这里管理员默认是拥有所有功能权限,系统只判断普通用户的功能权限);这里创建了一个FrmUserManager普通用户管理窗体(仅限于管理员使用),用于管理员创建普通用户以及修改普通用户账户信息和分配权限等(管理员本身信息只能被查看,不能被做任何修改).关于权限分配的实现,这里使用了CheckBox控件,通过判断CheckBox的Checked属性是否被点中来给普通用户赋予相应的功能权限,被点中则赋值1,否则默认为0,然后通过执行sql数据操作将权限值存入数据库.</p><p><strong>数据库设计</strong></p><p>这里由于增加了普通用户权限值,我们需要对数据库结构稍作修改.这里在MovieAccount表中增加4列内容 分别用于</p><p>RightFManager    判断普通用户管理界面权限     RightFRegistration  判断普通用户注册权限  </p><p>RightFPwdChange  判断普通用户密码修改权限     RightFLog       判断普通用户日志查询权限</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030710324344.png" alt="img"></p><p><strong>代码实施</strong></p><p>首先我们需要在登录窗体类FrmLogin.cs里增加一个全局变量FRight, 用于获取登录成功的普通用户功能权限值.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//定义一个全局变量 数组FRight 来获取登录成功的普通用户功能权限</span><br><span class="line">public static int[] FRight;</span><br></pre></td></tr></table></figure><p>由于在数据库里新增了几列字段, 我们之前的查询语句也需要稍作修改, 这里需要新增几条字段 如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//这里新增了 RightFManager,RightFRegistration,RightFPwdChange,RightFLog 几条字段 用于获取普通用户登录后的功能权限值 </span><br><span class="line">string sql = &quot;select MUserPwd,UserType,RightFManager,RightFRegistration,RightFPwdChange,RightFLog from MovieAccount where MUserName =&#x27;&quot; + txtName.Text + &quot;&#x27;&quot;;</span><br><span class="line">//---------------------新增代码----------------------//</span><br></pre></td></tr></table></figure><p>然后在判断登录成功的地方,添加获取功能权限值的代码,将获取普通用户的功能权限值传给全局变量(这里只获取普通用户的功能权限值).</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">/************用户登录成功后 对用户类型进行判断********************/</span><br><span class="line"></span><br><span class="line">//用户功能权限索引i  对应的数据读取器sdr里的索引是 是 i+2</span><br><span class="line">//FRight[0] = sdr.GetInt32(2);   //RightFManager</span><br><span class="line">//FRight[1] = sdr.GetInt32(3);   //RightFRegistration</span><br><span class="line">//FRight[2] = sdr.GetInt32(4);   //RightFPwdChange</span><br><span class="line">//FRight[3] = sdr.GetInt32(5);   //RightFLog</span><br><span class="line"></span><br><span class="line">//如果用户为普通用户 则检查 其功能权限 管理员不被检查    </span><br><span class="line">if (UserType == &quot;NormalUser&quot;)</span><br><span class="line">&#123;</span><br><span class="line">    FRight = new int[4];</span><br><span class="line">    for (int i = 0; i &lt; FRight.Length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        if (sdr.GetInt32(i + 2) == 0)      //如果数据读取器中读到数据库中的权限值为0</span><br><span class="line">        &#123;</span><br><span class="line">            FRight[i] = 0;                 //则赋给全局变量0  说明该功能被禁用   </span><br><span class="line">        &#125;</span><br><span class="line">        else if (sdr.GetInt32(i + 2) == 1) //如果 为1 </span><br><span class="line">        &#123;</span><br><span class="line">            FRight[i] = 1;                 //赋给全局变量1   该功能可用</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            FRight[i] = 0;                 //否则默认为0  该功能不可用</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">/*****************************************************************/</span><br></pre></td></tr></table></figure><p>这样,当普通用户登录成功后, 系统会自动将用户的权限值赋给全局变量 FRight;然后我们需要在主窗体类FrmMain.cs中获取该全局变量并做出相应的功能赋予与禁用,为此我们在FrmMain类的构造函数中加入如下代码. </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">public FrmMain()</span><br><span class="line">&#123;</span><br><span class="line">    InitializeComponent();</span><br><span class="line">    /************************  新增代码 ***********************************/</span><br><span class="line">    //窗体加载的时候 自动获取 并判断普通用户的功能权限</span><br><span class="line"></span><br><span class="line">    //当用户为普通用户的时候 需要判断下其功能权限  管理员不接受检查</span><br><span class="line">    if (FrmLogin.UserType == &quot;NormalUser&quot;)  </span><br><span class="line">    &#123;</span><br><span class="line">        if (FrmLogin.FRight[0] == 1)              //对应的功能权限为1的时候 本功能开放    </span><br><span class="line">            tsbManager.Enabled = true;</span><br><span class="line">        else</span><br><span class="line">            tsbManager.Enabled = false;           //否则 禁用本功能</span><br><span class="line">        if (FrmLogin.FRight[1] == 1)</span><br><span class="line">            tsbRegistration.Enabled = true;</span><br><span class="line">        else</span><br><span class="line">            tsbRegistration.Enabled = false;</span><br><span class="line">        if (FrmLogin.FRight[2] == 1)</span><br><span class="line">            tsbPwdChange.Enabled = true;</span><br><span class="line">        else</span><br><span class="line">            tsbPwdChange.Enabled = false;</span><br><span class="line">        if (FrmLogin.FRight[3] == 1)</span><br><span class="line">            tsbLog.Enabled = true;</span><br><span class="line">        else</span><br><span class="line">            tsbLog.Enabled = false;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    /************************  新增代码 ***********************************/</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样,当我们普通用户登录以后,系统就能自动根据其数据库中的权限值,来进行判断并赋予相应的功能权限了.</p><p>我们来简单测试下</p><p>这里使用普通用户User44 来登陆系统,从数据库中我们可以看到其 RightFManager管理界面权限 和 RightFRegistration用户注册权限值 都为1(1为功能可用),密码修改和日志查看功能为0(0为功能不可用).</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030722303777.png" alt="img"></p><p>使用普通用户user44 登录系统 </p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030722361271.png" alt="img"></p><p>登录成功后,系统跳转到主界面FrmMain, 我们发现 管理界面和用户注册功能为可用, 密码修改和日志查询为不可用. </p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030722415152.png" alt="img"></p><p>用户权限功能判断成功之后,我们便要开始写管理员给普通用户分配权限的功能,我们新建一个普通用户管理窗体FrmUserManager(该功能仅限于管理员使用).</p><p><strong>控件名称以及界面设计如下</strong></p><p>DataGridView name: dgvUserManger</p><p>快速搜索 name: txtUserQuery  用户名 name: txtUserName  密码 name: txtPwd  用户类型 name: cboUserType</p><p>管理界面 name: chkManager  用户注册 name: chkManager  密码修改 name: chkRegistration  日志查询 name: chkPwdChange</p><p>查看所有 name: btnUserCheck  添加用户 name: btnUserAdd  保存修改 name: btnUserChange  删除用户 name: btnUserDelete</p><p>返回主界面 name: btnBack  退出系统 name: btnExit</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030802075838.png" alt="img"></p><p>在实施代码之前,由于这里用到,我们需要简单了解一下SQLHelper数据库操作类. SQLHelper是微软提供的.NET Framework的数据库操作组件;用于帮助程序简化掉那些重复的数据库操作语句,包括SqlConnection,SqlCommand,SqlDataReader等等。SQLHelper封装过后通常是只需要给数据库操作方法传入一些参数如数据库连接字符串，Sql查询语句,Sql参数等,便可以访问数据库了,十分方便. [<a href="http://www.feiyan.info/416.html">详情可以看这里]</a> </p><p>好了,这里给出我的SqlHelper类,里面包含了我们数据库操作需要的2个方法.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// SqlHelper 数据库帮助类</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">class SqlHelper</span><br><span class="line">&#123;</span><br><span class="line">    static string connStr = ConfigurationManager.ConnectionStrings[&quot;str&quot;].ConnectionString;</span><br><span class="line"></span><br><span class="line">    static SqlConnection conn = new SqlConnection(connStr);</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// ExcuteNonQuery 用于执行增删改方法</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=&quot;strSql&quot;&gt;增删改Sql语句&lt;/param&gt;</span><br><span class="line">    /// &lt;param name=&quot;paras&quot;&gt;Sql参数数组&lt;/param&gt;</span><br><span class="line">    /// &lt;returns&gt;返回一个整数值,用于判断是否操作成功&lt;/returns&gt;</span><br><span class="line">    public static int ExcuteNonQuery(string strSql, params SqlParameter[] paras)</span><br><span class="line">    &#123;</span><br><span class="line">        SqlCommand cmd = new SqlCommand(strSql, conn); //执行sql指令 外面调用需传入2个参数 Sql查询语句和 Sql连接</span><br><span class="line">        cmd.Parameters.AddRange(paras);                //添加 查询语句执行的参数数组</span><br><span class="line">        conn.Open();                                   //执行前 需打开数据库连接</span><br><span class="line">        int n = cmd.ExecuteNonQuery();                 //执行 cmd指令操作 返回成功操作的行数</span><br><span class="line">        conn.Close();                                  //用完关闭数据库 节约资源</span><br><span class="line">        return n;                                      //返回成功操作的行数</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// ExecuteDataTable 用于执行 查 方法</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=&quot;strSql&quot;&gt;Sql Select语句&lt;/param&gt;</span><br><span class="line">    /// &lt;returns&gt;返回 查询结果表&lt;/returns&gt;</span><br><span class="line">    public static DataTable ExecuteDataTable(string strSql)</span><br><span class="line">    &#123;</span><br><span class="line">        SqlCommand cmd = new SqlCommand(strSql, conn); //执行sql指令 外面调用需传入2个参数 Sql查询语句和 Sql连接</span><br><span class="line">        SqlDataAdapter da = new SqlDataAdapter(cmd);   //使用SqlDataAdapter数据适配器来加载cmd操作指令</span><br><span class="line">        DataTable dt = new DataTable();                //创建 DataTable </span><br><span class="line">        da.Fill(dt);                                   //将SqlDataAdapter 获取的结果集 填充到 DataTable中</span><br><span class="line">        return dt;                                     //返回 DataTable</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后,我们开始实施FrmUserManager.cs的代码, 这里使用了几个私有变量 例如rightFManager,rightFRegistration等,用于获取CheckBox被点中后的值,然后通过数据库操作将其存入数据库(这里系统默认管理员账户信息是不能被修改的).我们使用了一个私有变量strUType 用于获取用户类型,当类型为”Administrator”,则将所用操作控件(用户名,密码和权限设置的CheckBox等)的Enable属性设置为false. 详细请看代码注释</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.ComponentModel;</span><br><span class="line">using System.Data;</span><br><span class="line">using System.Drawing;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Windows.Forms;</span><br><span class="line">using System.Configuration;</span><br><span class="line">using System.Data.SqlClient;</span><br><span class="line"></span><br><span class="line">/*******************************************************</span><br><span class="line"> </span><br><span class="line"> ** 作者: SoFlash - 博客园  http://www.cnblogs.com/longwu</span><br><span class="line"> </span><br><span class="line"> ** 描述: FrmUserManager.cs  用户管理窗体 用于管理员对 普通用户密码修改</span><br><span class="line"></span><br><span class="line"> ******************************************************/</span><br><span class="line"></span><br><span class="line">namespace 电影记录管理系统</span><br><span class="line">&#123;</span><br><span class="line">    public partial class FrmUserManager : Form</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        //定义私有变量-功能权限值 用于获取 radiobutton 被check后的返回值</span><br><span class="line">        private int rightFManager = 0;</span><br><span class="line">        private int rightFRegistration = 0;</span><br><span class="line">        private int rightFPwdChange = 0;</span><br><span class="line">        private int rightFLog = 0;</span><br><span class="line"></span><br><span class="line">        //strType 用于获取 当前DataGridView 被点中行的用户类型</span><br><span class="line">        private string strUType = &quot;&quot;;</span><br><span class="line"></span><br><span class="line">        public FrmUserManager()</span><br><span class="line">        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void CheckAllUsers()</span><br><span class="line">        &#123;</span><br><span class="line">            //查看当前所有用户</span><br><span class="line">            string sql = &quot;select * from MovieAccount&quot;;</span><br><span class="line">            dgvUserManger.DataSource = SqlHelper.ExecuteDataTable(sql);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void dgvUserManger_CellContentClick(object sender, DataGridViewCellEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            //点中DataGridView后,将当前行内容传递给文本框 便于在文本框中修改</span><br><span class="line">            txtUserName.Text = dgvUserManger.Rows[e.RowIndex].Cells[&quot;MUserName&quot;].Value.ToString();</span><br><span class="line">            txtPwd.Text = dgvUserManger.Rows[e.RowIndex].Cells[&quot;MUserPwd&quot;].Value.ToString();</span><br><span class="line">            cboUserType.Text = dgvUserManger.Rows[e.RowIndex].Cells[&quot;UserType&quot;].Value.ToString();</span><br><span class="line"></span><br><span class="line">            //获取用户类型</span><br><span class="line">            strUType = cboUserType.Text.Trim();</span><br><span class="line"></span><br><span class="line">            /************************************************************************************/</span><br><span class="line">            //每次点击 DataGridView新的行之前 都要把前一次点击行的 CheckBox 状态调整为系统默认状态 全未选中 并且都可选</span><br><span class="line">            //比如 如果之前 点了NormalUser 再点Administer 会保留之前NormalUser的选择项 这里我们需要清空</span><br><span class="line">            chkManager.Checked = false;</span><br><span class="line">            chkRegistration.Checked = false;</span><br><span class="line">            chkManager.Checked = false;</span><br><span class="line">            chkLog.Checked = false;</span><br><span class="line"></span><br><span class="line">            txtUserName.Enabled = true;</span><br><span class="line">            txtPwd.Enabled = true;</span><br><span class="line">            cboUserType.Enabled = true;</span><br><span class="line">            chkManager.Enabled = true;</span><br><span class="line">            chkPwdChange.Enabled = true;</span><br><span class="line">            chkRegistration.Enabled = true;</span><br><span class="line">            chkLog.Enabled = true;</span><br><span class="line"></span><br><span class="line">            /************************************************************************************/</span><br><span class="line">            if (strUType == &quot;NormalUser&quot;)</span><br><span class="line">            &#123;</span><br><span class="line">                //如果先前点击了 DataGridView里的 管理员行内容 checkbox 会保留之前的点击状态 我们需要先前的点击状态清除</span><br><span class="line">                chkManager.Checked = true;</span><br><span class="line">                chkRegistration.Checked = true;</span><br><span class="line">                chkManager.Checked = true;</span><br><span class="line">                chkLog.Checked = true;</span><br><span class="line"></span><br><span class="line">                //获取当前DataGridView被点中行内容中的用户权限值</span><br><span class="line">                rightFManager = Convert.ToInt32(dgvUserManger.Rows[e.RowIndex].Cells[&quot;RightFManager&quot;].Value);</span><br><span class="line">                rightFRegistration = Convert.ToInt32(dgvUserManger.Rows[e.RowIndex].Cells[&quot;RightFRegistration&quot;].Value);</span><br><span class="line">                rightFPwdChange = Convert.ToInt32(dgvUserManger.Rows[e.RowIndex].Cells[&quot;RightFPwdChange&quot;].Value);</span><br><span class="line">                rightFLog = Convert.ToInt32(dgvUserManger.Rows[e.RowIndex].Cells[&quot;RightFLog&quot;].Value);</span><br><span class="line"></span><br><span class="line">                //同时判断获取的权限值  并相应的选中Checkbox</span><br><span class="line">                if (rightFManager == 1)</span><br><span class="line">                    chkManager.Checked = true;</span><br><span class="line">                else</span><br><span class="line">                    chkManager.Checked = false;</span><br><span class="line">                if (rightFRegistration == 1)</span><br><span class="line">                    chkRegistration.Checked = true;</span><br><span class="line">                else</span><br><span class="line">                    chkRegistration.Checked = false;</span><br><span class="line">                if (rightFPwdChange == 1)</span><br><span class="line">                    chkPwdChange.Checked = true;</span><br><span class="line">                else</span><br><span class="line">                    chkPwdChange.Checked = false;</span><br><span class="line">                if (rightFLog == 1)</span><br><span class="line">                    chkLog.Checked = true;</span><br><span class="line">                else</span><br><span class="line">                    chkLog.Checked = false;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            //当用户类型为管理员的时候,将所有的CheckBox禁用, 管理员功能权限不允许设置</span><br><span class="line">            else if (strUType == &quot;Administrator&quot;)</span><br><span class="line">            &#123;</span><br><span class="line">                chkManager.Enabled = false;</span><br><span class="line">                chkPwdChange.Enabled = false;</span><br><span class="line">                chkRegistration.Enabled = false;</span><br><span class="line">                chkLog.Enabled = false;</span><br><span class="line"></span><br><span class="line">                txtUserName.Enabled = false;</span><br><span class="line">                txtPwd.Enabled = false;</span><br><span class="line">                cboUserType.Enabled = false;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        //查询用户信息</span><br><span class="line">        private void txtUserQuery_TextChanged(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            string sql = &quot;&quot;;</span><br><span class="line"></span><br><span class="line">            if (txtUserQuery.Text.Trim() == &quot;&quot;)</span><br><span class="line">            &#123;</span><br><span class="line">                //执行查询语句</span><br><span class="line">                sql = &quot;select * from MovieAccount&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                //全局搜索 (通过用户ID  用户名和 用户类型进行模糊查找)</span><br><span class="line">                sql = &quot;select * from MovieAccount where(MId like&#x27;%&quot; + txtUserQuery.Text.Trim() + &quot;%&#x27;)or(MUserName like&#x27;%&quot; + txtUserQuery.Text.Trim() + &quot;%&#x27;)or(UserType like&#x27;%&quot; + txtUserQuery.Text.Trim() + &quot;%&#x27;)&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">            //调用SqlHelper类里的查方法</span><br><span class="line">            dgvUserManger.DataSource = SqlHelper.ExecuteDataTable(sql);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        //调用查看所有用户的方法来刷新当前 DataGridView的内容</span><br><span class="line">        private void btnUserCheck_Click(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            //点击 &quot;查看所有&quot; 按钮  调用 CheckAllUsers() 方法 刷新 并查当前看所有用户</span><br><span class="line">            CheckAllUsers();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //添加用户</span><br><span class="line">        private void btnUserAdd_Click(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            //使用SQL插入数据语句</span><br><span class="line">            string sql = &quot;insert into MovieAccount(MUserName,MUserPwd,UserType,RightFManager,RightFRegistration,RightFPwdChange,RightFLog) values (@MUserName,@MUserPwd,@UserType,@RightFManager,@RightFRegistration,@RightFPwdChange,@RightFLog)&quot;;</span><br><span class="line"></span><br><span class="line">            //判断插入的数据是否为空,如果为空,则提示重新插入!</span><br><span class="line">            if (txtUserName.Text.Trim() == &quot;&quot; || txtPwd.Text.Trim() == &quot;&quot; || cboUserType.Text == &quot;&quot;)</span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(&quot;插入数据不能为空,请按要求插入数据!&quot;);</span><br><span class="line">                return;</span><br><span class="line">            &#125;</span><br><span class="line">            if (cboUserType.Text == &quot;Administrator&quot;)</span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(&quot;暂不开放注册管理员功能!&quot;);</span><br><span class="line">                return;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            //判断 哪些CheckBox 被选中</span><br><span class="line">            AdjustChecked();</span><br><span class="line"></span><br><span class="line">            //向数据库插入参数</span><br><span class="line">            SqlParameter[] param =&#123;</span><br><span class="line">                                      new SqlParameter(&quot;@MUserName&quot;,txtUserName.Text.Trim()),</span><br><span class="line">                                      new SqlParameter(&quot;@MUserPwd&quot;,txtPwd.Text.Trim()),</span><br><span class="line">                                      new SqlParameter(&quot;@UserType&quot;,cboUserType.Text.Trim()),</span><br><span class="line">                                      new SqlParameter(&quot;@RightFManager&quot;,rightFManager),</span><br><span class="line">                                      new SqlParameter(&quot;@RightFRegistration&quot;,rightFRegistration),</span><br><span class="line">                                      new SqlParameter(&quot;@RightFPwdChange&quot;,rightFPwdChange),</span><br><span class="line">                                      new SqlParameter(&quot;@RightFLog&quot;,rightFLog)</span><br><span class="line"></span><br><span class="line">                                  &#125;;</span><br><span class="line">            //调用 SqlHelper 增 方法</span><br><span class="line">            int n = SqlHelper.ExcuteNonQuery(sql, param);</span><br><span class="line"></span><br><span class="line">            if (n &gt; 0)</span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(&quot;数据插入成功!&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(&quot;插入失败!&quot;);</span><br><span class="line">                return;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            //调用CheckAllUsers() 方法 用于刷新 在添加完成数据后 自动刷新数据</span><br><span class="line">            CheckAllUsers();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //保存修改的信息</span><br><span class="line">        private void btnUserChange_Click(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            //在对数据进行修改之前 对文本框的内容做一下检查 是否用户已经输入内容, 如果为空 则提示重新输入</span><br><span class="line">            if (txtUserName.Text.Trim() == &quot;&quot; || txtPwd.Text.Trim() == &quot;&quot; || cboUserType.Text.Trim() == &quot;&quot;)</span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(&quot;文本框的输入不能为空!&quot;);</span><br><span class="line">                return;</span><br><span class="line">            &#125;</span><br><span class="line">            if (cboUserType.Text == &quot;Administrator&quot;)</span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(&quot;暂不开放注册管理员功能!&quot;);</span><br><span class="line">                return;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            //判断 哪些CheckBox 被选中</span><br><span class="line">            AdjustChecked();</span><br><span class="line"></span><br><span class="line">            //使用SQL update 更新语句</span><br><span class="line">            //获取文本框 和ComboBox 输入的内容, 通过用户的ID(MId) 进行更新(ID为当前鼠标点击行的MId)</span><br><span class="line">            string sqlUpdate = &quot;update MovieAccount set MUserName = @MUserName, MUserPwd = @MUserPwd,UserType=@UserType,RightFManager=@RightFManager,RightFRegistration=@RightFRegistration,RightFPwdChange=@RightFPwdChange,RightFLog=@RightFLog where MId=@MId&quot;;</span><br><span class="line"></span><br><span class="line">            SqlParameter[] param =&#123;</span><br><span class="line">                                      new SqlParameter(&quot;@MUserName&quot;,txtUserName.Text.Trim()),</span><br><span class="line">                                      new SqlParameter(&quot;@MUserPwd&quot;,txtPwd.Text.Trim()),</span><br><span class="line">                                      new SqlParameter(&quot;@UserType&quot;,cboUserType.Text.Trim()),</span><br><span class="line">                                      new SqlParameter(&quot;@RightFManager&quot;,rightFManager),</span><br><span class="line">                                      new SqlParameter(&quot;@RightFRegistration&quot;,rightFRegistration),</span><br><span class="line">                                      new SqlParameter(&quot;@RightFPwdChange&quot;,rightFPwdChange),</span><br><span class="line">                                      new SqlParameter(&quot;@RightFLog&quot;,rightFLog),</span><br><span class="line">                                      new SqlParameter(&quot;@MId&quot;,dgvUserManger.CurrentRow.Cells[0].Value),</span><br><span class="line">                                  &#125;;</span><br><span class="line"></span><br><span class="line">            //调用 SqlHelper 更新方法</span><br><span class="line">            int n = SqlHelper.ExcuteNonQuery(sqlUpdate, param);</span><br><span class="line"></span><br><span class="line">            //判定 如果n=0,则说明没有获取到数据,ExecuteNonQuery执行不成功</span><br><span class="line">            if (n == 0)</span><br><span class="line">            &#123;</span><br><span class="line">                //提示更新失败</span><br><span class="line">                MessageBox.Show(&quot;更新失败!&quot;);</span><br><span class="line">                return;// 并且返回</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                //否则更新成功</span><br><span class="line">                MessageBox.Show(&quot;恭喜你!更新成功!&quot;);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            //保存完以后  调用刷新方法,将更新后的数据 显示在datagridview上面</span><br><span class="line">            CheckAllUsers();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //删除DataGridView里 选中的用户</span><br><span class="line">        private void btnUserDelete_Click(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            //使用sql删除语句</span><br><span class="line">            string sqlDelete = null;</span><br><span class="line">            //如果datagridview的当前行被选中</span><br><span class="line">            if (dgvUserManger.CurrentRow.Selected)</span><br><span class="line">            &#123;</span><br><span class="line">                //获取当前点中行的MID 并且 将当前行的MID号 赋给SQL 语句 </span><br><span class="line">                sqlDelete = &quot;delete from MovieAccount where MId=@MId&quot;;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            SqlParameter[] param = &#123;</span><br><span class="line">                                    new SqlParameter(&quot;@MId&quot;,Convert.ToInt32(dgvUserManger.CurrentRow.Cells[0].Value))      </span><br><span class="line">                                   &#125;;</span><br><span class="line">            //调用 SqlHelper 删除的方法</span><br><span class="line">            int n = SqlHelper.ExcuteNonQuery(sqlDelete, param);</span><br><span class="line"></span><br><span class="line">            //如果n&gt;0  说明删除数据成功</span><br><span class="line">            if (n &gt; 0)</span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(&quot;删除成功!&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            else //否则失败</span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(&quot;不存在的ID!&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            //删除完后 刷新一下当前数据</span><br><span class="line">            CheckAllUsers();</span><br><span class="line">        &#125;</span><br><span class="line">        //导入当前用户管理窗体的时候 自动查看所有用户信息 以及给Combobox赋予2个选项 管理员和 普通用户</span><br><span class="line">        private void FrmUserManager_Load(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            CheckAllUsers();</span><br><span class="line">            cboUserType.Items.Add(&quot;Administrator&quot;);</span><br><span class="line">            cboUserType.Items.Add(&quot;NormalUser&quot;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //判断CheckBox是否被点重或是取消, 用于更新和修改用户权限</span><br><span class="line">        private void AdjustChecked()</span><br><span class="line">        &#123;</span><br><span class="line">            //当相应的功能权限 checkbox 被点中 或者取消  将分别赋值 并传给相应的私有变量 用于数据库添加,更新等操作</span><br><span class="line">            if (chkManager.Checked == true)</span><br><span class="line">                rightFManager = 1;</span><br><span class="line">            else</span><br><span class="line">                rightFManager = 0;</span><br><span class="line">            if (chkRegistration.Checked == true)</span><br><span class="line">                rightFRegistration = 1;</span><br><span class="line">            else</span><br><span class="line">                rightFRegistration = 0;</span><br><span class="line">            if (chkPwdChange.Checked == true)</span><br><span class="line">                rightFPwdChange = 1;</span><br><span class="line">            else</span><br><span class="line">                rightFPwdChange = 0;</span><br><span class="line">            if (chkLog.Checked == true)</span><br><span class="line">                rightFLog = 1;</span><br><span class="line">            else</span><br><span class="line">                rightFLog = 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //返回主窗体</span><br><span class="line">        private void btnBack_Click(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            FrmMain main = new FrmMain();</span><br><span class="line">            main.Show();</span><br><span class="line">            this.Hide();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //直接退出系统</span><br><span class="line">        private void btnExit_Click(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            Application.Exit();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后,由于在数据库中新增了几列普通用户功能权限的字段,我们的用户注册窗体也需要稍作修改(这里普通用户注册是默认禁用其所有功能权限,需要管理员在普通用户管理窗体赋予其相应的功能权限).</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">//----------------------新增代码-------------------------//</span><br><span class="line">//new一个 uType 来获取 radiobutton 点击事件下 触发的用户类型赋值</span><br><span class="line">string uType = &quot;&quot;;</span><br><span class="line"></span><br><span class="line">int rightFManager = 0;</span><br><span class="line">int rightFRegistration = 0;</span><br><span class="line">int rightFPwdChange = 0;</span><br><span class="line">int rightFLog = 0;</span><br><span class="line"></span><br><span class="line">if (rdoAdministrator.Checked)  //当管理员的radiobutton被点击后</span><br><span class="line">&#123;</span><br><span class="line">    uType = &quot;Administrator&quot;;   //传给 uType 一个管理员</span><br><span class="line">    rightFManager = 1;</span><br><span class="line">    rightFRegistration = 1;</span><br><span class="line">    rightFPwdChange = 1;</span><br><span class="line">    rightFLog = 1;</span><br><span class="line">&#125;</span><br><span class="line">else if (rdoNormalUser.Checked)  //同理</span><br><span class="line">&#123;</span><br><span class="line">    uType = &quot;NormalUser&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else                             //若不点击 则默认为普通用户注册 </span><br><span class="line">    uType = &quot;NormalUser&quot;;</span><br><span class="line">//sql 插入语句  我们新增了 一列 UserType</span><br><span class="line">string sqlInsert = &quot;insert into MovieAccount(MUserName,MUserPwd,UserType,RightFManager,RightFRegistration,RightFPwdChange,RightFLog) values (@MUserName,@MUserPwd,@UserType,@RightFManager,@RightFRegistration,@RightFPwdChange,@RightFLog)&quot;;</span><br><span class="line">//使用1个SQL参数数组 来装载 需要插入的数据</span><br><span class="line">SqlParameter[] param = &#123;</span><br><span class="line">                       new SqlParameter(&quot;@MUserName&quot;,txtUid.Text),</span><br><span class="line">                       new SqlParameter(&quot;@MUserPwd&quot;,txtPwd.Text),  </span><br><span class="line">                       new SqlParameter(&quot;@UserType&quot;,uType),   </span><br><span class="line">                        new SqlParameter(&quot;@RightFManager&quot;,rightFManager),</span><br><span class="line">                      new SqlParameter(&quot;@RightFRegistration&quot;,rightFRegistration),</span><br><span class="line">                      new SqlParameter(&quot;@RightFPwdChange&quot;,rightFPwdChange),</span><br><span class="line">                      new SqlParameter(&quot;@RightFLog&quot;,rightFLog)</span><br><span class="line">                       &#125;;</span><br><span class="line">//----------------------新增代码-------------------------//</span><br></pre></td></tr></table></figure><p><strong>好了代码写完了 我们来运行测试下.</strong></p><p>我们使用 管理员帐号admin1 登录,注册一个普通用户,帐号为user01.</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030723344948.png" alt="img"></p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030723380162.png" alt="img"></p><p>注册成功后,我们来到普通用户管理界面FrmUserManager, 查看普通用户user01的账户信息,其所有功能权限值为0 即所有功能不可用.</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030723423867.png" alt="img"></p><p>我们使用 普通用户user01登录检测下,发现所有功能不可用.</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030723440571.png" alt="img"></p><p>我们再次使用 管理员admin1登录系统,来到普通用户管理窗体给user01 赋予2个功能权限 管理界面 和 密码修改.</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030723480577.png" alt="img"></p><p>赋予功能权限后,普通用户user01 的管理界面功能 和 密码修改的功能的权限值 都被改成了1,为可用.</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030723493981.png" alt="img"></p><p>我们再次使用被赋予新功能权限的普通用户user01登录系统,发现功能权限被成功赋给了. :)</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030723495050.png" alt="img"></p><p>这样,我们的用户权限分配就做完了,同样到这里整个电影记录管理系统教程也告于段落了,感谢学友和那些支持我的网友们,是你们给了我一直写下去的动力. :)</p><p><strong>附上源代码</strong></p><p><a href="http://files.cnblogs.com/longwu/MovieRecordManagementSystem10.zip">MovieRecordManagementSystem10.zip</a></p><p>转自：<a href="https://www.cnblogs.com/longwu/archive/2012/03/07/2383089.html">https://www.cnblogs.com/longwu/archive/2012/03/07/2383089.html<a></p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> winfrom </tag>
            
            <tag> vs2008 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#简易电影记录管理系统:开发九[数据恢复]</title>
      <link href="/RookieRoom/2020/05/07/cjian-yi-dian-ying-ji-lu-guan-li-xi-tong-kai-fa-jiu-shu-ju-hui-fu/"/>
      <url>/RookieRoom/2020/05/07/cjian-yi-dian-ying-ji-lu-guan-li-xi-tong-kai-fa-jiu-shu-ju-hui-fu/</url>
      
        <content type="html"><![CDATA[<p><strong>本期概述</strong></p><p>上一期我们学习并实现了该系统的数据备份功能。这一期我们来一起实现下该系统的数据恢复功能.数据恢复是指当数据因外界条件影响而丢失后,我们需要使用先前的备份来恢复数据,从而避免照成不必要的损失.</p> <span id="more"></span><p><strong>原理</strong></p><p>这里我们的数据恢复主要分两步: ①读取Excel数据: 打开Excel文件后,调用System.Data.OleDb数据访问接口,读取Excel文件数据,然后将数据临时性存储到DataSet数据集中. ②将读取到的数据存入SQLServer: 遍历 DataSet 数据集Record表中的所有行数据, 执行Sql数据库操作将Record表中的数据插入到Sql Server中;最后调用Sql Server查看数据的方法将导入的数据刷新并显示在DataGridView上.</p><p><strong>界面设计</strong></p><p>我们在管理界面 <a href="http://www.cnblogs.com/longwu/archive/2011/09/24/2188331.html">FrmManager</a> 增加一个 导入Excel 按钮  Name:btnImportExcel  如下图</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030510373372.png" alt="img"></p><p> 写代码前,我们需要在<a href="http://www.cnblogs.com/longwu/archive/2011/09/24/2188331.html">FrmManager.cs</a> 类里新增一个命名空间 System.Data.OleDb,用于连接和操作 Excel数据文件.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">using System.Data.OleDb;</span><br></pre></td></tr></table></figure><p>然后实施代码,代码主要分2部分  ①读取Excel里的数据  ②将读取到的数据导入数据到Sql Server</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">public void ImportExcel(String filePath, DataGridView dgv)</span><br><span class="line">&#123;</span><br><span class="line">    /******************************* ①打开Excel文件 并读取里面的数据 ***************************************/</span><br><span class="line"></span><br><span class="line">    //根据路径打开一个Excel文件并将数据填充到DataSet中 以便 Sql Server 执行数据插入语句时 调用</span><br><span class="line"></span><br><span class="line">    //03版本 Excel 连接字符串       如果用03版本 连接字符串 打开07版本的Excel 会提示报错 &quot;外部表不是预期的格式&quot;</span><br><span class="line">    //string connExcel = &quot;Provider=Microsoft.Jet.OLEDB.4.0;Data Source = &quot; + filePath + &quot;;Extended Properties =&#x27;Excel 8.0;&#x27;&quot;;</span><br><span class="line"></span><br><span class="line">    //07版本 Excel 连接字符串  这里使用07版本的 兼容03版本</span><br><span class="line">    string connExcel = &quot;Provider=Microsoft.ACE.OLEDB.12.0;Data Source = &quot; + filePath + &quot;;Extended Properties =&#x27;Excel 8.0;&#x27;&quot;;</span><br><span class="line">    OleDbConnection OleDbConn;</span><br><span class="line"></span><br><span class="line">    try</span><br><span class="line">    &#123;</span><br><span class="line">        //创建OleDbConn连接 </span><br><span class="line">        OleDbConn = new OleDbConnection(connExcel);</span><br><span class="line">        OleDbConn.Open();</span><br><span class="line">        //创建 Excel 数据表</span><br><span class="line">        //Microsoft.Office.Interop.Excel.DataTable dtExcel = OleDbConn.GetOleDbSchemaTable(OleDbSchemaGuid.Tables, null);</span><br><span class="line">        System.Data.DataTable dtExcel = OleDbConn.GetOleDbSchemaTable(OleDbSchemaGuid.Tables, null);</span><br><span class="line">        //获取Excel表</span><br><span class="line">        string tableName = dtExcel.Rows[0][2].ToString().Trim();</span><br><span class="line">        tableName = &quot;[&quot; + tableName.Replace(&quot;&#x27;&quot;, &quot;&quot;) + &quot;]&quot;;</span><br><span class="line">        string queryExcel = &quot;select 电影名称,导演,发行日期 from &quot; + tableName;</span><br><span class="line">        //创建数据集ds  用于后期装载 OleDbDataAdapter 中的获取的结果</span><br><span class="line">        DataSet ds = new DataSet();</span><br><span class="line">        OleDbDataAdapter oleAdapter = new OleDbDataAdapter(queryExcel, connExcel);</span><br><span class="line">        oleAdapter.Fill(ds, &quot;Record&quot;);</span><br><span class="line">        OleDbConn.Close();</span><br><span class="line"></span><br><span class="line">        /*************************** ①Excel文件数据读取完成  ***********************************************/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        /**************************  ②获取Excel数据后,将数据导入到Sql Server ********************************/</span><br><span class="line"></span><br><span class="line">        string sqlInsert = null; //初始化sql </span><br><span class="line">        int n = 0;    //定义一个整数 用于获取  ExecuteNonQuery()成功执行的行数 </span><br><span class="line">        //遍历 ds数据集中的 Record表里的所有行</span><br><span class="line">        foreach (DataRow dr in ds.Tables[&quot;Record&quot;].Rows)</span><br><span class="line">        &#123;</span><br><span class="line">            //创建插入语句</span><br><span class="line">            sqlInsert = &quot;insert into Record(Movie_Name,Movie_Director,Date_Released) values(&#x27;&quot;;</span><br><span class="line"></span><br><span class="line">            //每行有3个字段  电影名称,导演 和 发行日期</span><br><span class="line">            sqlInsert += dr.ItemArray[0] + &quot;&#x27;,&#x27;&quot;;</span><br><span class="line">            sqlInsert += dr.ItemArray[1] + &quot;&#x27;,&#x27;&quot;;</span><br><span class="line">            sqlInsert += dr.ItemArray[2] + &quot;&#x27;)&quot;;</span><br><span class="line">            SqlConnection conn = new SqlConnection(connStr);</span><br><span class="line">            SqlCommand cmd = new SqlCommand(sqlInsert, conn);</span><br><span class="line">            conn.Open();</span><br><span class="line">            n += cmd.ExecuteNonQuery();  //每次成功 +1</span><br><span class="line">            conn.Close();</span><br><span class="line">        &#125;</span><br><span class="line">        //如果 n&gt; 0  表示数据插入成功</span><br><span class="line">        if (n &gt; 0)</span><br><span class="line">        &#123;</span><br><span class="line">            MessageBox.Show(&quot;添加成功! 共插入&quot; + n.ToString() + &quot;条数据&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        else //否则失败</span><br><span class="line">        &#123;</span><br><span class="line">            MessageBox.Show(&quot;添加失败!&quot;);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        /**************************  ②数据导入到Sql Server完成 **********************************************/</span><br><span class="line"></span><br><span class="line">        //调用refresh方法,在添加完成数据后 自动刷新DataGridView表 显示新数据</span><br><span class="line">        Refresh();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    catch (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        //在整个过程中 如果出错的话 显示错误信息</span><br><span class="line">        MessageBox.Show(e.Message, &quot;错误消息&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">private void btnImportExcel_Click(object sender, EventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    //选择需要导入的Excel文件</span><br><span class="line">    OpenFileDialog ofDialog = new OpenFileDialog();</span><br><span class="line">    ofDialog.Title = &quot;请选择需要导入的Excel文件&quot;;</span><br><span class="line">    ofDialog.Filter = &quot;Excel Files(07版本 *.xlsx)|*.xlsx|(03版本 *.xls)|*.xls|所有文件(*.*)|*.*&quot;;</span><br><span class="line"></span><br><span class="line">    string fullPath = string.Empty;</span><br><span class="line">    if (ofDialog.ShowDialog() == DialogResult.OK)</span><br><span class="line">    &#123;</span><br><span class="line">        fullPath = ofDialog.FileName;</span><br><span class="line">    &#125;</span><br><span class="line">    if (fullPath == &quot;&quot;)</span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(&quot;未选择Excel文件&quot;);</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    //调用导入 Excel文件方法 </span><br><span class="line">    ImportExcel(fullPath, dgvManager);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>好了我们来运行下看看</p><p>1.首先我们把数据库数据清空 </p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030607030121.png" alt="img"></p><p>2.点击 导入Excel 按钮 选择Excel文件 </p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030607033681.png" alt="img"></p><p>\3. 显示添加成功 </p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030607035232.png" alt="img"></p><p>4.最终数据被导入到Sql Server 并显示在DataGridView上</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030607064188.png" alt="img"></p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030607040079.png" alt="img"></p><p>到这里我们的数据恢复就做完了.下一期,我们来共同学习下管理员是如何给普通用户分配功能权限的. :)</p><p><strong>附上源代码</strong></p><p><a href="http://files.cnblogs.com/longwu/MovieRecordManagementSystem09.zip">MovieRecordManagementSystem09.zip</a></p><p>转自：<a href="https://www.cnblogs.com/longwu/archive/2012/03/06/2379870.html">https://www.cnblogs.com/longwu/archive/2012/03/06/2379870.html<a></p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> winfrom </tag>
            
            <tag> vs2008 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#简易电影记录管理系统:开发八[数据备份]</title>
      <link href="/RookieRoom/2020/05/07/cjian-yi-dian-ying-ji-lu-guan-li-xi-tong-kai-fa-ba-shu-ju-bei-fen/"/>
      <url>/RookieRoom/2020/05/07/cjian-yi-dian-ying-ji-lu-guan-li-xi-tong-kai-fa-ba-shu-ju-bei-fen/</url>
      
        <content type="html"><![CDATA[<p><strong>本期概述</strong></p><p>上一期我们学习了用户分类,通过给用户分配不同的功能权限(管理员具有所有功能的使用权限,普通用户只能限制性的使用部分功能)达到给用户分类的目的.那么这一期我们来一起学习下一个信息管理系统最为重要的功能之一数据备份.</p> <span id="more"></span><p><strong>原理</strong></p><p>这个系统我们使用Excel文件来备份数据,主要由于它的内容结构跟DataGridView十分相似,而微软也提供了十分强大的技术支持(通过引用Microsoft.Office.Interop.Excel程序集),使得我们能够非常容易的将DataGridView数据导入到Excel表格中.主要原理:通过遍历DataGridView中所有的单元格,然后将里面的数据一一对应的填补到Excel表格中,从而完成整个数据的备份操作. </p><p><strong>界面设计</strong></p><p>首先,我们在管理界面 <a href="http://www.cnblogs.com/longwu/archive/2011/09/24/2188331.html">FrmManager</a> 增加一个导出Excel按钮  Name:btnExportExcel  如下图</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030902343114.png" alt="img"></p><p>接下来,我们需要在程序里添加一个Microsoft.Office.Interop.Excel程序集的引用.</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030408093793.png" alt="img"></p><p>选择.net项 ,选择添加Microsoft.Office.Interop.Excel,然后点确定(这里用的是12.0.0.0版本 导出的Excel文件是07版本).</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030408095264.png" alt="img"></p><p>然后在 <a href="http://www.cnblogs.com/longwu/archive/2011/09/24/2188331.html">FrmManager.cs</a> 类里使用其命名空间. </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">using Microsoft.Office.Interop.Excel; </span><br></pre></td></tr></table></figure><p><strong>代码实施</strong></p><p>接下来,我们便可以开始写代码了,我们在原程序代码后面插入如下代码片段. </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">//导出为Excel文件 </span><br><span class="line">public void ExportExcel(DataGridView dgv)</span><br><span class="line">&#123;</span><br><span class="line">    try</span><br><span class="line">    &#123;</span><br><span class="line">        //首先判断 DataGridView里面是否有内容 没内容则弹出提示并不再执行</span><br><span class="line">        if (dgv.Rows.Count == 0)</span><br><span class="line">        &#123;</span><br><span class="line">            MessageBox.Show(&quot;没数据可导出,请插入数据!&quot;);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        //首先我们需要创建一个Excel对象</span><br><span class="line">        Microsoft.Office.Interop.Excel.Application excel = new Microsoft.Office.Interop.Excel.Application();</span><br><span class="line">        excel.Application.Workbooks.Add(true); //给Excel 对象 添加一个Excel Workbooks</span><br><span class="line"></span><br><span class="line">        //生成Excel的 列头名称  </span><br><span class="line">        for (int i = 0; i &lt; dgv.ColumnCount; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            excel.Cells[1, i + 1] = dgvManager.Columns[i].HeaderText.ToString();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //遍历所有行</span><br><span class="line">        for (int i = 0; i &lt; dgv.RowCount - 1; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            //遍历每一行的中的所有列 从而实现所有单元格的遍历</span><br><span class="line">            for (int j = 0; j &lt; dgv.ColumnCount; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                excel.Cells[i + 2, j + 1] = dgv[j, i].Value.ToString();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        excel.DisplayAlerts = false;</span><br><span class="line">        excel.AlertBeforeOverwriting = false;</span><br><span class="line">        excel.Save(&quot;excel.xls&quot;);</span><br><span class="line">        MessageBox.Show(&quot;导出Excel成功!&quot;);</span><br><span class="line">        excel.Quit();//关闭Excel进程    </span><br><span class="line">        excel = null;</span><br><span class="line">    &#125;</span><br><span class="line">    catch (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(e.Message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">private void btnExportExcel_Click(object sender, EventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    //调用 ExportExcel方法 导出DataGridView 的内容到Excel</span><br><span class="line">    ExportExcel(dgvManager);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>运行查看</strong></p><p>代码写好后,我们来运行测试下.</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030408323829.png" alt="img"></p><p>来到主界面,点 管理界面 按钮. </p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030408324796.png" alt="img"></p><p>然后单击 导出Excel 按钮</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030408325966.png" alt="img"></p><p>这时弹出一个 另存为 窗口,输入你要保存的文件名(比如我这里的文件名为 导出的Excel) 然后点 保存.</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030408331027.png" alt="img"></p><p>系统提示 导出Excel成功!</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030408332134.png" alt="img"></p><p>我们来打开 导出的Excel 文件查看其数据是否成功导出,数据显示导出成功. :)</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030408333261.png" alt="img"></p><p>这样我们的数据备份就做好了;在下一期我们将共同来学习下数据恢复(将备份出来的Excel文件重新导入到Sql Server数据库中并同时在DataGridView上显示出来).</p><p><strong>附上源代码</strong></p><p><a href="http://files.cnblogs.com/longwu/MovieRecordManagementSystem08.zip">MovieRecordManagementSystem08.zip</a></p><p>转自：<a href="https://www.cnblogs.com/longwu/archive/2012/03/04/2378989.html">https://www.cnblogs.com/longwu/archive/2012/03/04/2378989.html<a></p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> winfrom </tag>
            
            <tag> vs2008 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#简易电影记录管理系统:开发七[用户分类]</title>
      <link href="/RookieRoom/2020/05/07/cjian-yi-dian-ying-ji-lu-guan-li-xi-tong-kai-fa-qi-yong-hu-fen-lei/"/>
      <url>/RookieRoom/2020/05/07/cjian-yi-dian-ying-ji-lu-guan-li-xi-tong-kai-fa-qi-yong-hu-fen-lei/</url>
      
        <content type="html"><![CDATA[<p><strong>本期概述</strong></p><p>在绝大部分数据管理系统中,管理员和普通用户这2类用户通常是必不可少的,当然还有更细的分类.前几期,我们用到的系统用户只有普通用户一类.那么在这一期,我们将在系统中设置2类用户, 管理员Administrator 和普通用户NormalUser.</p><p>我们在这里分类用户的目的是为了区分不同用户的功能权限,通常管理员拥有所有功能的使用权限,而普通用户只能限制性的使用部分功能(比如只能查看数据,而不修改数据). 当然，管理员可以赋予普通用户更多的功能权限,这个在后期随笔里面会继续说明.</p> <span id="more"></span><p><strong>原理</strong></p><p>原理很简单,我在之前的用户登录界面<a href="http://www.cnblogs.com/longwu/archive/2011/10/10/2204247.html">FrmLogin</a> 里新增了一个全局变量 UserType 用于获取当前登录用户的用户类型,在判断登录成功的代码里赋给一个登录用户类型(登录类型来自数据库里存储的用户类型)-Administrator或者NormalUser,在获取登录用户类型后, 我们需要设置普通用户的功能使用权限, 在那些需要屏蔽相应功能按钮的窗体里来获取全局变量 UserType,然后判断是否为 NormalUser；如果是，则将相应功能按钮的 Enabled 属性设置为 false.</p><p>首先,我们需要对数据库做些小的调整,在原先的数据库表MovieAccount 和Log 里分别新增一列用户类型 UserType.</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011121805131151.jpg" alt="img"></p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011121805110540.jpg" alt="img"></p><p>数据库修改完了,我们开始写代码.</p><p>首先,在登录窗体类FrmLogin.cs 里新增一条 全局变量UserType, 用于获取 当前登录用户的用户类型.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//定义一个登录全局变量 用来获取 &quot;登录&quot; 或是&quot;退出&quot;</span><br><span class="line">public static string Situation;</span><br><span class="line">//---------------------新增代码----------------------//</span><br><span class="line">//定义一个全局变量UserType 用来获 登录用户的类型</span><br><span class="line">public static string UserType;</span><br><span class="line">//---------------------新增代码----------------------//</span><br></pre></td></tr></table></figure><p>然后将之前的sql语句稍作修改,增加一个 UserType 字段.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 注释掉之前的select语句 string sql = &quot;select MUserPwd from MovieAccount where MUserName =&#x27;&quot; + txtName.Text + &quot;&#x27;&quot;;</span><br><span class="line">//---------------------新增代码----------------------//</span><br><span class="line">//这里新增了 从数据库里 获取UserType 这列的内容 </span><br><span class="line"> string sql = &quot;select MUserPwd,UserType from MovieAccount where MUserName =&#x27;&quot; + txtName.Text + &quot;&#x27;&quot;;</span><br><span class="line">//---------------------新增代码----------------------//</span><br></pre></td></tr></table></figure><p>通过SqlDataReader sdr 来从数据库中读取该用户的类型 并传给字符串 uType.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//则将对应该用户名下的 第一个字段 即使密码(MUserPwd为select的第一个字段) 赋给 字符串pwd  ,并且依次往后读取 所有的密码</span><br><span class="line">//Trim()方法为移除字符串前后的空白</span><br><span class="line">string pwd =sdr.GetString(0).Trim();</span><br><span class="line">//---------------------新增代码-------------------------------//</span><br><span class="line">//读取器sdr获取了2列数据 第1列为密码 第2列 即索引为1的是用户类型</span><br><span class="line">string uType = sdr.GetString(1);</span><br><span class="line">//---------------------新增代码-------------------------------//</span><br></pre></td></tr></table></figure><p>在登录成功后,将字符串 uType 获取的登录类型 赋给全局变量 UserType.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//添加获取当前登录情况的代码</span><br><span class="line">//获取当前用户登录的情况</span><br><span class="line">Situation = &quot;登录&quot;;</span><br><span class="line">//---------------------新增代码-------------------------------//</span><br><span class="line">//将登录成功的用户类型 赋给全局变量UserType</span><br><span class="line">//用于获取当前登录 用户的类型</span><br><span class="line">UserType = uType;</span><br><span class="line">//---------------------新增代码-------------------------------//</span><br></pre></td></tr></table></figure><p>这样当用户登录系统后,系统就能获得 登录系统的用户类型了; 我们到主窗体FrmMain上做个小测试.</p><p>我们现在主窗体FrmMain界面新增一个label框(name:lblSayHi) 用于获得登录的用户类型.</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011121806215891.jpg" alt="img"></p><p>然后,在加载窗体下添加如下代码.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">//当窗体加载的时候 自动运行</span><br><span class="line">private void FrmMain_Load(object sender, EventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    //------------------------------新增代码----------------------------------//</span><br><span class="line">    //这里 新增来一个用户类型 判断  FrmLogin.UserType</span><br><span class="line">    //将当前登录用户名和登录时间赋给label的text属性</span><br><span class="line">    //并在当前主界面窗体加载的时候 显示在label框上</span><br><span class="line">    lblCurrentUser.Text = &quot;当前登录用户为:&quot; + FrmLogin.Uid + &quot; 用户类型 &quot; + FrmLogin.UserType + &quot;  登录时间为:&quot; + FrmLogin.Time;</span><br><span class="line">    //------------------------------新增代码----------------------------------//</span><br><span class="line"></span><br><span class="line">    //------------------------------新增代码----------------------------------//</span><br><span class="line">    //给当前用户打招呼 </span><br><span class="line">    //这里通过获取当前用户电脑上的时间 以及判断登录用户的类型 来给不同类型的用户打招呼  </span><br><span class="line">    // 定义整型变量 intTime 来获取 用户电脑上的具体小时数 然后在如下进行判断</span><br><span class="line">    int intTime = FrmLogin.Time.Hour;</span><br><span class="line">    //获取FrmLogin窗体的全局变量 UserType 用户类型, 用于一下给不同类型的用户打招呼</span><br><span class="line">    string uType = FrmLogin.UserType;</span><br><span class="line">    //在凌晨0-6点的时候</span><br><span class="line">    if (intTime &gt;= 0 &amp;&amp; intTime &lt; 6)</span><br><span class="line">    &#123;</span><br><span class="line">        if (uType == &quot;Administrator&quot;)</span><br><span class="line">            lblSayHi.Text = &quot;尊敬的  &quot; + FrmLogin.Uid + &quot; 深夜了,该休息了!&quot;;</span><br><span class="line">        else if (uType == &quot;NormalUser&quot;)</span><br><span class="line">            lblSayHi.Text = &quot;亲爱的  &quot; + FrmLogin.Uid + &quot;凌晨了,要赶紧休息哦!&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    //早上6点-中午12点的时候</span><br><span class="line">    else if (intTime &gt;= 6 &amp;&amp; intTime &lt; 12)</span><br><span class="line">    &#123;</span><br><span class="line">        if (uType == &quot;Administrator&quot;)</span><br><span class="line">            lblSayHi.Text = &quot;尊敬的  &quot; + FrmLogin.Uid + &quot;  早上好!&quot;;</span><br><span class="line">        else if (uType == &quot;NormalUser&quot;)</span><br><span class="line">            lblSayHi.Text = &quot;亲爱的  &quot; + FrmLogin.Uid + &quot; 早上好!&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    //中午12点-下午6点的时候</span><br><span class="line">    else if (intTime &gt;= 12 &amp;&amp; intTime &lt; 18)</span><br><span class="line">    &#123;</span><br><span class="line">        if (uType == &quot;Administrator&quot;)</span><br><span class="line">            lblSayHi.Text = &quot;尊敬的  &quot; + FrmLogin.Uid + &quot; 下午好!&quot;;</span><br><span class="line">        else if (uType == &quot;NormalUser&quot;)</span><br><span class="line">            lblSayHi.Text = &quot;亲爱的  &quot; + FrmLogin.Uid + &quot; 下午好!&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    //晚上</span><br><span class="line">    else if (intTime &gt;= 18 &amp;&amp; intTime &lt; 24)</span><br><span class="line">    &#123;</span><br><span class="line">        if (uType == &quot;Administrator&quot;)</span><br><span class="line">            lblSayHi.Text = &quot;尊敬的  &quot; + FrmLogin.Uid + &quot; 晚上好!&quot;;</span><br><span class="line">        else if (uType == &quot;NormalUser&quot;)</span><br><span class="line">            lblSayHi.Text = &quot;亲爱的  &quot; + FrmLogin.Uid + &quot; 晚上好!&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    else //否则 默认为 </span><br><span class="line">        lblSayHi.Text = &quot;欢迎使用 电影记录管理系统&quot; + FrmLogin.Uid;</span><br><span class="line">    //------------------------------新增代码----------------------------------//</span><br><span class="line"></span><br><span class="line">    //------------------------------新增代码----------------------------------//</span><br><span class="line">    //判断用户类型 并给用户设置功能权限</span><br><span class="line">    if (uType == &quot;NormalUser&quot;)</span><br><span class="line">    &#123;</span><br><span class="line">        tsbRegistration.Enabled = false;</span><br><span class="line">        tsbLog.Enabled = false;</span><br><span class="line">    &#125;</span><br><span class="line">    //------------------------------新增代码----------------------------------//</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们来做个小测试,测试之前,你需要在数据库 MovieAccount表的 UserType列里手动插入几条用户类型.这里我得admin1的用户类型为Administrator.</p><p>管理员 admin1 登录</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011121806383611.jpg" alt="img"></p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011121807405572.jpg" alt="img"></p><p>普通用户 user1 登录</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011121806391526.jpg" alt="img"></p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011121807411740.jpg" alt="img"></p><p>在用户类型获取成功之后,我们需要给管理员和普通用户 分配相应的功能权限 (管理员默认是拥有所有功能的使用权限,普通用户有些功能无法使用).</p><p>首先,我们在主窗体FrmMain上对普通用户禁用几个功能按钮,(将按钮的Enabled属性设置为 false). </p><p>这里禁用了 用户注册 和 日志查看 2个按钮的功能,(将如下代码 添加到加载窗体下).</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//------------------------------新增代码----------------------------------//</span><br><span class="line">//判断用户类型 并给用户设置功能权限</span><br><span class="line">if (uType == &quot;NormalUser&quot;)</span><br><span class="line">&#123;</span><br><span class="line">    tsbRegistration.Enabled = false;</span><br><span class="line">    tsbLog.Enabled = false;</span><br><span class="line">&#125;</span><br><span class="line">//------------------------------新增代码----------------------------------//</span><br></pre></td></tr></table></figure><p>我们再来测试下,使用 用户类型为NormalUser user1登录系统. </p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011121807084664.jpg" alt="img"></p><p>user1 登录后,用户注册和日志查询变为不可用.</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011121807091725.jpg" alt="img"></p><p>然后,在管理界面里 普通用户设置权限为 可以查看数据 但不能增删改.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">//当系统加载的时候自动显示DataGridView的数据</span><br><span class="line">private void FrmManager_Load(object sender, EventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    //调用刷新数据的方法</span><br><span class="line">    Refresh();</span><br><span class="line">    cmbforTypeSelecting.Text = &quot;全局搜索&quot;;</span><br><span class="line">    cmbforTypeSelecting.Items.Add(&quot;全局搜索&quot;);</span><br><span class="line">    cmbforTypeSelecting.Items.Add(&quot;编号&quot;);</span><br><span class="line">    cmbforTypeSelecting.Items.Add(&quot;电影名称&quot;);</span><br><span class="line">    cmbforTypeSelecting.Items.Add(&quot;导演&quot;);</span><br><span class="line">    cmbforTypeSelecting.Items.Add(&quot;发行时间&quot;);</span><br><span class="line"></span><br><span class="line">    //----------------------新增代码-------------------//</span><br><span class="line">    //添加对用户 类型的判断 用来设置功能按钮的使用权限</span><br><span class="line">    if (FrmLogin.UserType == &quot;NormalUser&quot;)</span><br><span class="line">    &#123;</span><br><span class="line">        btnDelete.Enabled = false;</span><br><span class="line">        btnAdd.Enabled = false;</span><br><span class="line">        btnSave.Enabled = false;</span><br><span class="line">    &#125;</span><br><span class="line">    //----------------------新增代码-------------------//</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们再来测试下,用的还是 普通用户 user1.但 添加 删除 和 保存记录 3个按钮 变得置灰(不可用)了.</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011121807150511.jpg" alt="img"></p><p>当然,由于新增了一列UserType,之前的用户注册功能(没有分类用户) 所以我们得稍作修改.</p><p>我们在 用户注册窗体FrmRegistration上增加2个radiobutton,用于注册的时候进行用户分类注册. </p><p>一个是管理员name:rdoAdministrator 一个是普通用户name: rdoNormalUser  </p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011121819184633.jpg" alt="img"></p><p>然后,修改之前的用户注册代码.很简单,主要是在radiobutton的CheckedChanged事件下 增加了 一个uType 类型 用于获取当前的用户类型.</p><p>然后在之前的Sql插入语句里 新增了一列 UserType.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">//----------------------新增代码-------------------------//</span><br><span class="line">//new一个 uType 来获取 radiobutton 点击事件下 触发的用户类型赋值</span><br><span class="line">string uType = &quot;&quot;;</span><br><span class="line">if (rdoAdministrator.Checked)  //当管理员的radiobutton被点击后</span><br><span class="line">    uType = &quot;Administrator&quot;;   //传给 uType 一个管理员</span><br><span class="line">else if (rdoNormalUser.Checked)  //同理</span><br><span class="line">    uType = &quot;NormalUser&quot;;</span><br><span class="line">else                             //若不点击 则默认为普通用户注册 </span><br><span class="line">    uType = &quot;NormalUser&quot;;</span><br><span class="line">//sql 插入语句  我们新增了 一列 UserType</span><br><span class="line">string sqlInsert = &quot;insert into MovieAccount(MUserName,MUserPwd,UserType) values(@MUserName,@MUserPwd,@UserType) &quot;;</span><br><span class="line">//使用1个SQL参数数组 来装载 需要插入的数据</span><br><span class="line">SqlParameter[] param = &#123;</span><br><span class="line">                        new SqlParameter(&quot;@MUserName&quot;,txtUid.Text),</span><br><span class="line">                        new SqlParameter(&quot;@MUserPwd&quot;,txtPwd.Text),  </span><br><span class="line">                        new SqlParameter(&quot;@UserType&quot;,uType)   //新增了1个sql参数 uType</span><br><span class="line">                    &#125;;</span><br><span class="line">//----------------------新增代码-------------------------//</span><br></pre></td></tr></table></figure><p>好了,我们来简单测试下 新做好的用户分类注册.</p><p>先注册个管理员用户 admin03</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011121819385877.jpg" alt="img"></p><p>然后,数据库里多了一行数据 admin03, 用户类型是 Administrator.</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011121819394349.jpg" alt="img"></p><p>我们再注册一个 普通用户 user03.</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011121819525655.jpg" alt="img"></p><p>数据库里多了 一条user03 用户类型为 NormalUser</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011121819411235.jpg" alt="img"></p><p>这样,我们的用户分类和简单的功能权限设置就完成.感兴趣的朋友可以自己动手在日志查询那里新增一列-用户类型,这里就不讲了.</p><p><strong>附上源代码</strong></p><p><a href="http://files.cnblogs.com/longwu/MovieRecordManagementSystem07.zip">MovieRecordManagementSystem07.zip</a></p><p>转自：<a href="https://www.cnblogs.com/longwu/archive/2011/12/18/2291569.html">https://www.cnblogs.com/longwu/archive/2011/12/18/2291569.html<a></p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> winfrom </tag>
            
            <tag> vs2008 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#简易电影记录管理系统:开发六[数据搜索]</title>
      <link href="/RookieRoom/2020/05/07/cjian-yi-dian-ying-ji-lu-guan-li-xi-tong-kai-fa-liu-shu-ju-sou-suo/"/>
      <url>/RookieRoom/2020/05/07/cjian-yi-dian-ying-ji-lu-guan-li-xi-tong-kai-fa-liu-shu-ju-sou-suo/</url>
      
        <content type="html"><![CDATA[<p><strong>本期概述</strong></p><p>前几期中,我们实现了用户对系统数据记录的基本操作-增删改查, 由于数据量不是很多,我们可以轻易的找到我们所需要操作的记录；但是一旦数据量多起来,是否还能方便的找到我们想要操作的数据呢?这一期我们一起来实现一个功能-数据搜索.</p> <span id="more"></span><p><strong>原理</strong></p><p>主要原理是 使用SQL模糊查询语句 select * from 表名 where 字段名 like ‘%输入的内容%’ 对库内相应的字段进行模糊查询;</p><p>通过 获取文本框输入的内容 与 数据库中各字段下的内容 进行一一匹配,如果输入的内容 被某个字段下的单元格的内容所包含或者相同,则显示该列内容.</p><p>这里使用了 单个字段 模糊搜索相关信息的查询语句 select * from 表名 where “选择的单个字段” like ‘%输入的内容%’ 以及</p><p>全字段 模糊搜索信息的查询语句 select * from 表名 where (字段名1 like ‘%输入的内容%’)or(字段名2 like ‘%输入的内容%’)….;</p><p>界面设计</p><p>首先,我们需要在之前的 电影记录的管理界面FrmManager 增加一个查询文本框(name:txtDataforQuery) 和一个combox下列条(name:cmbforfieldSelecting)</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011110819454529.jpg" alt="img"></p><p>代码如下(这里代码仅限于数据搜索功能,如果需要查看其他功能代码 请看<a href="http://www.cnblogs.com/longwu/archive/2011/09/24/2188331.html">这里</a>)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">private void txtDataforQuery_TextChanged(object sender, EventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    string sql = &quot;&quot;;</span><br><span class="line">    if (txtDataforQuery.Text.Trim() == &quot;&quot;)</span><br><span class="line">    &#123;</span><br><span class="line">        //执行查询语句</span><br><span class="line">        sql = &quot;select * from Record&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    else if (seletedValue == &quot;全局搜索&quot; || cmbforTypeSelecting.Text == &quot;全局搜索&quot;)</span><br><span class="line">    &#123;</span><br><span class="line">        //全字段搜索</span><br><span class="line">        sql = &quot;select * from Record where(Id like&#x27;%&quot; + txtDataforQuery.Text.Trim() + &quot;%&#x27;)or(Movie_Name like&#x27;%&quot; + txtDataforQuery.Text.Trim() + &quot;%&#x27;)or(Movie_Director like&#x27;%&quot; + txtDataforQuery.Text.Trim() + &quot;%&#x27;)or(Date_Released like&#x27;%&quot; + txtDataforQuery.Text.Trim() + &quot;%&#x27;)&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    else if (seletedValue == &quot;Id&quot; || seletedValue == &quot;Movie_Name&quot; || seletedValue == &quot;Movie_Director&quot; || seletedValue == &quot;Date_Released&quot;)</span><br><span class="line">    &#123;</span><br><span class="line">        //通过相应的字段进行搜索</span><br><span class="line">        sql = &quot;select * from Record where &quot; + seletedValue + &quot; like &#x27;%&quot; + txtDataforQuery.Text.Trim() + &quot;%&#x27;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    SqlConnection conn = new SqlConnection(connStr);</span><br><span class="line">    SqlCommand cmd = new SqlCommand(sql, conn);</span><br><span class="line">    DataTable dt = new DataTable();</span><br><span class="line">    SqlDataAdapter sda = new SqlDataAdapter(cmd);</span><br><span class="line">    sda.Fill(dt);</span><br><span class="line">    dgvManager.DataSource = dt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里所做的数据搜索,是通过文本框的TextChanged 事件来自动获取 输入的文字 同时与 数据库中相应字段下的数据相匹配,如果输入的数据被数据库包含或者相同则显示出来.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">//当系统加载的时候自动显示DataGridView的数据</span><br><span class="line">private void FrmManager_Load(object sender, EventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    //调用刷新数据的方法</span><br><span class="line">    Refresh();</span><br><span class="line">    cmbforTypeSelecting.Text = &quot;全局搜索&quot;;</span><br><span class="line">    cmbforTypeSelecting.Items.Add(&quot;全局搜索&quot;);</span><br><span class="line">    cmbforTypeSelecting.Items.Add(&quot;编号&quot;);</span><br><span class="line">    cmbforTypeSelecting.Items.Add(&quot;电影名称&quot;);</span><br><span class="line">    cmbforTypeSelecting.Items.Add(&quot;导演&quot;);</span><br><span class="line">    cmbforTypeSelecting.Items.Add(&quot;发行时间&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">string seletedValue;</span><br><span class="line"></span><br><span class="line">private void txtDataforQuery_TextChanged(object sender, EventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    string sql = &quot;&quot;;</span><br><span class="line">    if (txtDataforQuery.Text.Trim() == &quot;&quot;)</span><br><span class="line">    &#123;</span><br><span class="line">        //执行查询语句</span><br><span class="line">        sql = &quot;select * from Record&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    else if (seletedValue == &quot;全局搜索&quot; || cmbforTypeSelecting.Text == &quot;全局搜索&quot;)</span><br><span class="line">    &#123;</span><br><span class="line">        //全字段搜索</span><br><span class="line">        sql = &quot;select * from Record where(Id like&#x27;%&quot; + txtDataforQuery.Text.Trim() + &quot;%&#x27;)or(Movie_Name like&#x27;%&quot; + txtDataforQuery.Text.Trim() + &quot;%&#x27;)or(Movie_Director like&#x27;%&quot; + txtDataforQuery.Text.Trim() + &quot;%&#x27;)or(Date_Released like&#x27;%&quot; + txtDataforQuery.Text.Trim() + &quot;%&#x27;)&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    else if (seletedValue == &quot;Id&quot; || seletedValue == &quot;Movie_Name&quot; || seletedValue == &quot;Movie_Director&quot; || seletedValue == &quot;Date_Released&quot;)</span><br><span class="line">    &#123;</span><br><span class="line">        //通过相应的字段进行搜索</span><br><span class="line">        sql = &quot;select * from Record where &quot; + seletedValue + &quot; like &#x27;%&quot; + txtDataforQuery.Text.Trim() + &quot;%&#x27;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    SqlConnection conn = new SqlConnection(connStr);</span><br><span class="line">    SqlCommand cmd = new SqlCommand(sql, conn);</span><br><span class="line">    DataTable dt = new DataTable();</span><br><span class="line">    SqlDataAdapter sda = new SqlDataAdapter(cmd);</span><br><span class="line">    sda.Fill(dt);</span><br><span class="line">    dgvManager.DataSource = dt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">private void cmbforTypeSelecting_SelectedIndexChanged(object sender, EventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    string strSelected = cmbforTypeSelecting.Text;</span><br><span class="line">    switch (strSelected)</span><br><span class="line">    &#123;</span><br><span class="line">        case &quot;全局搜索&quot;:</span><br><span class="line">            seletedValue = &quot;全局搜索&quot;;</span><br><span class="line">            break;</span><br><span class="line">        case &quot;编号&quot;:</span><br><span class="line">            seletedValue = &quot;Id&quot;;</span><br><span class="line">            break;</span><br><span class="line">        case &quot;电影名称&quot;:</span><br><span class="line">            seletedValue = &quot;Movie_Name&quot;;</span><br><span class="line">            break;</span><br><span class="line">        case &quot;导演&quot;:</span><br><span class="line">            seletedValue = &quot;Movie_Director&quot;;</span><br><span class="line">            break;</span><br><span class="line">        case &quot;发行时间&quot;:</span><br><span class="line">            seletedValue = &quot;Date_Released&quot;;</span><br><span class="line">            break;</span><br><span class="line">        default:</span><br><span class="line">            seletedValue = &quot;全局搜索&quot;;</span><br><span class="line">            break;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同理,我们在 日志查询界面 也做一个 日志搜索.</p><p>界面新增按钮如下 输入文本框name:txtlogQuery  搜索按钮name:btnlogQuery</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011110820073911.jpg" alt="img"></p><p>代码如下(如想看本界面的其他功能 请看<a href="http://www.cnblogs.com/longwu/archive/2011/10/10/2204247.html">这里</a>)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">//日志查询</span><br><span class="line">private void btnlogQuery_Click(object sender, EventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    //初始化 showSql语句</span><br><span class="line">    string showSql = &quot;&quot;;</span><br><span class="line">    ///如果文本框txtQuery 输入的内容为空值</span><br><span class="line">    if (txtlogQuery.Text.Trim() == &quot;&quot;)</span><br><span class="line">    &#123;</span><br><span class="line">        //显示所有数据</span><br><span class="line">        showSql = &quot;select * from Log&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        //否则 进行 全局搜索 将文本框里的内容与 各字段 进行 匹配</span><br><span class="line">        showSql = &quot;select * from Log where(Id like&#x27;%&quot; + txtlogQuery.Text.Trim() +</span><br><span class="line">        &quot;%&#x27;)or(User_Name like&#x27;%&quot; + txtlogQuery.Text.Trim() + &quot;%&#x27;)or(Situation like&#x27;%&quot;</span><br><span class="line">        + txtlogQuery.Text.Trim() + &quot;%&#x27;)or(Time like&#x27;%&quot; + txtlogQuery.Text.Trim() + &quot;%&#x27;)&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    SqlConnection conn = new SqlConnection(connStr);</span><br><span class="line">    SqlCommand cmd = new SqlCommand(showSql, conn);</span><br><span class="line">    DataTable dt = new DataTable();</span><br><span class="line">    SqlDataAdapter sda = new SqlDataAdapter(cmd);</span><br><span class="line">    sda.Fill(dt);</span><br><span class="line">    dgvLog.DataSource = dt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行测试(管理界面搜索测试)</p><p>1.如果不搜索(默认状态内容)</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011110820293088.jpg" alt="img"></p><p>2.如果什么都不选 默认为全局搜索</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011110820241614.jpg" alt="img"></p><p>3.通过选择字段 搜索一</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011110820243327.jpg" alt="img"></p><p>4.通过选择字段 搜索二</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011110820244887.jpg" alt="img"></p><p>5.选择全局搜索</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011110820251149.jpg" alt="img"></p><p>效果测试(日志查看界面搜索)</p><p>1.未搜索 默认内容</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011110820330696.jpg" alt="img"></p><p>2.全局搜索一</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011110820334889.jpg" alt="img"></p><p>3.全局搜索二</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011110820341169.jpg" alt="img"></p><p>这样我们的数据搜索(模糊查询)功能就做好了.下一期,我们一起学习下用户分类功能(将系统用户划分为管理员和普通用户2类).</p><p><strong>附上源代码</strong></p><p><a href="http://files.cnblogs.com/longwu/MovieRecordManagementSystem06.zip">MovieRecordManagementSystem06.zip</a></p><p>转自：<a href="https://www.cnblogs.com/longwu/archive/2011/11/08/2241630.html">https://www.cnblogs.com/longwu/archive/2011/11/08/2241630.html<a></p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> winfrom </tag>
            
            <tag> vs2008 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#简易电影记录管理系统:开发五[用户注册]</title>
      <link href="/RookieRoom/2020/05/07/cjian-yi-dian-ying-ji-lu-guan-li-xi-tong-kai-fa-wu-yong-hu-zhu-ce/"/>
      <url>/RookieRoom/2020/05/07/cjian-yi-dian-ying-ji-lu-guan-li-xi-tong-kai-fa-wu-yong-hu-zhu-ce/</url>
      
        <content type="html"><![CDATA[<p><strong>本期概述</strong></p><p>前几期为了方便登录系统,我们手动的在数据库里添加了用户名和密码,并没有实现在系统中进行用户注册.那么,这一期我们一起来实现下用户注册功能.</p> <span id="more"></span><p><strong>原理</strong></p><p>原理很简单, 首先判断用户名是否已经存在于数据库中, 执行sql select语句将获取文本框中的用户名,然后通过SqlDataReader对数据库里的数据进行逐行读取并判断数据库中是否已存在相同的用户名.如果存在,则禁止注册;如果不存在,则对用户输入的密码以及密码确认分别进行判断,如果都满足条件(2次密码输入相同等),则执行SQL插入语句,将注册的用户名和密码插入数据库.</p><p>首先,我们需要在 系统主界面 增加一个跳转到 用户注册窗体 的按钮.</p><p>用户注册name: tsbRegistration</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011102206551937.jpg" alt="img"></p><p>在该按钮的单击事件下 添加如下代码(用于窗体跳转).</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">private void tsbRegistration_Click(object sender, EventArgs e)</span><br><span class="line"> &#123;</span><br><span class="line">     //new一个 用户注册窗体对象</span><br><span class="line">     FrmRegistration registration = new FrmRegistration();</span><br><span class="line">     //显示 用户注册窗体</span><br><span class="line">     registration.Show();</span><br><span class="line">     //隐藏当前窗体(主界面)</span><br><span class="line">     this.Hide();</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>之后,我们来设计下 用户注册 窗体</p><p>新建一个用户注册窗体 FrmRegistration.cs 界面设计如下</p><p>文本框  用户名name:txtUid  密码name:txtPwd  密码确认name:txtPwdConfirm</p><p>文本框右边的用户密码输入提示label框  用户名提示name:lblUidMsg  密码提示name:lblPwdMsg  密码确认name:lblPwdConfirmMsg</p><p>按钮  注册name:btnOK  返回name:btnBack</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030411555945.jpg" alt="img"></p><p>用户注册窗体代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.ComponentModel;</span><br><span class="line">using System.Data;</span><br><span class="line">using System.Drawing;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Windows.Forms;</span><br><span class="line">using System.Configuration;</span><br><span class="line">using System.Data.SqlClient;</span><br><span class="line"></span><br><span class="line">/*******************************************************</span><br><span class="line"> </span><br><span class="line"> ** 作者: SoFlash - 博客园  http://www.cnblogs.com/longwu</span><br><span class="line"> </span><br><span class="line"> ** 描述: FrmRegistration.cs  用户注册窗体</span><br><span class="line"></span><br><span class="line"> ******************************************************/</span><br><span class="line"></span><br><span class="line">namespace 电影记录管理系统</span><br><span class="line">&#123;</span><br><span class="line">    public partial class FrmRegistration : Form</span><br><span class="line">    &#123;</span><br><span class="line">        public FrmRegistration()</span><br><span class="line">        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">        //连接字符串, 获取配置文件App.config里的字符串&quot;str&quot;</span><br><span class="line">        static string connStr = ConfigurationManager.ConnectionStrings[&quot;str&quot;].ConnectionString;</span><br><span class="line"></span><br><span class="line">        private void btnOK_Click(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            //否则判断 当前用户名在数据库中是否存在</span><br><span class="line">            //使用sql select语句 按 用户文本框中的文本内容 来选取数据库中的用户名</span><br><span class="line">            string sql = &quot;select MUserName from MovieAccount where MUserName=&#x27;&quot; + txtUid.Text + &quot;&#x27;&quot;;</span><br><span class="line">            //新建SQL 数据库连接</span><br><span class="line">            SqlConnection conn = new SqlConnection(connStr);</span><br><span class="line">            //使用SQL cmd指令来装载 sql查询语句和数据库连接</span><br><span class="line">            SqlCommand cmd = new SqlCommand(sql, conn);</span><br><span class="line">            //执行操作前  需要打开数据库连接</span><br><span class="line">            conn.Open();</span><br><span class="line">            //使用SqlDataReader 对cmd 执行读取指令的数据 进行逐行读取</span><br><span class="line">            SqlDataReader sdr = cmd.ExecuteReader();</span><br><span class="line">            //如果读到数据了,说明 数据库中已存在 文本框中输入的用户名</span><br><span class="line">            if (sdr.Read())</span><br><span class="line">            &#123;</span><br><span class="line">                //如果读到相同的用户名 则提示 用户名已存在</span><br><span class="line">                lblUidMsg.Text = &quot;用户名已存在,请重新输入!&quot;;</span><br><span class="line">                return;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            //如果用户名不存在 则判断下用户名密码是否为空</span><br><span class="line">            else if (txtUid.Text.Trim() == &quot;&quot;)</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                //如果用户名 不为空, 将提示语句赋给label框 并在窗体上</span><br><span class="line">                lblUidMsg.Text = &quot;用户名不能为空!&quot;;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">                //判断密码是否为空</span><br><span class="line">            else if (txtPwd.Text.Trim() == &quot;&quot;)</span><br><span class="line">            &#123;</span><br><span class="line">                //同理</span><br><span class="line">                lblPwdMsg.Text = &quot;密码不能为空!&quot;;</span><br><span class="line">                //同时清除 用户名 提示框的内容</span><br><span class="line">                lblUidMsg.Text = &quot;&quot;;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            //判断再次输入密码是否为空</span><br><span class="line">            else if (txtPwdConfirm.Text.Trim() == &quot;&quot;)</span><br><span class="line">            &#123;</span><br><span class="line">                //同理</span><br><span class="line">                lblPwdConfirmMsg.Text = &quot;验证密码不能为空!&quot;;</span><br><span class="line">                //同时清除 用户名 提示框 和 第一次密码输入提示框的内容</span><br><span class="line">                lblUidMsg.Text = &quot;&quot;;</span><br><span class="line">                lblPwdMsg.Text = &quot;&quot;;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            //判断2次密码输入是否相同</span><br><span class="line">            else if (txtPwd.Text.Trim() != txtPwdConfirm.Text.Trim())</span><br><span class="line">            &#123;</span><br><span class="line">                //同理</span><br><span class="line">                lblPwdMsg.Text = &quot;2次密码必须一样!&quot;;</span><br><span class="line">                lblPwdConfirmMsg.Text = &quot;请重新输入!&quot;;</span><br><span class="line">                return;</span><br><span class="line">            &#125;</span><br><span class="line">            else //如果通过上述检测,则进行账户 密码插入数据库操作</span><br><span class="line">            &#123;</span><br><span class="line">                //清空上面所有label框的提示</span><br><span class="line">                lblUidMsg.Text = &quot;&quot;;</span><br><span class="line">                lblPwdMsg.Text = &quot;&quot;;</span><br><span class="line">                lblPwdConfirmMsg.Text = &quot;&quot;;</span><br><span class="line"></span><br><span class="line">                //如果 用户名是否存在于 数据库判断完了 则关闭数据库连接(节省资源)</span><br><span class="line">                conn.Close();</span><br><span class="line"></span><br><span class="line">                //使用sql 数据插入语句</span><br><span class="line">                string sqlInsert = &quot;insert into MovieAccount(MUserName,MUserPwd) values(@MUserName,@MUserPwd)&quot;;</span><br><span class="line">                //使用1个SQL参数数组 来装载 需要插入的数据</span><br><span class="line">                SqlParameter[] param = &#123;</span><br><span class="line">                                        new SqlParameter(&quot;@MUserName&quot;,txtUid.Text),</span><br><span class="line">                                        new SqlParameter(&quot;@MUserPwd&quot;,txtPwd.Text)</span><br><span class="line">                                    &#125;;</span><br><span class="line">                //使用 SQL数据库连接</span><br><span class="line">                SqlConnection connInsert = new SqlConnection(connStr);</span><br><span class="line">                //使用SQL command 指令来装载 SQL查询语句和SQL数据库连接</span><br><span class="line">                SqlCommand cmdInsert = new SqlCommand(sqlInsert, connInsert);</span><br><span class="line">                //再次打开数据连接 执行插入数据操作</span><br><span class="line">                connInsert.Open();</span><br><span class="line">                //使用cmd指令 添加所有参数</span><br><span class="line">                cmdInsert.Parameters.AddRange(param);</span><br><span class="line">                //定义一个整型变量 用于接受 cmd的 执行查询指令(cmd的ExcuteNonQuery()方法返回值为一个整型)</span><br><span class="line">                int n = cmdInsert.ExecuteNonQuery();</span><br><span class="line">                //判断该值是否为空, 如果为空, 说明插入数据失败</span><br><span class="line">                if (n == 0)</span><br><span class="line">                &#123;</span><br><span class="line">                    MessageBox.Show(&quot;注册失败!,请重新输入&quot;);</span><br><span class="line">                    //插入失败就不再继续运行,返回</span><br><span class="line">                    return;</span><br><span class="line">                &#125;</span><br><span class="line">                else</span><br><span class="line">                &#123;</span><br><span class="line">                    //否则 数据插入成功</span><br><span class="line">                    MessageBox.Show(&quot;注册成功!&quot;);</span><br><span class="line">                &#125;</span><br><span class="line">                //关闭数据库连接</span><br><span class="line">                connInsert.Close();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //返回主窗体</span><br><span class="line">        private void btnBack_Click(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            //new一个主窗体对象</span><br><span class="line">            FrmMain main = new FrmMain();</span><br><span class="line">            //跳转到主窗体</span><br><span class="line">            main.Show();</span><br><span class="line">            //隐藏当前窗体</span><br><span class="line">            this.Hide();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码写好了,我们来测试下 用户注册功能.</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011102208243545.jpg" alt="img"></p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011102208455966.jpg" alt="img"></p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011102208461122.jpg" alt="img"></p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011102208463885.jpg" alt="img"></p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011102208465197.jpg" alt="img"></p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011102208472235.jpg" alt="img"></p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011102208473774.jpg" alt="img"></p><p>这样,我们的用户注册功能就完成了. 下一期,我们将共同学习下信息管理系统中最常见的功能-数据搜索.</p><p><strong>附上源代码</strong></p><p><a href="http://files.cnblogs.com/longwu/MovieRecordManagementSystem05.zip">MovieRecordManagementSystem05.zip</a></p><p>转自：<a href="https://www.cnblogs.com/longwu/archive/2011/10/22/2220937.html">https://www.cnblogs.com/longwu/archive/2011/10/22/2220937.html<a></p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> winfrom </tag>
            
            <tag> vs2008 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#简易电影记录管理系统:开发四[日志查看]</title>
      <link href="/RookieRoom/2020/05/07/cjian-yi-dian-ying-ji-lu-guan-li-xi-tong-kai-fa-si-ri-zhi-cha-kan/"/>
      <url>/RookieRoom/2020/05/07/cjian-yi-dian-ying-ji-lu-guan-li-xi-tong-kai-fa-si-ri-zhi-cha-kan/</url>
      
        <content type="html"><![CDATA[<p><strong>本期概述</strong></p><p>上一期,我们做了一个用户密码修改的功能. 这一期,我们来实现下日志查看功能(用于记录和查看用户的系统登录和退出历史).</p> <span id="more"></span><p><strong>原理</strong></p><p>原理很简单, 在登录窗体FrmLogin.cs定义3个全局变量,用于获取登录的用户名,登录情况(登录还是退出)以及相应的时间;然后在日志查看窗体调用该全局变量并且通过使用SQ插入语句将其保存到SQL Server中,然后在访问日志查看窗体的时候,通过窗体自动加载插入数据和查看数据的方法即可.</p><p>定义3个全局变量:</p><ol><li>登录成功和退出的用户Uid (public static string Uid;) –在第三章密码修改功能的时候已经定义了</li><li>登录成功和退出的时间Time (public static DateTime Time;)</li><li>登录情况Situation-2种包括”登录”和”退出”  (public static string Situation;)</li></ol><p>代码如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">//定义一个全局变量 Uid;</span><br><span class="line">//用于获取登录成功后的用户名</span><br><span class="line">public static string Uid;</span><br><span class="line"></span><br><span class="line">//定义一个全局变量 Time</span><br><span class="line">//用于获取登录成功后的用户的登录时间</span><br><span class="line">public static DateTime Time;</span><br><span class="line"></span><br><span class="line">//定义一个登录全局变量 用来获取 &quot;登录&quot; 或是&quot;退出&quot;</span><br><span class="line">public static string Situation;</span><br></pre></td></tr></table></figure><p>定义完获取登录的全局变量之后,然后我们需要在判断登录成功后的代码里添加一些代码来获取用户的所有登录信息,并赋给全局变量.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">//如果 文本框中输入的密码 ==数据库中的密码</span><br><span class="line">if (pwd == txtPwd.Text)</span><br><span class="line">&#123;</span><br><span class="line">    //获取登陆成功后的用户ID</span><br><span class="line">    Uid = txtName.Text;</span><br><span class="line"></span><br><span class="line">    //获取当前登录时间</span><br><span class="line">    Time = DateTime.Now;</span><br><span class="line"></span><br><span class="line">    //获取当前用户登录的情况</span><br><span class="line">    Situation = &quot;登录&quot;;</span><br><span class="line"></span><br><span class="line">    //说明在该账户下 密码正确, 系统登录成功</span><br><span class="line">    MessageBox.Show(&quot;系统登录成功,正在跳转主页面...&quot;);</span><br><span class="line">    FrmMain main = new FrmMain();</span><br><span class="line">    main.Show();</span><br><span class="line">    this.Hide();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码写好后,我们来做个小程序测试下,在主界面窗体显示 当前登录的用户名和登录时间.</p><p>在主界面窗体下方添加一个label框  name:lblCurrentUser.</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011100921324421.jpg" alt="img"></p><p>并在主界面窗体类FrmMain.cs 的窗体自动加载事件FrmMain_Load中加入如下代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//当窗体加载的时候 自动运行</span><br><span class="line">private void FrmMain_Load(object sender, EventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    //将当前登录用户名和登录时间赋给label的text属性</span><br><span class="line">    //并在当前主界面窗体加载的时候 显示在label框上</span><br><span class="line">    lblCurrentUser.Text = &quot;当前登录用户为: &quot; + FrmLogin.Uid + &quot; &quot; + &quot;登录时间为:&quot; + FrmLogin.Time;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样当用户成功登录后, 到主界面窗体便可以看到 当前登录用户的用户名 和其登录时间(如下图).</p><p>用户admin1登录系统</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011100921385490.jpg" alt="img"></p><p>在主界面窗体显示 当前用户 和其登录时间.</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011100921403680.jpg" alt="img"></p><p><strong>好了,我们开始设计我们的日志查看功能.</strong></p><p>首先,我们需要一个Log数据表来保存用户日志的数据. </p><p>设置字段属性如下,Id设置为自动增长.</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011100923322767.jpg" alt="img"></p><p>这样数据库就建好了</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011100923330765.jpg" alt="img"></p><p>数据库名为 Log</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011101003004256.jpg" alt="img"></p><p>然后我们需要创建一个日志查询窗体. </p><p>首先,我们需要在主界面ToolStrip上 添加一个”日志查询”按钮 name:tsbLog</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011101000353716.jpg" alt="img"></p><p>按钮下的代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">private void tsbLog_Click(object sender, EventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    FrmLog log = new FrmLog();</span><br><span class="line">    log.Show();</span><br><span class="line">    this.Hide();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后开始设计日志查看窗体 </p><p>日志查看窗体 name: FrmLog.cs  DataGridView  name:dgvLog</p><p>返回主界面按钮 name:btnBack  退出按钮 name:btnExit</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030822444875.jpg" alt="img"></p><p>DataGridView 里的列属性设置</p><p>编号列 </p><p>name:ID  DataPropertyName: Id  HeaderText: 编号</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011100923355477.jpg" alt="img"></p><p>用户列</p><p>name: User_Name DataPropertyName:User_Name  HeaderText: 用户</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011100923365425.jpg" alt="img"></p><p>情况列</p><p>name: Situation DataPropertyName: Situation HeaderText: 情况</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011100923371512.jpg" alt="img"></p><p>时间列</p><p>name: Time DataPropertyName: Time HeaderText: 时间</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011100923373331.jpg" alt="img"></p><p>界面设置好了, 我们来写 FrmLog窗体的代码.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.ComponentModel;</span><br><span class="line">using System.Data;</span><br><span class="line">using System.Drawing;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Windows.Forms;</span><br><span class="line">using System.Configuration;</span><br><span class="line">using System.Data.SqlClient;</span><br><span class="line"></span><br><span class="line">/*******************************************************</span><br><span class="line"> </span><br><span class="line"> ** 作者: SoFlash - 博客园  http://www.cnblogs.com/longwu</span><br><span class="line"> </span><br><span class="line"> ** 描述: FrmLog.cs 用于 查看用于登录日志 </span><br><span class="line"></span><br><span class="line"> ******************************************************/</span><br><span class="line"></span><br><span class="line">namespace 电影记录管理系统</span><br><span class="line">&#123;</span><br><span class="line">    public partial class FrmLog : Form</span><br><span class="line">    &#123;</span><br><span class="line">        public FrmLog()</span><br><span class="line">        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //连接字符串 获取配置文件里的连接路径</span><br><span class="line">        static string connStr = ConfigurationManager.ConnectionStrings[&quot;str&quot;].ConnectionString;</span><br><span class="line"></span><br><span class="line">        //private void FrmLog_Load(object sender, EventArgs e)</span><br><span class="line">        public void FrmLog_Load(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            //方法调用</span><br><span class="line">            //将当前用户的登录信息添加到DataGridView里面</span><br><span class="line">            AddLog();</span><br><span class="line">            //将数据显示到DataGridView上</span><br><span class="line">            ShowMsg();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public void AddLog()</span><br><span class="line">        &#123;</span><br><span class="line">            string sql = &quot;insert into Log(User_Name,Situation,Time) values (@User_Name,@Situation,@Time) &quot;;</span><br><span class="line"></span><br><span class="line">            //简单判断下 插入的数据是否为空 如果为空 则弹出提示</span><br><span class="line">            //通常这里不需要(用于异常提示)</span><br><span class="line">            if (FrmLogin.Uid == &quot;&quot; || FrmLogin.Situation == &quot;&quot; || FrmLogin.Time.ToString() == &quot;&quot;)</span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(&quot;数据不能为空!&quot;);</span><br><span class="line">                return;</span><br><span class="line">            &#125;</span><br><span class="line">            //向数据库里插入参数</span><br><span class="line">            SqlParameter[] param =&#123;</span><br><span class="line">                                       new SqlParameter(&quot;@User_Name&quot;,FrmLogin.Uid),</span><br><span class="line">                                       new SqlParameter(&quot;@Situation&quot;,FrmLogin.Situation),</span><br><span class="line">                                       new SqlParameter(&quot;@Time&quot;,FrmLogin.Time)</span><br><span class="line">                                   &#125;;</span><br><span class="line"></span><br><span class="line">            //使用sql连接指令 获取connStr的连接字符串</span><br><span class="line">            SqlConnection conn = new SqlConnection(connStr);</span><br><span class="line">            //使用cmd指令来装载 sql查询语句和conn连接指令</span><br><span class="line">            SqlCommand cmd = new SqlCommand(sql, conn);</span><br><span class="line">            //打开数据库</span><br><span class="line">            conn.Open();</span><br><span class="line">            //向cmd中添加所有参数</span><br><span class="line">            cmd.Parameters.AddRange(param);</span><br><span class="line">            //将cmd的执行查询获得的整数值赋给n</span><br><span class="line">            int n = cmd.ExecuteNonQuery();</span><br><span class="line">            //关闭数据库</span><br><span class="line">            conn.Close();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //写一个窗体加载自动从数据库获取数据并显示在datagridview的方法</span><br><span class="line">        public void ShowMsg()</span><br><span class="line">        &#123;</span><br><span class="line">            string showSql = &quot;select Id,User_Name,Situation,Time from Log&quot;;</span><br><span class="line">            // 使用conn连接桥梁来获取连接字符串</span><br><span class="line">            SqlConnection conn = new SqlConnection(connStr);</span><br><span class="line">            //使用cmd指令装载sql查询语句和conn数据连接</span><br><span class="line">            SqlCommand cmd = new SqlCommand(showSql, conn);</span><br><span class="line">            //new一个 datatable对象</span><br><span class="line">            DataTable dt = new DataTable();</span><br><span class="line">            //使用Sql数据适配器来装载cmd 指令</span><br><span class="line">            SqlDataAdapter sda = new SqlDataAdapter(cmd);</span><br><span class="line">            //将数据适配器获取的内容放入数据表中</span><br><span class="line">            sda.Fill(dt);</span><br><span class="line">            //将数据表的内容赋给DataGridView控件</span><br><span class="line">            dgvLog.DataSource = dt;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //写一个获取当前系统时间的方法</span><br><span class="line">        public void GetExitTime()</span><br><span class="line">        &#123;</span><br><span class="line">            //获取当前退出系统的时间</span><br><span class="line">            FrmLogin.Time = DateTime.Now;</span><br><span class="line">            //将当前&quot;退出&quot;字符串赋给登录窗体的全局变量Situation</span><br><span class="line">            FrmLogin.Situation = &quot;退出&quot;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void btnExit_Click(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            //调用获取当前退出时间的方法</span><br><span class="line">            GetExitTime();</span><br><span class="line">            //将当前用户的登录信息添加到DataGridView里面</span><br><span class="line">            AddLog();</span><br><span class="line">            //直接退出系统</span><br><span class="line">            Application.Exit();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void btnBack_Click(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            FrmMain main = new FrmMain();</span><br><span class="line">            main.Show();</span><br><span class="line">            this.Close();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样,FrmLog窗体就设计好了, 但是系统中有很多地方有 退出功能.</p><p>因此,我们需要将日志窗体中获取 当前退出时间的方法(包含退出的时间的退出情况) 以及 添加当前退出日志(用户名,情况和时间)的方法 附加到那些 退出功能 按钮下.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//调用FrmLog窗体 获取当前时间退出的方法</span><br><span class="line">FrmLog log = new FrmLog();</span><br><span class="line">log.GetExitTime();</span><br><span class="line"></span><br><span class="line">//方法调用</span><br><span class="line">//将当前用户的登录信息添加到DataGridView里面</span><br><span class="line">log.AddLog();</span><br></pre></td></tr></table></figure><p>需要调用方法的 退出功能 按钮如下</p><p>1.主界面的”重新登录”按钮</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011100923492457.jpg" alt="img"></p><p>2.主界面的”退出系统”按钮</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011100923503072.jpg" alt="img"></p><p>3.管理界面的”退出系统”按钮</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011101700343366.jpg" alt="img"></p><p>那么,让我们来测试下 系统运行效果.</p><p>首先,我们使用账户admin1 来登录系统.</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011100923584236.jpg" alt="img"></p><p>来到日志查看窗体,可以看到登录用户admin1的登录情况.</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011100923590552.jpg" alt="img"></p><p>接着我们回到主界面,使用主界面的”退出系统” 功能按钮来测试下.</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011101000004981.jpg" alt="img"></p><p>退出系统后,我们再次使用 账户admin1登录, 来到日志查看页面 获得的结果如下(新增了退出和重新登录2条记录).</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011101000010058.jpg" alt="img"></p><p>这样,我们的日志查看功能就设计好了!下一期,我们来一起学下该系统的用户注册功能. </p><p><strong>附上源代码</strong></p><p><a href="http://files.cnblogs.com/longwu/MovieRecordManagementSystem04.zip">MovieRecordManagementSystem04.zip</a></p><p>转自：<a href="https://www.cnblogs.com/longwu/archive/2011/10/10/2204247.html">https://www.cnblogs.com/longwu/archive/2011/10/10/2204247.html<a></p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> winfrom </tag>
            
            <tag> vs2008 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#简易电影记录管理系统:开发三[密码修改]</title>
      <link href="/RookieRoom/2020/05/07/cjian-yi-dian-ying-ji-lu-guan-li-xi-tong-kai-fa-san-mi-ma-xiu-gai/"/>
      <url>/RookieRoom/2020/05/07/cjian-yi-dian-ying-ji-lu-guan-li-xi-tong-kai-fa-san-mi-ma-xiu-gai/</url>
      
        <content type="html"><![CDATA[<p><strong>本期概述</strong></p><p>上一期我们实现了对电影记录的数据操作(增删改查).这一期,我们一起来实现下针对用户的密码修改功能.</p> <span id="more"></span><p><strong>原理简介</strong></p><p>原理很简单,系统获取用户输入的用户名,执行select语句从数据库中获取该用户名下的密码,再与用户输入的旧密码进行匹配,若相同则允许输入新密码,然后执行Update语句将新密码保存到数据库.</p><p>由于系统功能逐渐增多,我们需要创建一个主界面窗体,来方便使用各个功能. </p><p>新建一个窗体 name:FrmMain</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030411393331.jpg" alt="img"></p><p>我们在主窗体创建一个ToolStrip工具栏,用于后期功能窗体的切换.</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030411395613.jpg" alt="img"></p><p>然后,右键在ToolStrip上添加 Button 按钮.</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030411401516.jpg" alt="img"></p><p>将Button按钮的显示模式改成Text 文本显示.</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030411402834.jpg" alt="img"></p><p>设置完管理界面按钮后,同理设置 密码修改 返回登陆界面 直接退出 功能按钮.</p><p>ToolStrip按钮 管理界面name:tsbManager  密码修改name:tsbPwdChange  重新登录name:tsbLogin  退出系统name:tsbExit</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030411500037.jpg" alt="img"></p><p>主界面FrmMain.cs里的代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.ComponentModel;</span><br><span class="line">using System.Data;</span><br><span class="line">using System.Drawing;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Windows.Forms;</span><br><span class="line"></span><br><span class="line">/*******************************************************</span><br><span class="line"> </span><br><span class="line"> ** 作者: SoFlash - 博客园  http://www.cnblogs.com/longwu</span><br><span class="line"> </span><br><span class="line"> ** 描述: FrmMain.cs  主窗体 用于衔接各项功能窗体</span><br><span class="line"></span><br><span class="line"> ******************************************************/</span><br><span class="line"></span><br><span class="line">namespace 电影记录管理系统</span><br><span class="line">&#123;</span><br><span class="line">    public partial class FrmMain : Form</span><br><span class="line">    &#123;</span><br><span class="line">        public FrmMain()</span><br><span class="line">        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void tsbManager_Click(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            //new一个Manger窗体的对象</span><br><span class="line">            FrmManager manager = new FrmManager();</span><br><span class="line">            //转入FrmManager窗体</span><br><span class="line">            manager.Show();</span><br><span class="line">            //隐藏当前窗体</span><br><span class="line">            this.Hide();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void tsbPwdChange_Click(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            //同理</span><br><span class="line">            FrmPwdChange pwdChange = new FrmPwdChange();</span><br><span class="line">            pwdChange.Show();</span><br><span class="line">            this.Hide();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void tsbLogin_Click(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            //同理</span><br><span class="line">            FrmLogin login = new FrmLogin();</span><br><span class="line">            login.Show();</span><br><span class="line">            this.Hide();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void tsbExit_Click(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            //直接退出应用程序</span><br><span class="line">            Application.Exit();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同样,由于登录成功后的跳转界面换了,所以我们需要修改下登录后跳转界面的代码.</p><p>在登录窗体类FrmLogin.cs中修改(如下)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">//如果 文本框中输入的密码 ==数据库中的密码</span><br><span class="line">if (pwd == txtPwd.Text)</span><br><span class="line">&#123;</span><br><span class="line">    //获取登陆成功后的用户ID</span><br><span class="line">    Uid = txtName.Text;</span><br><span class="line">    //说明在该账户下 密码正确, 系统登录成功</span><br><span class="line">    MessageBox.Show(&quot;系统登录成功,正在跳转主页面...&quot;);</span><br><span class="line">    //FrmManager manager = new FrmManager();</span><br><span class="line">    //manager.Show();</span><br><span class="line">    //this.Hide();</span><br><span class="line"></span><br><span class="line">    FrmMain main = new FrmMain();</span><br><span class="line">    main.Show();</span><br><span class="line">    this.Hide();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后,电影记录管理窗体也稍作修改, 添加一个 <strong>返回主界面</strong> 按钮.</p><p>返回主界面name: btnBack</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011101700265695.jpg" alt="img"></p><p>代码如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">private void btnBack_Click(object sender, EventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    //返回主界面</span><br><span class="line">    FrmMain main = new FrmMain();</span><br><span class="line">    main.Show();</span><br><span class="line">    this.Close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再增加一个直接 <strong>退出系统</strong> 按钮,  name:btnExit.</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011101700272610.jpg" alt="img"></p><p>代码如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//直接退出系统</span><br><span class="line">private void btnExit_Click(object sender, EventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">   //直接退出系统</span><br><span class="line">    Application.Exit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后 我们开始设计密码修改窗体(如下图) </p><p>窗体name: FrmPwdChange</p><p>文本框  用户名name:txtUsername  旧密码name:txtOldPwd  新密码name:txtNewPwd  再次输入新密码name:txtNewPwdConfirm</p><p>按钮  修改name:btnOK  返回name:btnBack</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030411462043.jpg" alt="img"></p><p>窗体创建完成我们运行看下.</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012011823022413.jpg" alt="img"></p><p>当用户成功登录系统的以后,我们需要获取成功登录后的用户名,并将其传入到密码修改界面的用户名文本框中,为此在登录窗体类FrmLogin.cs中我们需要做一点修改</p><p>1.定义一个全局变量 Uid;  用于获取登录成功的用户名.</p><p>public static string Uid; (添加到如下代码中)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//首先 设置 连接到配置文件组建 App.config </span><br><span class="line">//当然 这里的 ConfigurationManager 系统是默认不使用其命名空间的 因此需要解析</span><br><span class="line">string connStr = ConfigurationManager.ConnectionStrings[&quot;str&quot;].ConnectionString;</span><br><span class="line"></span><br><span class="line">//定义一个全局变量 Uid;</span><br><span class="line">//用于获取登录成功后的用户名</span><br><span class="line">public static string Uid;</span><br></pre></td></tr></table></figure><p>2.在判断登录成功后,获取当前文本框中输入的用户名.</p><p>Uid &#x3D; txtName.Text;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">//如果 文本框中输入的密码 ==数据库中的密码</span><br><span class="line">if (pwd == txtPwd.Text)</span><br><span class="line">&#123;</span><br><span class="line">    //获取登陆成功后的用户ID</span><br><span class="line">    Uid = txtName.Text;</span><br><span class="line">    //说明在该账户下 密码正确, 系统登录成功</span><br><span class="line">    MessageBox.Show(&quot;系统登录成功,正在跳转主页面...&quot;);</span><br><span class="line">    //FrmManager manager = new FrmManager();</span><br><span class="line">    //manager.Show();</span><br><span class="line">    //this.Hide();</span><br><span class="line"></span><br><span class="line">    FrmMain main = new FrmMain();</span><br><span class="line">    main.Show();</span><br><span class="line">    this.Hide();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.在密码修改窗体FrmPwdChange加载时候,自动获取登录窗体FrmLogin的Uid属性,并赋给密码修改窗体FrmPwdChange的文本框txtUsername (代码如下)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//获取登录窗体的用户名</span><br><span class="line">private void FrmPwdChange_Load(object sender, EventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    //获取登录窗体登录成功后的公共变量 Uid</span><br><span class="line">    string currentUser = FrmLogin.Uid;</span><br><span class="line">    //将获取的字符串 currentUser 赋给txtUsername文本框</span><br><span class="line">    txtUsername.Text = currentUser;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样,每当我们登录成功后,跳转到密码修改窗体,用户名文本框就会直接显示我们当前登录的用户名了. :)</p><p>运行看下, 我们使用admin1帐号登录.</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012011823044278.jpg" alt="img"></p><p>来到密码修改窗体,此时,用户名admin1 已经自动出现到了用户名所在的文本框中.</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012011823033637.jpg" alt="img"></p><p>接下来我们实施下密码修改窗体的完整代码 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.ComponentModel;</span><br><span class="line">using System.Data;</span><br><span class="line">using System.Drawing;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Windows.Forms;</span><br><span class="line">using System.Data.SqlClient;</span><br><span class="line">using System.Configuration;</span><br><span class="line"></span><br><span class="line">/*******************************************************</span><br><span class="line"> </span><br><span class="line"> ** 作者: SoFlash - 博客园  http://www.cnblogs.com/longwu</span><br><span class="line"> </span><br><span class="line"> ** 描述: FrmPwdChange.cs  密码修改窗体 用于管理员和普通用户修改个人密码</span><br><span class="line"></span><br><span class="line"> ******************************************************/</span><br><span class="line"></span><br><span class="line">namespace 电影记录管理系统</span><br><span class="line">&#123;</span><br><span class="line">    public partial class FrmPwdChange : Form</span><br><span class="line">    &#123;</span><br><span class="line">        public FrmPwdChange()</span><br><span class="line">        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //连接字符串 获取配置文件里的连接路径</span><br><span class="line">        static string connStr = ConfigurationManager.ConnectionStrings[&quot;str&quot;].ConnectionString;</span><br><span class="line"></span><br><span class="line">        //修改密码</span><br><span class="line">        private void btnOK_Click(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            //使用Sql连接对象获取连接字符串</span><br><span class="line">            SqlConnection conn = new SqlConnection(connStr);</span><br><span class="line">            //使用sql语句获取当前用户名下的密码</span><br><span class="line">            string sql = &quot;select MUserPwd from MovieAccount where MUserName =&#x27;&quot; + txtUsername.Text + &quot;&#x27;&quot;;</span><br><span class="line">            //使用SQLcommand指令来装载SQL连接字符串和conn连接对象</span><br><span class="line">            SqlCommand cmd = new SqlCommand(sql, conn);</span><br><span class="line">            //打开conn连接</span><br><span class="line">            conn.Open();</span><br><span class="line">            //使用sql数据读取器来 获取cmd指令中的读到的数据</span><br><span class="line">            SqlDataReader sdr = cmd.ExecuteReader();</span><br><span class="line">            //如果sql数据读取器 读到了数据</span><br><span class="line">            if (sdr.Read())</span><br><span class="line">            &#123;</span><br><span class="line">                //将读到的用户名下的密码赋给字符串oldPwd</span><br><span class="line">                string oldPwd = sdr.GetString(0).Trim();</span><br><span class="line">                //如果文本框中输入的密码等于从数据库中读到的字符串oldPwd</span><br><span class="line">                if (oldPwd == txtOldPwd.Text)</span><br><span class="line">                &#123;</span><br><span class="line">                    //如果新密码为空</span><br><span class="line">                    if (txtNewPwd.Text.Trim()==&quot;&quot;||txtNewPwdConfirm.Text.Trim()==&quot;&quot;)</span><br><span class="line">                    &#123;</span><br><span class="line">                        //弹出提示</span><br><span class="line">                        MessageBox.Show(&quot;新密码确认不能为空!&quot;);</span><br><span class="line">                        return;</span><br><span class="line">                    &#125;</span><br><span class="line">                     //继续判断 如果2次新密码不相同</span><br><span class="line">                    else if(txtNewPwd.Text.Trim() != txtNewPwdConfirm.Text.Trim())</span><br><span class="line">                    &#123;</span><br><span class="line">                        //弹出提示 2次新密码不相同,请重新输入</span><br><span class="line">                        MessageBox.Show(&quot;2次输入的新密码不一样,请重新输入!&quot;);</span><br><span class="line">                        //新密码和再次证明密码提示框都清空</span><br><span class="line">                        txtNewPwd.Text = &quot;&quot;;</span><br><span class="line">                        txtNewPwdConfirm.Text = &quot;&quot;;</span><br><span class="line">                        return;</span><br><span class="line">                    &#125;</span><br><span class="line">                    else</span><br><span class="line">                    &#123;</span><br><span class="line">                        //如果2次新密码相同,关闭SqlDataReader连接</span><br><span class="line">                        sdr.Close();</span><br><span class="line">                        //执行sql语句</span><br><span class="line">                        string sqlUpdate = &quot;update MovieAccount set MUserPwd =&#x27;&quot; + txtNewPwdConfirm.Text + </span><br><span class="line">                        &quot;&#x27; where MUserName =&#x27;&quot; + txtUsername.Text + &quot;&#x27;&quot;;</span><br><span class="line">                        //new一个数据库更新指令</span><br><span class="line">                        SqlCommand cmdUp = new SqlCommand(sqlUpdate,conn);</span><br><span class="line">                        // 如果cmdUp获取的行数为0 则说明系更新指令出现异常</span><br><span class="line">                        if (cmdUp.ExecuteNonQuery() == 0)</span><br><span class="line">                        &#123;</span><br><span class="line">                            //系统报错 </span><br><span class="line">                            MessageBox.Show(&quot;未知错误!&quot;);</span><br><span class="line">                            return;</span><br><span class="line">                        &#125;</span><br><span class="line">                        else</span><br><span class="line">                        &#123;</span><br><span class="line">                            //否则 更新成功</span><br><span class="line">                            MessageBox.Show(&quot;恭喜你!密码修改成功!&quot;);</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                else</span><br><span class="line">                &#123;</span><br><span class="line">                    //弹出提示框 旧密码不能为空或错误</span><br><span class="line">                    MessageBox.Show(&quot;旧密码错误或者不能为空&quot;);</span><br><span class="line">                    //旧密码,新密码,新密码验证 同时清空</span><br><span class="line">                    txtOldPwd.Text = &quot;&quot;;</span><br><span class="line">                    txtNewPwd.Text = &quot;&quot;;</span><br><span class="line">                    txtNewPwdConfirm.Text = &quot;&quot;;</span><br><span class="line">                    return;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                //如果没读到用户名,提示用户名不存在!</span><br><span class="line">                MessageBox.Show(&quot;用户名不存在,请重新输入!&quot;);</span><br><span class="line">                //用用户名,旧密码,新密码,新密码验证 都清空  </span><br><span class="line">                txtUsername.Text = &quot;&quot;;</span><br><span class="line">                txtOldPwd.Text = &quot;&quot;;</span><br><span class="line">                txtNewPwd.Text = &quot;&quot;;</span><br><span class="line">                txtNewPwdConfirm.Text = &quot;&quot;;</span><br><span class="line">                return;</span><br><span class="line">              </span><br><span class="line">            &#125;</span><br><span class="line">            //关闭数据库连接</span><br><span class="line">            conn.Close();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //返回主窗体</span><br><span class="line">        private void btnBack_Click(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            //new 一个主框体的对象</span><br><span class="line">            FrmMain main = new FrmMain();</span><br><span class="line">            main.Show();</span><br><span class="line">            this.Close();</span><br><span class="line">        &#125;</span><br><span class="line">        //获取登录窗体的用户名</span><br><span class="line">        private void FrmPwdChange_Load(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            //获取登录窗体登录成功后的公共变量 Uid</span><br><span class="line">            string currentUser = FrmLogin.Uid;</span><br><span class="line">            //将获取的字符串 currentUser 赋给txtUsername文本框</span><br><span class="line">            txtUsername.Text = currentUser;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果测试:</p><p>首先使用admin1账户来登录系统 密码为666666</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011100304135821.jpg" alt="img"></p><p>当我们输入错误的旧密码时,系统弹出提示”旧密码错误或者不能为空”.</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011100304141276.jpg" alt="img"></p><p>输入正确的密码,但新密码和新密码确认为空,弹出提示”新密码不能为空”.</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011100304143317.jpg" alt="img"></p><p>只在新密码框中输入密码, 再次输入新密码框为空,同样弹出”新密码不能为空”.</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011100304144886.jpg" alt="img"></p><p>输入的新密码和新密码确认不一样,弹出提示”2次新密码不一样”.</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011100304150361.jpg" alt="img"></p><p>当新密码和新密码确认相同的时候,点修改,弹出提示框”修改成功”. </p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011100304154381.jpg" alt="img"></p><p>如果需要把密码输入框设置为不可见 用*号代替</p><p>可以通过 设置文本框的 PasswordChar属性 在里面添加*号 就行了</p><p>如图</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011100308322347.jpg" alt="img"></p><p>效果展示</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011100308324917.jpg" alt="img"></p><p>这样电影记录管理系统的主界面和密码修改界面就完成了,下一期我们来一起学习下如何记录并查看用户的历史登录和退出情况(日志查看).</p><p><strong>附上源代码</strong></p><p><a href="http://files.cnblogs.com/longwu/MovieRecordManagementSystem03.zip">MovieRecordManagementSystem03.zip</a></p><p>转自：<a href="https://www.cnblogs.com/longwu/archive/2011/10/03/2198276.html">https://www.cnblogs.com/longwu/archive/2011/10/03/2198276.html<a></p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> winfrom </tag>
            
            <tag> vs2008 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#简易电影记录管理系统:开发二[增删改查]</title>
      <link href="/RookieRoom/2020/05/07/cjian-yi-dian-ying-ji-lu-guan-li-xi-tong-kai-fa-er-zeng-shan-gai-cha/"/>
      <url>/RookieRoom/2020/05/07/cjian-yi-dian-ying-ji-lu-guan-li-xi-tong-kai-fa-er-zeng-shan-gai-cha/</url>
      
        <content type="html"><![CDATA[<p><strong>本期概述</strong></p><p>上一期我们学习并实现了用户登录功能.这一期我们一起来学习下电影记录管理系统的的最主要功能(对数据的增删改查).</p> <span id="more"></span><p><strong>新增数据表</strong></p><p>首先我们需要在之前的数据库Movie中创建一个Record数据表,用于存储我们需要操作的电影记录数据,这里Id需要设置为自动增长(如图). </p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011092408181186.jpg" alt="img"></p><p>创建完数据表后,我们需要手动插入一些数据.</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011092408210592.jpg" alt="img"></p><p>数据库创建完成后,开始实施系统界面.</p><p><strong>界面设计</strong></p><p>窗体name: FrmManager </p><p>文本框 电影名称name:txtMovie  导演name:txtDirector  发型日期name:txtDate</p><p>按钮  查看记录name:btnView   删除记录name:btnDelete  添加记录name:btnAdd 保存记录name:btnSave</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030820001797.jpg" alt="img"></p><p>其中DataGridView 设计 name:dgvManager</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011101623391841.jpg" alt="img"></p><p>创建DataGridView里的列</p><p>编辑datagridview里的页眉名称(HeadText),字段属性名称(DataPropertyName)和name, name可以随便写,只要每列的name不一样就行.</p><p>这里给出我的设置:  编号项 name:Id  DataPropertyName: Id  HeaderText: 编号</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011092403451465.jpg" alt="img"></p><p>DataPropertyName 是指Sql Sever数据库里的字段名(列名),所以必须跟数据库里的字段名相同.</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011101700055647.jpg" alt="img"></p><p>HeadText为显示在DataGridView界面上的页眉名.</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011092403494716.jpg" alt="img"></p><p>编号列</p><p>name:Id  DataPropertyName: Id  HeaderText: 编号</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011092403250871.jpg" alt="img"></p><p>电影名称列</p><p>name:Movie_Name  DataPropertyName:Movie_Name  HeaderText: 电影名称</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011092403252448.jpg" alt="img"></p><p>导演列</p><p>name:Movie_Director  DataPropertyName:Movie_Director  HeaderText: 导演</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011092403254323.jpg" alt="img"></p><p>发行日期列</p><p>name:Date_Released  DataPropertyName:Date_Released  HeaderText: 发行日期</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011092408472761.jpg" alt="img"></p><p>设置完DataGridView中的列后 我们运行下看看</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030820191726.jpg" alt="img"></p><p>系统默认鼠标选中模式为单元格选中,为了方便我们接下来的操作,我们把选中模式改为全行选中.</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011101623442636.jpg" alt="img"></p><p>查看效果</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030820245840.jpg" alt="img"></p><p>界面和数据库完成后,我们便开始写主程序代码.</p><p><strong>增-添加记录</strong> (添加一条新记录) </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">//添加数据</span><br><span class="line">private void btnAdd_Click(object sender, EventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    //定义一个初始值n=0, 用于判断后期是否成功插入数据</span><br><span class="line">    int n = 0;</span><br><span class="line">    string sql = &quot;insert into Record(Movie_Name,Movie_Director,Date_Released) values (@Movie_Name,@Movie_Director,@Date_Released)&quot;;</span><br><span class="line">    //判断插入的数据是否为空,如果为空,则提示重新插入!</span><br><span class="line">    if (txtMovie.Text.Trim() == &quot;&quot; || txtDirector.Text.Trim() == &quot;&quot; || txtDate.Text.Trim() == &quot;&quot;)</span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(&quot;插入数据不能为空,请按要求插入数据!&quot;);</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    //向数据库插入参数</span><br><span class="line">    SqlParameter[] param =&#123;</span><br><span class="line">                               new SqlParameter(&quot;@Movie_Name&quot;,txtMovie.Text),</span><br><span class="line">                               new SqlParameter(&quot;@Movie_Director&quot;,txtDirector.Text),</span><br><span class="line">                               new SqlParameter(&quot;@Date_Released&quot;,Convert.ToDateTime(txtDate.Text))</span><br><span class="line"></span><br><span class="line">                           &#125;;</span><br><span class="line">    SqlConnection conn = new SqlConnection(connStr);</span><br><span class="line">    SqlCommand cmd = new SqlCommand(sql, conn);</span><br><span class="line">    conn.Open();</span><br><span class="line">    cmd.Parameters.AddRange(param);</span><br><span class="line">    n = cmd.ExecuteNonQuery();</span><br><span class="line">    if (n == 0)</span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(&quot;添加失败!&quot;);</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    else if (n &gt; 0)</span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(&quot;添加成功!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    conn.Close();</span><br><span class="line">    //调用refresh方法,在添加完成数据后 自动刷新 显示新数据</span><br><span class="line">    Refresh(true);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>删-删除记录</strong> (删除已有记录)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">//删除数据</span><br><span class="line">private void btnDelete_Click(object sender, EventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    //使用sql删除语句</span><br><span class="line">    string sql = &quot;delete from Record where 1=1&quot;;</span><br><span class="line">    //如果datagridview的当前行被选中</span><br><span class="line">    if (dgvManager.CurrentRow.Selected)</span><br><span class="line">    &#123;</span><br><span class="line">        //将sql语句 delete from Record where 1=1 + and Id = + 当前选中行的第0个单元格的号码(即Id号)</span><br><span class="line">        sql = sql + &quot;and Id=&quot; + Convert.ToInt32(dgvManager.CurrentRow.Cells[0].Value.ToString());</span><br><span class="line">    &#125;</span><br><span class="line">    int n = 0;</span><br><span class="line">    SqlConnection conn = new SqlConnection(connStr);</span><br><span class="line">    SqlCommand cmd = new SqlCommand(sql, conn);</span><br><span class="line">    conn.Open();</span><br><span class="line">    n = cmd.ExecuteNonQuery();</span><br><span class="line">    if (n == 0)</span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(&quot;不存在的ID!&quot;);</span><br><span class="line">        return;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    else if (n &gt; 0)</span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(&quot;删除成功!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    conn.Close();</span><br><span class="line">    //删除完后 刷新一下当前数据</span><br><span class="line">    Refresh();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>改-保存记录</strong> (修改一条记录)</p><p>1.在写保存记录代码之前,我们需要将DataGridView里的数据显示在文本框中,以便我们修改.</p><p>双击DataGridView控件,然后添加如下代码.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//将鼠标点击的datagridview 上的行内容传递给 文本框</span><br><span class="line">private void dgvManager_CellContentClick(object sender, DataGridViewCellEventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    //获取字段名为Movie_Name的单元格内容</span><br><span class="line">    txtMovie.Text = dgvManager.Rows[e.RowIndex].Cells[&quot;Movie_Name&quot;].Value.ToString();</span><br><span class="line">    //同理 获取当前点击行里的 name属性为Movie_Director的单元格 获取并将其传至txtDirector 文本框</span><br><span class="line">    txtDirector.Text = dgvManager.Rows[e.RowIndex].Cells[&quot;Movie_Director&quot;].Value.ToString();</span><br><span class="line">    //new一个时间对象 目的是将电影发行时间的小时,分和秒给去掉 保留到最小单位为日</span><br><span class="line">    DateTime datetoDay = new DateTime().Date;</span><br><span class="line">    //将当前行的日期单元格的值 赋给 时间对象datetoDay</span><br><span class="line">    datetoDay = Convert.ToDateTime(dgvManager.Rows[e.RowIndex].Cells[&quot;Date_Released&quot;].Value);</span><br><span class="line">    //通过ToShortDateString()方法 将日期后的00:00:00 给剔除掉 并赋给 txtDate文本框</span><br><span class="line">    txtDate.Text = datetoDay.ToShortDateString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样当我们点击DataGridView控件中的任意一行,可以看到里面的内容被传递给了文本框.</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030820251174.jpg" alt="img"></p><p>然后直接在文本框中进行记录修改,通过点击 <strong>保存记录</strong> 按钮进行记录修改(代码如下).</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">//更新数据操作</span><br><span class="line">private void btnSave_Click(object sender, EventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    //在对数据进行修改之前 对文本框的内容做一下检查, 如果为空 则提示重新输入</span><br><span class="line">    if (txtMovie.Text.Trim() == &quot;&quot; || txtDirector.Text.Trim() == &quot;&quot; || txtDate.Text.Trim() == &quot;&quot;)</span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(&quot;文本框的输入不能为空!&quot;);</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    //使用SQL update 更新语句</span><br><span class="line">    //获取文本框中输入的内容, 通过Id进行更新(Id为当前鼠标点击行的Id)</span><br><span class="line">    string sqlUpdate = &quot;update Record set Movie_Name =&#x27;&quot; + txtMovie.Text + &quot;&#x27;,Movie_Director =&#x27;&quot;</span><br><span class="line">     + txtDirector.Text + &quot;&#x27;,Date_Released=&#x27;&quot; + txtDate.Text +</span><br><span class="line">    &quot;&#x27;where Id=&#x27;&quot; + dgvManager.CurrentRow.Cells[0].Value.ToString() + &quot;&#x27;&quot;;</span><br><span class="line">    SqlConnection conn = new SqlConnection(connStr);</span><br><span class="line">    SqlCommand cmdUpdate = new SqlCommand(sqlUpdate, conn);</span><br><span class="line">    conn.Open();</span><br><span class="line">    int n = cmdUpdate.ExecuteNonQuery();</span><br><span class="line">    if (n == 0)</span><br><span class="line">    &#123;</span><br><span class="line">        //提示更新失败</span><br><span class="line">        MessageBox.Show(&quot;更新失败!&quot;);</span><br><span class="line">        return;// 并且返回</span><br><span class="line">    &#125;</span><br><span class="line">    else if (n &gt; 0)</span><br><span class="line">    &#123;</span><br><span class="line">        //否则更新成功</span><br><span class="line">        MessageBox.Show(&quot;恭喜你!更新成功!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    //执行完数据更新操作后 需要关闭数据库 节省资源</span><br><span class="line">    conn.Close();</span><br><span class="line">    //更新完以后  调用刷新方法,将更新后的数据 显示在datagridview上面</span><br><span class="line">    Refresh();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>查-查看记录</strong> (查看当前所有记录)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//查看并刷新所有数据</span><br><span class="line">private void btnView_Click(object sender, EventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    string sql = &quot;select Id,Movie_Name,Movie_Director,Date_Released from Record&quot;;</span><br><span class="line">    SqlConnection conn = new SqlConnection(connStr);</span><br><span class="line">    SqlCommand cmd = new SqlCommand(sql, conn);</span><br><span class="line">    DataTable dt = new DataTable();</span><br><span class="line">    SqlDataAdapter sda = new SqlDataAdapter(cmd);</span><br><span class="line">    sda.Fill(dt);</span><br><span class="line">    dgvManager.DataSource = dt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码写好了, 也许会有人说, 很多数据库操作代码, 出现了重复,显得很难看; 的确,我们可以将那些重复的部分分离出来,写个SQLHelper类包含这些方法; 然后在需要数据操作的地方,调用相应的方法, 这样既节省了代码量, 又美观,一举两得.</p><p>这里给出我的 增删改  和  查 的方法,调用的时候传入相应的 参数 即可, 具体怎么用这里就不讲了.</p><p>执行增删改方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">static string connStr = ConfigurationManager.ConnectionStrings[&quot;str&quot;].ConnectionString;</span><br><span class="line"></span><br><span class="line">static SqlConnection conn = new SqlConnection(connStr);</span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// ExcuteNonQuery 用于执行增删改方法</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">/// &lt;param name=&quot;strSql&quot;&gt;增删改Sql语句&lt;/param&gt;</span><br><span class="line">/// &lt;param name=&quot;paras&quot;&gt;Sql参数数组&lt;/param&gt;</span><br><span class="line">/// &lt;returns&gt;返回一个整数值,用于判断是否操作成功&lt;/returns&gt;</span><br><span class="line">public static int ExcuteNonQuery(string strSql, params SqlParameter[] paras)</span><br><span class="line">&#123;</span><br><span class="line">    SqlCommand cmd = new SqlCommand(strSql, conn); //执行sql指令 外面调用需传入2个参数 Sql查询语句和 Sql连接</span><br><span class="line">    cmd.Parameters.AddRange(paras);                //添加 查询语句执行的参数数组</span><br><span class="line">    conn.Open();                                   //执行前 需打开数据库连接</span><br><span class="line">    int n = cmd.ExecuteNonQuery();                 //执行 cmd指令操作 返回成功操作的行数</span><br><span class="line">    conn.Close();                                  //用完关闭数据库 节约资源</span><br><span class="line">    return n;                                      //返回成功操作的行数</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行查方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// ExecuteDataTable 用于执行 查 方法</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">/// &lt;param name=&quot;strSql&quot;&gt;Sql Select语句&lt;/param&gt;</span><br><span class="line">/// &lt;returns&gt;返回 查询结果表&lt;/returns&gt;</span><br><span class="line">public static DataTable ExecuteDataTable(string strSql)</span><br><span class="line">&#123;</span><br><span class="line">    SqlCommand cmd = new SqlCommand(strSql, conn); //执行sql指令 外面调用需传入2个参数 Sql查询语句和 Sql连接</span><br><span class="line">    SqlDataAdapter da = new SqlDataAdapter(cmd);   //使用SqlDataAdapter数据适配器来加载cmd操作指令</span><br><span class="line">    DataTable dt = new DataTable();                //创建 DataTable </span><br><span class="line">    da.Fill(dt);                                   //将SqlDataAdapter 获取的结果集 填充到 DataTable中</span><br><span class="line">    return dt;                                     //返回 DataTable</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>微软对SQLServer数据库操作提供了非常好的数据操作类SQLHelper.cs [<a href="http://www.feiyan.info/416.html">详情可以看这里]</a></p><p>这样,我们的主程序的增删改查就做好了;下一起我们将一起学习下电影记录管理系统的密码修改功能,敬请期待.</p><p><strong>附上源代码</strong></p><p><a href="http://files.cnblogs.com/longwu/MovieRecordManagementSystem02.zip">MovieRecordManagementSystem02.zip</a></p><p>转自：<a href="https://www.cnblogs.com/longwu/archive/2011/09/24/2188331.html">https://www.cnblogs.com/longwu/archive/2011/09/24/2188331.html<a></p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> winfrom </tag>
            
            <tag> vs2008 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#简易电影记录管理系统:开发一[用户登录]</title>
      <link href="/RookieRoom/2020/05/07/cjian-yi-dian-ying-ji-lu-guan-li-xi-tong-kai-fa-yi-yong-hu-deng-lu/"/>
      <url>/RookieRoom/2020/05/07/cjian-yi-dian-ying-ji-lu-guan-li-xi-tong-kai-fa-yi-yong-hu-deng-lu/</url>
      
        <content type="html"><![CDATA[<p><strong>开篇</strong></p><p>在现实程序开发中, 我们开发的最多,最广泛的还是一些各类型的数据管理系统,当然不同的系统有功能上的差异,数据库也不一样,但最主要,最常见的功能无外乎对数据的基本操作(增删改查).该系统开发系列记录了整个简易电影记录管理系统的开发过程,绝大部分功能模块设计与实现都附上了截图,大部分代码也都包含注释,十分适合C#新手学习和掌握.</p> <span id="more"></span><p><strong>本期概述</strong></p><p>第一期我们一起来学习下如何使用Visual Studio 2008从新建项目到实现一个用户登录功能. </p><p>那么我们赶紧开始吧~~~~</p><p>1.新建项目</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030902305552.jpg" alt="img"></p><p> 2.新建Winform(Windows 窗体应用程序) 如图</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011091011422325.jpg" alt="img"></p><p>3.接下来新建好了Winform主窗体,并命名为 FrmLogin.cs. </p><p>界面设计:首先我们从左边的工具栏里拖出一个Button按钮,用于后期输入账号和密码后点击登录使用(如图所示).</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012031308325113.jpg" alt="img"></p><p>\4. 接下来是label框 用于提示需要在文本框Textbox内输入的内容.</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012031308335826.jpg" alt="img"></p><p>\5. 文本框Textbox 用于输入帐号和密码.</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012031308353734.jpg" alt="img"></p><p>6.大体界面设计好了,我们需要给控件们赋予name属性名称(如下)</p><p>窗体name: FrmLogin.cs(之前已经命名过)   用户名文本框name:txtName   密码文本框name:txtPwd  登录按钮name:btnLogin</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030411093075.jpg" alt="img"></p><p>然后再添加一个登录成功后 的跳转窗体 name: FrmManager.cs</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030411095639.jpg" alt="img"></p><p>界面设计好了, 我们把需要创建一个数据库用于存取用户的账户和密码信息.</p><p>1.新建一个数据库</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012031909394132.jpg" alt="img"></p><p>2.将数据库名设置为 Movie, 再点OK 就新建好了.</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012031909335776.jpg" alt="img"></p><p>3.数据库创建好了,我们便开始新建数据表. </p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012031909401357.jpg" alt="img"></p><p>4.设置 列名(字段名) 数据类型 以及 是否允许该字段为空</p><p>列名分别为  用户ID: MId  用户名: MUserName  用户密码: MUserPwd</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011091012085446.jpg" alt="img"></p><p>5.设置MId 的主键</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011091012092087.jpg" alt="img"></p><p>6.设置好主键后, 将下面列属性中的是否自我增长标识(Identity Specification)也设置一下.</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011091012093248.jpg" alt="img"></p><p>\7. 将 Identity Specification 中的 Is Identity 设置为 Yes(目的是让每插入1行新数据 ID数自动+1). </p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011091012095098.jpg" alt="img"></p><p>\8. 设好了以后保存数据表,表名为MovieAccount.</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011091012101434.jpg" alt="img"></p><p>9.数据表建完以后,我们需要手动插入用户登录系统所需要的用户名和密码.</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012031909572749.jpg" alt="img"></p><p>10.手动插入用户名和密码 如图所示(当然用户名和密码可以随意写,只要命名有意义且方便好记即可).</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011091012105538.jpg" alt="img"></p><p>这样,数据库便建好了.</p><p><strong>接下来设置登录窗体</strong></p><p>1.由于是针对数据库的操作,首先我们需要添加一个系统用于连接数据库的配置文件 App.config. </p><p>右键项目名- 添加 - 新建项</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012031121421370.jpg" alt="img"></p><p>然后选择 应用程序配置文件, 名称使用默认的 App.config 即可.</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030411133025.jpg" alt="img"></p><p> 2.添加完配置文件后,我们需要在里面添加 连接字符串名称 add name&#x3D;”str” 和 数据库连接字符串内容 connectionString&#x3D;”…..”.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;</span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">  &lt;connectionStrings&gt;</span><br><span class="line"></span><br><span class="line">    &lt;add name=&quot;str&quot; connectionString=&quot;Data Source = .\SQLExpress2008; Initial Catalog=Movie;Integrated Security=True&quot;/&gt; </span><br><span class="line">  &lt;/connectionStrings&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><p>设置完成 App.config 连接配置文件后,我们需要在登录窗体代码中来对其进行连接;这里我们需要用到ConfigurationManager(它提供了对客户端应用程序配置文件的访问).系统默认是不使用其命名空间的,因此我们需要对其进行解析;在解析前,需要添加一个对System.configuration程序集的引用. </p><p>图一</p><p>找到解决方案资源管理器下的 “引用”, 右键 “添加引用”. </p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030500551372.jpg" alt="img"></p><p>图二</p><p>找到.net 项, 选择System.configuration,然后点确定.</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030411184162.jpg" alt="img"></p><p>图三</p><p>当你看到引用下面出现了System.configuration,便说明引用已添加完成.</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011091023183044.jpg" alt="img"></p><p>图四</p><p>添加完引用后,我们在代码中添加一条用于连接配置文件的连接字符串.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//用于连接配置文件App.config</span><br><span class="line">string connStr = ConfigurationManager.ConnectionStrings[&quot;str&quot;].ConnectionString;</span><br></pre></td></tr></table></figure><p>添加位置 如下图</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012031121402371.png" alt="img"></p><p>然后将鼠标移到ConfigurationManager单击右键,这时候出现一个解析选项;</p><p>选using System.Configuration (使用系统下的Configuration命名空间).</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012031121450362.png" alt="img"></p><p>当然,由于登录窗体需要使用一些数据库操作指令的命名空间,例如SqlConnection等,系统默认是不使用的,所以同样我们需要自己解析一下.</p><p>同样右键SqlConnection解析,选择 using System.Data.SqlClient 或者System.Data.SqlClient.SqlConnection 都行.</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012031121452013.png" alt="img"></p><p><strong>完整代码如下</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.ComponentModel;</span><br><span class="line">using System.Data;</span><br><span class="line">using System.Drawing;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Windows.Forms;</span><br><span class="line">using System.Configuration;</span><br><span class="line">using System.Data.SqlClient;</span><br><span class="line">/*******************************************************</span><br><span class="line"> </span><br><span class="line"> ** 作者: SoFlash - 博客园  http://www.cnblogs.com/longwu</span><br><span class="line"> </span><br><span class="line"> ** 描述: FrmLogin.cs 用于 用户登录窗体的 实现 </span><br><span class="line"></span><br><span class="line"> ******************************************************/</span><br><span class="line"></span><br><span class="line">namespace 电影记录管理系统</span><br><span class="line">&#123;</span><br><span class="line">    public partial class FrmLogin : Form</span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">        public FrmLogin()</span><br><span class="line">        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">        //首先 设置 连接到配置文件组建 App.config </span><br><span class="line">        //当然 这里的 ConfigurationManager 系统是默认不使用其命名空间的 因此需要解析</span><br><span class="line">        string connStr = ConfigurationManager.ConnectionStrings[&quot;str&quot;].ConnectionString;</span><br><span class="line"></span><br><span class="line">        private void btnLogin_Click(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            //使用SqlConnection 来连接数据库</span><br><span class="line">            using (SqlConnection conn = new SqlConnection(connStr))</span><br><span class="line">            &#123;</span><br><span class="line">                //创建sql 查询语句  </span><br><span class="line">                string sql = &quot;select MUserPwd from MovieAccount where MUserName =&#x27;&quot; + txtName.Text + &quot;&#x27;&quot;;</span><br><span class="line">                //创建 SqlCommand 执行指令</span><br><span class="line">                using (SqlCommand cmd = new SqlCommand(sql, conn))</span><br><span class="line">                &#123;</span><br><span class="line">                    //打开数据库连接</span><br><span class="line">                    conn.Open();</span><br><span class="line">                    //使用 SqlDataReader 来 读取数据库  </span><br><span class="line">                    using (SqlDataReader sdr = cmd.ExecuteReader())</span><br><span class="line">                    &#123;</span><br><span class="line">                        //SqlDataReader 在数据库中为 从第1条数据开始 一条一条往下读 </span><br><span class="line">                        if (sdr.Read())  //如果读取账户成功(文本框中的用户名在数据库中存在)</span><br><span class="line">                        &#123;</span><br><span class="line">                            //则将第1条 密码 赋给 字符串pwd  ,并且依次往后读取 所有的密码</span><br><span class="line">                            //Trim()方法为移除字符串前后的空白</span><br><span class="line">                            string pwd = sdr.GetString(0).Trim();</span><br><span class="line">                            //如果 文本框中输入的密码 ==数据库中的密码</span><br><span class="line">                            if (pwd == txtPwd.Text)</span><br><span class="line">                            &#123;</span><br><span class="line">                                //说明在该账户下 密码正确, 系统登录成功</span><br><span class="line">                                MessageBox.Show(&quot;系统登录成功,正在跳转主页面...&quot;);</span><br><span class="line">                                FrmManager manager = new FrmManager();</span><br><span class="line">                                manager.Show();</span><br><span class="line">                                this.Hide();</span><br><span class="line">                            &#125;</span><br><span class="line">                            else</span><br><span class="line">                            &#123;</span><br><span class="line">                                //否则密码错误 再次输入密码</span><br><span class="line">                                MessageBox.Show(&quot;密码错误!请再次输入!&quot;);</span><br><span class="line">                                //并自动将当前密码 清空</span><br><span class="line">                                txtPwd.Text = &quot;&quot;;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        else</span><br><span class="line">                        &#123;</span><br><span class="line">                            //如果读取账户数据失败, 则用户名不存在</span><br><span class="line">                            MessageBox.Show(&quot;用户名不存在,请重新出入!&quot;);</span><br><span class="line">                            //并自动清空账户名</span><br><span class="line">                            txtName.Text = &quot;&quot;;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>运行效果展示</strong></p><p><strong>图一</strong></p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011101519493395.jpg" alt="img"></p><p><strong>图二</strong></p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011101519495495.jpg" alt="img"></p><p><strong>图三</strong></p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011101519501687.jpg" alt="img"></p><p>登陆成功后 跳转到管理窗体界面</p><p><img src="https://pic002.cnblogs.com/images/2012/326877/2012030411585981.jpg" alt="img"></p><p>这样一个电影记录管理系统的登录模块就做好了.</p><p><strong>附上源代码 (包含数据库文件)</strong></p><p><a href="http://files.cnblogs.com/longwu/MovieRecordManagementSystem01.zip">MovieRecordManagementSystem01.zip</a></p><p>转自：<a href="https://www.cnblogs.com/longwu/archive/2011/09/10/2172793.html">https://www.cnblogs.com/longwu/archive/2011/09/10/2172793.html<a></p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> winfrom </tag>
            
            <tag> vs2008 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>asp.net 的一个简单进度条功能</title>
      <link href="/RookieRoom/2020/05/07/aspnet-de-yi-ge-jian-dan-jin-du-tiao-gong-neng/"/>
      <url>/RookieRoom/2020/05/07/aspnet-de-yi-ge-jian-dan-jin-du-tiao-gong-neng/</url>
      
        <content type="html"><![CDATA[<p>我们先看下效果</p><span id="more"></span><p><img src="https://images2015.cnblogs.com/blog/396919/201605/396919-20160506144110341-694590586.gif" alt="img"></p><p>我点击了按钮后他会显示进度页面，进度完成后，进度条消失，其实也是比较简单的了。</p><p>我们需要一个进度条代码文件ProgressBar.htm（注意：是没有head这些标签的）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">&quot;javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">SetPorgressBar</span>(<span class="params">pos</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//设置进度条居中</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> screenWidth = <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">offsetWidth</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">ProgressBarSide</span>.<span class="property">style</span>.<span class="property">width</span> = <span class="title class_">Math</span>.<span class="title function_">round</span>(screenWidth / <span class="number">2</span>) + <span class="string">&quot;px&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">ProgressBarSide</span>.<span class="property">style</span>.<span class="property">left</span> = <span class="title class_">Math</span>.<span class="title function_">round</span>(screenWidth / <span class="number">4</span>) + <span class="string">&quot;px&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">ProgressBarSide</span>.<span class="property">style</span>.<span class="property">top</span> = <span class="string">&quot;50px&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">ProgressBarSide</span>.<span class="property">style</span>.<span class="property">height</span> = <span class="string">&quot;21px&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">ProgressBarSide</span>.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&quot;block&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//设置进度条百分比 </span></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">ProgressBar</span>.<span class="property">style</span>.<span class="property">width</span> = pos + <span class="string">&quot;%&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">ProgressText</span>.<span class="property">innerHTML</span> = pos + <span class="string">&quot;%&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">SetMaxValue</span>(<span class="params">maxValue</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">ProgressBarSide</span>.<span class="property">style</span>.<span class="property">width</span> = maxValue + <span class="string">&quot;px&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//完成后隐藏进度条</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">SetCompleted</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">ProgressBarSide</span>.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&quot;none&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">SetTitle</span>(<span class="params">title</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">ProgressTitle</span>.<span class="property">innerHTML</span> = title;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;ProgressBarSide&quot;</span> <span class="attr">style</span>=<span class="string">&quot;position: absolute; height: 21px; width: 100px;</span></span></span><br><span class="line"><span class="string"><span class="tag">    color: Silver; border-width: 1px; border-style: Solid; display: block&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;ProgressBar&quot;</span> <span class="attr">style</span>=<span class="string">&quot;position: absolute; height: 21px; width: 0%;  padding: 0px; color: rgb(0, 0, 255); line-height: 1.5 !important;&quot;</span>&gt;</span>&gt;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;ProgressText&quot;</span> <span class="attr">style</span>=<span class="string">&quot;position: absolute; height: 21px; width: 100%; text-align: center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;ProgressTitle&quot;</span> <span class="attr">style</span>=<span class="string">&quot;position: absolute; height: 21px; top: 21px; width: 100%;</span></span></span><br><span class="line"><span class="string"><span class="tag">        text-align: center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后需要一个进度条类ProgressBar.cs</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Web;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ZhuoYueE.Dop.Web.UI</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span>显示进度条</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ProgressBar</span> : <span class="title">System.Web.UI.Page</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 最大值</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">int</span> MaxValue</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (ViewState[<span class="string">&quot;MaxValue&quot;</span>] == <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span> Convert.ToInt32(ViewState[<span class="string">&quot;MaxValue&quot;</span>]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                ViewState[<span class="string">&quot;MaxValue&quot;</span>] = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 当前值</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">int</span> ThisValue</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (ViewState[<span class="string">&quot;ThisValue&quot;</span>] == <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span> Convert.ToInt32(ViewState[<span class="string">&quot;ThisValue&quot;</span>]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                ViewState[<span class="string">&quot;ThisValue&quot;</span>] = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 当前页面</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        System.Web.UI.Page m_page;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 功能描述:构造函数</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;page&quot;&gt;</span>当前页面<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ProgressBar</span>(<span class="params">System.Web.UI.Page page</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            m_page = page;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetMaxValue</span>(<span class="params"><span class="built_in">int</span> intMaxValue</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            MaxValue = intMaxValue;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 功能描述:初始化进度条</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">InitProgress</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//根据ProgressBar.htm显示进度条界面</span></span><br><span class="line">            <span class="built_in">string</span> templateFileName = AppDomain.CurrentDomain.BaseDirectory + <span class="string">&quot;ProgressBar.htm&quot;</span>;</span><br><span class="line">            StreamReader reader = <span class="keyword">new</span> StreamReader(@templateFileName, System.Text.Encoding.GetEncoding(<span class="string">&quot;GB2312&quot;</span>));</span><br><span class="line">            <span class="built_in">string</span> strhtml = reader.ReadToEnd();</span><br><span class="line">            reader.Close();</span><br><span class="line">            m_page.Response.Write(strhtml);</span><br><span class="line">            m_page.Response.Flush();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 功能描述:设置标题</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;strTitle&quot;&gt;</span>strTitle<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetTitle</span>(<span class="params"><span class="built_in">string</span> strTitle</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> strjsBlock = <span class="string">&quot;&lt;script&gt;SetTitle(&#x27;&quot;</span> + strTitle + <span class="string">&quot;&#x27;); &lt;/script&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">            m_page.Response.Write(strjsBlock);</span><br><span class="line">            m_page.Response.Flush();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 功能描述:设置进度</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;percent&quot;&gt;</span>percent<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">AddProgress</span>(<span class="params"><span class="built_in">int</span> intpercent</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            ThisValue = ThisValue + intpercent;</span><br><span class="line">            <span class="built_in">double</span> dblstep = ((<span class="built_in">double</span>)ThisValue / (<span class="built_in">double</span>)MaxValue) * <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">string</span> strjsBlock = <span class="string">&quot;&lt;script&gt;SetPorgressBar(&#x27;&quot;</span> + dblstep.ToString(<span class="string">&quot;0.00&quot;</span>) + <span class="string">&quot;&#x27;); &lt;/script&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">            m_page.Response.Write(strjsBlock);</span><br><span class="line">            m_page.Response.Flush();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">DisponseProgress</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> strjsBlock = <span class="string">&quot;&lt;script&gt;SetCompleted();&lt;/script&gt;&quot;</span>;</span><br><span class="line">            m_page.Response.Write(strjsBlock);</span><br><span class="line">            m_page.Response.Flush();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后就是调用方法了，调用很简单，在页面的按钮事件或者其他什么地方加入代码，如在按钮事件里这么用</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">btnImport_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            ProgressBar pb = <span class="keyword">new</span> ProgressBar(<span class="keyword">this</span>);</span><br><span class="line">            pb.SetMaxValue(<span class="number">110</span>);</span><br><span class="line">            pb.InitProgress();</span><br><span class="line">            pb.SetTitle(<span class="string">&quot;这是一个测试数据&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">110</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                pb.AddProgress(<span class="number">1</span>);</span><br><span class="line">                <span class="comment">//此处用线程休眠代替实际的操作，如加载数据等</span></span><br><span class="line">                System.Threading.Thread.Sleep(<span class="number">50</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            pb.DisponseProgress();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>怎么样，是不是很简单呢。</p><p>转自：<a href="https://www.cnblogs.com/zoujinhua/p/12767184.html">https://www.cnblogs.com/zoujinhua/p/12767184.html<a></p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> net </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C# — SOCKET通信实现</title>
      <link href="/RookieRoom/2020/05/07/c-socket-tong-xin-shi-xian/"/>
      <url>/RookieRoom/2020/05/07/c-socket-tong-xin-shi-xian/</url>
      
        <content type="html"><![CDATA[<p><strong>昨天晚上在网上查找资料，简单实现了C#开发的Socket通信，以下是具体的开发流程，我使用的是VS2017进行开发的：</strong></p><p><strong>一、服务器端：</strong></p><p><strong>1.新建一个项目，Windows控制台程序</strong></p><p><strong><img src="https://img2018.cnblogs.com/blog/1505274/201904/1505274-20190404101859448-985418555.png" alt="img"></strong></p><span id="more"></span><p><strong>2.重命名cs文件</strong></p><p><strong><img src="https://img2018.cnblogs.com/blog/1505274/201904/1505274-20190404111312137-1962140358.png" alt="img"></strong></p><p><strong>3.SocketService.cs具体代码如下：</strong></p><p><strong><img src="https://img2018.cnblogs.com/blog/1505274/201904/1505274-20190404113940207-888155570.png" alt="img"></strong></p><p><strong>二、客户端：</strong></p><p><strong>1.新建一个项目，Windows窗体应用</strong></p><p><strong><img src="https://img2018.cnblogs.com/blog/1505274/201904/1505274-20190404131206691-318554603.png" alt="img"></strong></p><p><strong>2.先设置窗体样式，在上面菜单栏的视图中打开工具箱，通过Button和TextBox两个根据将窗体设置如下：</strong></p><p><strong><img src="https://img2018.cnblogs.com/blog/1505274/201904/1505274-20190404131715671-78924230.png" alt="img"></strong></p><p><strong>3.双击其中一个button按钮，进入到代码视图，并将代码修改如下，这里我将cs文件名重命名为：Main</strong></p><p><strong><img src="https://img2018.cnblogs.com/blog/1505274/201904/1505274-20190404131928427-2310345.png" alt="img"></strong></p><p><strong>三、运行程序：</strong></p><p><strong>1.分别启动两个项目：</strong></p><p><strong><img src="https://img2018.cnblogs.com/blog/1505274/201904/1505274-20190404132219337-1375411039.png" alt="img"></strong></p><p><img src="https://img2018.cnblogs.com/blog/1505274/201904/1505274-20190404132252414-1926064096.png" alt="img"></p><p><strong>2.点击Client端的button4按钮：</strong></p><p><strong><img src="https://img2018.cnblogs.com/blog/1505274/201904/1505274-20190404132418194-472380205.png" alt="img"></strong></p><p><img src="https://img2018.cnblogs.com/blog/1505274/201904/1505274-20190404133630167-1462944458.png" alt="img"></p><p><strong>3.在button3的编辑框中输入信息点击button3发送：</strong></p><p><strong><img src="https://img2018.cnblogs.com/blog/1505274/201904/1505274-20190404133759248-1561385278.png" alt="img"></strong></p><p>转自：<a href="https://www.cnblogs.com/zoujinhua/p/12831302.html">https://www.cnblogs.com/zoujinhua/p/12831302.html<a></p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> winfrom </tag>
            
            <tag> socket </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ASP.NET实现二维码</title>
      <link href="/RookieRoom/2020/05/07/aspnet-shi-xian-er-wei-ma/"/>
      <url>/RookieRoom/2020/05/07/aspnet-shi-xian-er-wei-ma/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Web;</span><br><span class="line"><span class="keyword">using</span> System.Web.UI;</span><br><span class="line"><span class="keyword">using</span> System.Web.UI.WebControls;</span><br><span class="line"><span class="keyword">using</span> ThoughtWorks.QRCode.Codec;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">WeChat</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">WebForm2</span> : <span class="title">System.Web.UI.Page</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">Page_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">btnCRC_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//创建时间</span></span><br><span class="line">DateTime currentTime = <span class="keyword">new</span> System.DateTime();</span><br><span class="line"><span class="comment">//取当前年月日时分秒</span></span><br><span class="line">currentTime = System.DateTime.Now;</span><br><span class="line"><span class="comment">//取当前年</span></span><br><span class="line"><span class="built_in">int</span> Year = currentTime.Year;</span><br><span class="line"><span class="comment">//取当前月</span></span><br><span class="line"><span class="built_in">int</span> Month = currentTime.Month;</span><br><span class="line"><span class="comment">//取当前日</span></span><br><span class="line"><span class="built_in">int</span> Day = currentTime.Day;</span><br><span class="line"><span class="keyword">if</span> (Day &lt; <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">Day = <span class="number">0</span> + Day;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//取当前时</span></span><br><span class="line"><span class="built_in">int</span> Hour = currentTime.Hour;</span><br><span class="line"><span class="comment">//取当前分</span></span><br><span class="line"><span class="built_in">int</span> Minute = currentTime.Minute;</span><br><span class="line"><span class="built_in">int</span> Minute1 = currentTime.Minute + <span class="number">10</span>;</span><br><span class="line"><span class="comment">//取当前秒</span></span><br><span class="line"><span class="built_in">int</span> Second = currentTime.Second;</span><br><span class="line"><span class="comment">//取当前毫秒</span></span><br><span class="line"><span class="built_in">int</span> Millisecond = currentTime.Millisecond;</span><br><span class="line"><span class="keyword">this</span>.txtCRC.Text = Second.ToString();</span><br><span class="line">ThoughtWorksQRCode(<span class="string">&quot;您好欢迎使用二维码查看！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ThoughtWorksQRCode</span>(<span class="params"><span class="built_in">string</span> strtxt</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">Bitmap bt;</span><br><span class="line"><span class="built_in">string</span> enCodeString = strtxt;</span><br><span class="line">QRCodeEncoder qrCodeEncoder = <span class="keyword">new</span> QRCodeEncoder();</span><br><span class="line">bt = qrCodeEncoder.Encode(enCodeString, Encoding.UTF8);</span><br><span class="line"><span class="built_in">string</span> filename = DateTime.Now.ToString(<span class="string">&quot;yyyymmddhhmmss&quot;</span>);</span><br><span class="line">filename = filename.Replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">filename = filename.Replace(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">filename = filename.Replace(<span class="string">&quot;-&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">filename = filename.Replace(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">bt.Save(Server.MapPath(<span class="string">&quot;~/images/&quot;</span>) + filename + <span class="string">&quot;.jpg&quot;</span>);</span><br><span class="line"><span class="keyword">this</span>.Image1.ImageUrl = <span class="string">&quot;~/images/&quot;</span> + filename + <span class="string">&quot;.jpg&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception e)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">throw</span> e;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//public void GenerateQRCode(string content)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">// try</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">// // _fileLog.Info(&quot;GenerateQRCode|开始生成二维码&quot;);</span></span><br><span class="line"><span class="comment">// if (null != content)</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">// //初始化二维码生成工具</span></span><br><span class="line"><span class="comment">// var qrCodeEncoder = new QRCodeEncoder</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">// QRCodeEncodeMode = QRCodeEncoder.ENCODE_MODE.BYTE,</span></span><br><span class="line"><span class="comment">// QRCodeErrorCorrect = QRCodeEncoder.ERROR_CORRECTION.M,</span></span><br><span class="line"><span class="comment">// QRCodeVersion = 0,</span></span><br><span class="line"><span class="comment">// QRCodeScale = 4</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br><span class="line"><span class="comment">// //将字符串生成二维码图片</span></span><br><span class="line"><span class="comment">// var image = qrCodeEncoder.Encode(content);</span></span><br><span class="line"><span class="comment">// var ms = new MemoryStream();</span></span><br><span class="line"><span class="comment">// image.Save(ms, ImageFormat.Png);</span></span><br><span class="line"><span class="comment">// Response.BinaryWrite(ms.GetBuffer());</span></span><br><span class="line"><span class="comment">// Response.End();</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// //_fileLog.Info(&quot;CloudCardController|GenerateQRCode|成功生成二维码&quot;);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// catch (Exception ex)</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">// //_fileLog.Error(&quot;GenerateQRCode|生成二维码出现异常,异常信息：&quot; + ex.Message);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//private void CreateCode_Simple(string nr)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">// QRCodeEncoder qrCodeEncoder = new QRCodeEncoder();</span></span><br><span class="line"><span class="comment">// qrCodeEncoder.QRCodeEncodeMode = QRCodeEncoder.ENCODE_MODE.BYTE;</span></span><br><span class="line"><span class="comment">// qrCodeEncoder.QRCodeScale = 4;</span></span><br><span class="line"><span class="comment">// qrCodeEncoder.QRCodeVersion = 8;</span></span><br><span class="line"><span class="comment">// qrCodeEncoder.QRCodeErrorCorrect = QRCodeEncoder.ERROR_CORRECTION.M;</span></span><br><span class="line"><span class="comment">// //System.Drawing.Image image = qrCodeEncoder.Encode(&quot;4408810820 深圳－广州 小江&quot;);</span></span><br><span class="line"><span class="comment">// System.Drawing.Image image = qrCodeEncoder.Encode(nr);</span></span><br><span class="line"><span class="comment">// string filename = DateTime.Now.ToString(&quot;yyyymmddhhmmssfff&quot;).ToString() + &quot;.jpg&quot;;</span></span><br><span class="line"><span class="comment">// string filepath = Server.MapPath(@&quot;~\Upload&quot;) + &quot;\\&quot; + filename;</span></span><br><span class="line"><span class="comment">// System.IO.FileStream fs = new System.IO.FileStream(filepath, System.IO.FileMode.OpenOrCreate, System.IO.FileAccess.Write);</span></span><br><span class="line"><span class="comment">// image.Save(fs, System.Drawing.Imaging.ImageFormat.Jpeg);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// fs.Close();</span></span><br><span class="line"><span class="comment">// image.Dispose();</span></span><br><span class="line"><span class="comment">// //二维码解码</span></span><br><span class="line"><span class="comment">// var codeDecoder = CodeDecoder(filepath);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span>// <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span>// 二维码解码</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span>// <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span>// <span class="doctag">&lt;param name=&quot;filePath&quot;&gt;</span>图片路径<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span>// <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="comment">//public string CodeDecoder(string filePath)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">// if (!System.IO.File.Exists(filePath))</span></span><br><span class="line"><span class="comment">// return null;</span></span><br><span class="line"><span class="comment">// Bitmap myBitmap = new Bitmap(Image.FromFile(filePath));</span></span><br><span class="line"><span class="comment">// QRCodeDecoder decoder = new QRCodeDecoder();</span></span><br><span class="line"><span class="comment">// string decodedString = decoder.decode(new QRCodeBitmapImage(myBitmap));</span></span><br><span class="line"><span class="comment">// return decodedString;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>转自：<a href="https://www.cnblogs.com/zoujinhua/p/10308661.html">https://www.cnblogs.com/zoujinhua/p/10308661.html<a></p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> 有趣的编程知识 </tag>
            
            <tag> net </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML+Css让网页自动适应电脑手机屏幕</title>
      <link href="/RookieRoom/2020/05/07/htmlcss-rang-wang-ye-zi-dong-gua-ying-dian-nao-shou-ji-ping-mu/"/>
      <url>/RookieRoom/2020/05/07/htmlcss-rang-wang-ye-zi-dong-gua-ying-dian-nao-shou-ji-ping-mu/</url>
      
        <content type="html"><![CDATA[ <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0, minimum-scale=0.5, maximum-scale=2.0, user-scalable=yes&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p><strong>在网页的中增加以上这句话，可以让网页的宽度自动适应手机屏幕的宽度</strong></p> <span id="more"></span><p><strong>其中：</strong></p><p><strong>width&#x3D;device-width ：表示宽度是设备屏幕的宽度</strong></p><p><strong>height&#x3D;device-height ：表示宽度是设备屏幕的宽度</strong></p><p><strong>initial-scale&#x3D;1.0：表示初始的缩放比例(初始规模为1.0倍，即原始大小)</strong></p><p><strong>minimum-scale&#x3D;0.5：表示最小的缩放比例</strong></p><p><strong>maximum-scale&#x3D;2.0：表示最大的缩放比例</strong></p><p><strong>user-scalable&#x3D;yes或者1：表示用户是否可以调整缩放比例(no或者0：表示不可调整缩放比例)</strong></p><p><strong>target-densitydpi：</strong></p><p><strong>一个屏幕像素密度是由屏幕分辨率决定的，通常定义为每英寸点的数量（dpi）。Android支持三种屏幕像素密度：低像素密度，中像素密度，高像素密度。一个低像素密度的屏幕每英寸上的像素点更少，而一个高像素密度的屏幕每英寸上的像素点更多。Android Browser和WebView默认屏幕为中像素密度。</strong></p><p><strong>下面是 target-densitydpi 属性的 取值范围</strong></p><ul><li><strong>device-dpi –使用设备原本的 dpi 作为目标 dp。 不会发生默认缩放。</strong></li><li><strong>high-dpi – 使用hdpi 作为目标 dpi。 中等像素密度和低像素密度设备相应缩小。</strong></li><li><strong>medium-dpi – 使用mdpi作为目标 dpi。 高像素密度设备相应放大， 像素密度设备相应缩小。 这是默认的target density.</strong></li><li><strong>low-dpi -使用mdpi作为目标 dpi。中等像素密度和高像素密度设备相应放大。</strong></li><li>** – 指定一个具体的dpi 值作为target dpi. 这个值的范围必须在70–400之间。**</li></ul><p><strong>为了防止Android Browser和WebView 根据不同屏幕的像素密度对你的页面进行缩放，你可以将viewport的target-densitydpi 设置为 device-dpi。当你这么做了，页面将不会缩放。相反，页面会根据当前屏幕的像素密度进行展示。在这种情形下，你还需要将viewport的width定义为与设备的width匹配，这样你的页面就可以和屏幕相适应。</strong></p><p><strong>如果是想要一打开网页，则自动以原始比例显示，并且不允许用户修改的话，则是：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>转自:<a href="https://www.cnblogs.com/zoujinhua/p/10316010.html">https://www.cnblogs.com/zoujinhua/p/10316010.html<a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> html </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c# 进阶之 WebAPI</title>
      <link href="/RookieRoom/2020/05/07/c-jin-jie-zhi-webapi/"/>
      <url>/RookieRoom/2020/05/07/c-jin-jie-zhi-webapi/</url>
      
        <content type="html"><![CDATA[<p>REST是设计风格而不是标准。</p><p>webapi有自己的路由。</p><p>webservice和wcf的协议都是soap协议，数据的序列化和反序列化都是soap的格式。而webapi是Json的数据传递</p><p>webapi的优点有哪些？</p><p>(1)非常适合做http的请求，前端与webapi交互特别方便</p><p>(2)webapi更轻量因为使用的json数据来传递。</p><p>(3)webapi很多时候是给前端提供数据的，因为webapi跟控制器关联的没那么紧密（若是没webapi，用mvc的模式，那么页面直接从对应的控制器获取数据）,这样传递数据webapi对，手机，app，页面都可以通过同一个数据源提供数据，会比较灵活一些。（会跨域）</p> <span id="more"></span><p>（一）配置webapi，访问</p><p>第一步：新建项目后，找到Global.asax文件—-找到GlobalConfiguration.Configure(WebApiConfig.Register)方法——按F12进入 WebApiConfig.Register方法中—-添加内容红框框</p><p>知识点：路由器注册顺序是由上往下的，会先从上面进行匹配。</p><p>​        路由器的名称不能重名，否则报错【CustomApi&#x2F;DefaultApi】</p><p><img src="https://images2015.cnblogs.com/blog/821863/201706/821863-20170617152739837-1084041770.png" alt="img"></p><p>第二步：设置webapi项目为启动项，然后启动，在网页路径上加api&#x2F;values(控制器名称不要Controller)</p><p>知识点：因为ValuesController是项目自带的，那么这一次的请求与 DefaultApi的路由规格是一致的。</p><p>​       但显示的结果应该Values控制器中的get方法的，也就是应该是访问api&#x2F;values&#x2F;get。实际上api风格是不需要的get，rest也不需要get，会自动找到这个get的。若是把这个路径放到别的浏览器会直接得到json格式的数据</p><p><img src="https://images2015.cnblogs.com/blog/821863/201706/821863-20170617153657478-788057840.png" alt="img"></p><p><img src="https://images2015.cnblogs.com/blog/821863/201706/821863-20170617154501571-166773061.png" alt="img"></p><p>（2）如何去使用webapi？页面获取数据通过api提供，不通过控制器</p><p>知识点：1.ajax中的type有四种方式：get(查询),post(修改),delete(删除),put(插入) 。</p><p>​       2.写webapi时，在后台的方法最好将特性标记号对应上[HttpGet],[HttpPost],[HttpDelete],[HttpPut]。http请求和rest风格的api如果不想在后台方法写特性，但也可以将方法名以Get开头，否则会报错。</p><p>​            get:若是查询数据，通过get,其实get请求会将参数拼装到url上面，而url长度是有限的</p><p>​            post：若是对原有数据新增和修改就用post，多用post即可。post不是将参数放在url上面的，而是放在表单上的。</p><p>​       3.传递的参数username名一定要相同，但是大小写可以不一样。</p><p>​       4.若是user&#x3D;{name:”张苏纳”,id:123,age:’19’} 然后data：user那么在后台是接收不到的，即使在页面调试时是可以看到数据。若是想接收到的话，需要在后台写成GetUserModeuri([FormUri]Users user)。</p><p>​       5.基于第4的另一种方法。可以将user序列化转化为一个字符窜，然后后台接收后反序列化即可得到。data:{userString:JSON.stringify(user)}</p><p>​       6.(1)若是通过post请求的时候，是将数据放在from data里面的，若是传递单个参数，不要在ajax上不要写对应参数。</p><p>​        (2)只有不写id才能得到，与[formbody]无关。若是通过post传递实体，那么在后台可以直接拿到 ，不需要任何转化。</p><p>​        (3)当然也可以通过data：Json.stringify(user)    contentType:’application&#x2F;json’（contentType默认是json类型的）来在后台同样得到。</p><p>​        (4)若是参数包含了一个实体，还有一个字符串参数data:{“User”：user,”Info”:info}该怎么办，可以通过引用Newtonsoft.Json.Linq的JObject类型。jObject.ToObject是一个序列化方法，将josn转化为对象。</p><p>​       7.dynamic动态类型，比如一个实体和一个参数放到同一个对象中，获取对象后，然后dynamic json&#x3D;jData; var mm&#x3D; json.user,动态类型是可以直接访问属性的。</p><p>​       8.put和post是一样的使用，put主要是插入数据使用。</p><p>​       9.delete也是一样的。</p><p>​        10.webapi最方便的是给前端使用。</p><p> <img src="https://images2015.cnblogs.com/blog/821863/201706/821863-20170617161321462-1178568655.png" alt="img"></p><p> <img src="https://images2015.cnblogs.com/blog/821863/201706/821863-20170617165252071-524505328.png" alt="img"></p><p>get方式：单个参数，实体</p><p><img src="https://images2015.cnblogs.com/blog/821863/201706/821863-20170617161029728-774585746.png" alt="img"></p><p><img src="https://images2015.cnblogs.com/blog/821863/201706/821863-20170617162228306-1630842837.png" alt="img"></p><p><img src="https://images2015.cnblogs.com/blog/821863/201706/821863-20170617162914650-1420544379.png" alt="img"></p><p>post方式：第一种：单个参数</p><p> <img src="https://images2015.cnblogs.com/blog/821863/201706/821863-20170617164635275-1974752506.png" alt="img"></p><p><img src="https://images2015.cnblogs.com/blog/821863/201706/821863-20170617164701368-2140821931.png" alt="img"></p><p> 第二种：通过传实体或实体+参数</p><p><img src="https://images2015.cnblogs.com/blog/821863/201706/821863-20170617165407884-1272566532.png" alt="img"></p><p><img src="https://images2015.cnblogs.com/blog/821863/201706/821863-20170617170328259-405898848.png" alt="img"></p><p><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>以上都是前端的调用</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong>**********************</p><p><em><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>以下是后端的调用</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></em>**********************</p><p>1、后端调用也是通过模拟http请求，有两种方式：HttpClient(4.0才出现),HttpWebRequest(更灵活)</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//得到调用该方法就可以得到  HttpClient方式实现get请求</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="built_in">string</span> <span class="title">GetClient</span>()</span>&#123;<span class="built_in">string</span> url=<span class="string">&quot;http://localhost:9008/api/users/GetUserByName?username=superman&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> handler=<span class="keyword">new</span> HttpClientHandler();</span><br><span class="line"><span class="keyword">using</span>(<span class="keyword">var</span> http=<span class="keyword">new</span> HttpClient(handler))&#123;</span><br><span class="line">  <span class="keyword">var</span> response=http.GetAsync(url).Result;<span class="comment">//拿到异步结果</span></span><br><span class="line">  cw(response.StatusCode);<span class="comment">//确保http成功状态值</span></span><br><span class="line">  <span class="comment">//await异步读取最后的JSON(注意此时gzip已经被自动解压缩了，因为上面的AutomaticDecompression=DecompressionMethods.G)</span></span><br><span class="line">   <span class="keyword">return</span> response.Content.ReadAsStringAsync().Result;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//得到调用该方法就可以得到  HttpWebRequest方式 实现get请求</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="built_in">string</span> <span class="title">GetWebQuest</span>()</span>&#123;</span><br><span class="line"><span class="built_in">string</span> url=<span class="string">&quot;http://localhost:9008/api/users/GetUserByName?username=superman&quot;</span>;</span><br><span class="line"><span class="function">HttpWebRequest request</span></span><br><span class="line"><span class="function"><span class="title">using</span>(<span class="params"><span class="keyword">var</span> http=<span class="keyword">new</span> HttpClient(handler</span>))</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> response=http.GetAsync(url).Result;<span class="comment">//拿到异步结果</span></span><br><span class="line">  cw(response.StatusCode);<span class="comment">//确保http成功状态值</span></span><br><span class="line">  <span class="comment">//await异步读取最后的JSON(注意此时gzip已经被自动解压缩了，因为上 面的AutomaticDecompression=DecompressionMethods.G)</span></span><br><span class="line">   <span class="keyword">return</span> response.Content.ReadAsStringAsync().Result;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>转自：<a href="https://www.cnblogs.com/zoujinhua/p/12027802.html">https://www.cnblogs.com/zoujinhua/p/12027802.html<a></p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> mvc </tag>
            
            <tag> Webapi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#如何生成JSON字符串提交给接口（服务器）</title>
      <link href="/RookieRoom/2020/05/07/cru-he-sheng-cheng-json-zi-fu-chuan-ti-jiao-gei-jie-kou-fu-wu-qi/"/>
      <url>/RookieRoom/2020/05/07/cru-he-sheng-cheng-json-zi-fu-chuan-ti-jiao-gei-jie-kou-fu-wu-qi/</url>
      
        <content type="html"><![CDATA[<p>上一篇文章中我们写的C#生成JSON字符串，那么我们生成的字符串要干嘛呢？当然是将数据提交给服务器啦。一般用过接口来接受这个JSON。</p><p>这里我们会用到第一章中的一个 类。HttpUitls里面的Post方法。</p><p>非常简单：</p>  <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">Post</span>(<span class="params"><span class="built_in">string</span> Url, <span class="built_in">string</span> Data, <span class="built_in">string</span> Referer</span>)；</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"> <span class="comment">//参数说明：URL提交的接口地址</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"> <span class="comment">//Data：就是要提交的JSON字符串</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="comment">//Referer ：文件头 ，给个空字符串就可以。</span></span></span><br></pre></td></tr></table></figure><p>  OK，来到这里，C#操作JSON的日常使用就已经结束了，是不是非常简单！</p><p>  转自:<a herf="https://www.cnblogs.com/zoujinhua/p/10330084.html">https://www.cnblogs.com/zoujinhua/p/10330084.html<a></p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> Json </tag>
            
            <tag> winfrom </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#如何生成JSON字符串?（序列化对象）</title>
      <link href="/RookieRoom/2020/05/07/cru-he-sheng-cheng-json-zi-fu-chuan-xu-lie-hua-dui-xiang/"/>
      <url>/RookieRoom/2020/05/07/cru-he-sheng-cheng-json-zi-fu-chuan-xu-lie-hua-dui-xiang/</url>
      
        <content type="html"><![CDATA[<p>上一篇文章中我们讲解了序列号JSON数据，这篇文章我们来讲解一下反序列化JSON数据，也就是将实体类转化成JSON数据，其实也非常简单，说白了，就是将实体初始化。</p><p>一样，我们跟着前两篇的代码，在添加 一个按钮，在按钮事件里面写代码。先看效果吧。</p><p><img src="https://images2017.cnblogs.com/blog/932266/201709/932266-20170922210151790-449942228.gif" alt="img"></p> <span id="more"></span><p>接下俩是按钮事件</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> Newtonsoft.Json;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApplication1</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//我们的接口</span></span><br><span class="line">            <span class="built_in">string</span> url = <span class="string">&quot;http://www.kuaidi100.com/query?type=shunfeng&amp;postid=367847964498&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//将接口传入，这个HttpUitls的类，有兴趣可以研究下，也可以直接用就可以，不用管如何实现。</span></span><br><span class="line">            <span class="built_in">string</span> getJson = HttpUitls.Get(url);</span><br><span class="line"></span><br><span class="line">            MessageBox.Show(getJson);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button2_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//我们的接口</span></span><br><span class="line">            <span class="built_in">string</span> url = <span class="string">&quot;http://www.kuaidi100.com/query?type=shunfeng&amp;postid=367847964498&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//将接口传入，这个HttpUitls的类，有兴趣可以研究下，也可以直接用就可以，不用管如何实现。</span></span><br><span class="line">            <span class="built_in">string</span> getJson = HttpUitls.Get(url);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//这个需要引入Newtonsoft.Json这个DLL并using</span></span><br><span class="line">            <span class="comment">//传入我们的实体类还有需要解析的JSON字符串这样就OK了。然后就可以通过实体类使用数据了。</span></span><br><span class="line">            Root rt = JsonConvert.DeserializeObject&lt;Root&gt;(getJson);</span><br><span class="line">            <span class="comment">//这样就可以取出json数据里面的值</span></span><br><span class="line">            MessageBox.Show(<span class="string">&quot;com=&quot;</span> + rt.com + <span class="string">&quot;\r\n&quot;</span> + <span class="string">&quot;condition=&quot;</span> + rt.condition + <span class="string">&quot;\r\n&quot;</span> + <span class="string">&quot;ischeck=&quot;</span> + rt.ischeck + <span class="string">&quot;\r\n&quot;</span> + <span class="string">&quot;state=&quot;</span> + rt.state + <span class="string">&quot;\r\n&quot;</span> + <span class="string">&quot;status=&quot;</span> + rt.status);</span><br><span class="line">            <span class="comment">//由于这个JSON字符串的 public List&lt;DataItem&gt; data 是一个集合，所以我们需要遍历集合里面的所有数据</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; rt.data.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(<span class="string">&quot;Data=&quot;</span> + rt.data[i].context + <span class="string">&quot;\r\n&quot;</span> + rt.data[i].location + <span class="string">&quot;\r\n&quot;</span> + rt.data[i].time + <span class="string">&quot;\r\n&quot;</span> + rt.data[i].ftime);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button3_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//生成JSON字符串,其实就把我们刚刚写的实体实体赋值</span></span><br><span class="line">            Root rt = <span class="keyword">new</span> Root();</span><br><span class="line">            rt.com=<span class="string">&quot;这个是我赋值的com&quot;</span>;</span><br><span class="line">            rt.condition=<span class="string">&quot;这个是我赋值的condition&quot;</span>;</span><br><span class="line">            rt.ischeck=<span class="string">&quot;这个是我赋值的ischeck&quot;</span>;</span><br><span class="line">            rt.message=<span class="string">&quot;这个是我赋值的message&quot;</span>;</span><br><span class="line">            rt.state=<span class="string">&quot;这个是我赋值的satate&quot;</span>;</span><br><span class="line">            rt.status=<span class="string">&quot;这个是我赋值的statcs&quot;</span>;</span><br><span class="line">            List&lt;DataItem&gt; data  =<span class="keyword">new</span> List&lt;DataItem&gt;();</span><br><span class="line">            DataItem dt = <span class="keyword">new</span> DataItem();</span><br><span class="line">            dt.context=<span class="string">&quot;这个是我赋值的内容&quot;</span>;</span><br><span class="line">            dt.time=<span class="string">&quot;这个是我赋值的时间&quot;</span>;</span><br><span class="line">            dt.ftime=<span class="string">&quot;这个是我赋值的时间&quot;</span>;</span><br><span class="line">            data.Add(dt);</span><br><span class="line">            rt.data=data;</span><br><span class="line">            <span class="comment">//把我们初始化好的对象传入即可</span></span><br><span class="line">            <span class="built_in">string</span> json = JsonConvert.SerializeObject(rt);</span><br><span class="line">            MessageBox.Show(json);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>转自：<a href="https://www.cnblogs.com/zoujinhua/p/10330075.html">https://www.cnblogs.com/zoujinhua/p/10330075.html<a></p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> Json </tag>
            
            <tag> winfrom </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#如何解析JSON数据（反序列化对象）</title>
      <link href="/RookieRoom/2020/05/07/cru-he-jie-xi-json-shu-ju-fan-xu-lie-hua-dui-xiang/"/>
      <url>/RookieRoom/2020/05/07/cru-he-jie-xi-json-shu-ju-fan-xu-lie-hua-dui-xiang/</url>
      
        <content type="html"><![CDATA[<h3 id="在上一篇文章中，我们讲解了如何通过API接口获取返回的JSON字符串，那么，这篇文章我们来讲解拿到了返回的JSON字符串后，我们要如何取到里面我们需要的数据呢？这操作叫JSON的反序列化操作。接下里我们将一一解释。"><a href="#在上一篇文章中，我们讲解了如何通过API接口获取返回的JSON字符串，那么，这篇文章我们来讲解拿到了返回的JSON字符串后，我们要如何取到里面我们需要的数据呢？这操作叫JSON的反序列化操作。接下里我们将一一解释。" class="headerlink" title="在上一篇文章中，我们讲解了如何通过API接口获取返回的JSON字符串，那么，这篇文章我们来讲解拿到了返回的JSON字符串后，我们要如何取到里面我们需要的数据呢？这操作叫JSON的反序列化操作。接下里我们将一一解释。"></a>在上一篇文章中，我们讲解了如何通过API接口获取返回的JSON字符串，那么，这篇文章我们来讲解拿到了返回的JSON字符串后，我们要如何取到里面我们需要的数据呢？这操作叫JSON的反序列化操作。接下里我们将一一解释。</h3><p>先看效果：这个大家最喜欢。</p><p><img src="https://images2017.cnblogs.com/blog/932266/201709/932266-20170922194837571-1732646875.gif" alt="img"></p><span id="more"></span><p>我们先看一下上一篇文章中返回的字符串。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;message&quot;</span>:<span class="string">&quot;ok&quot;</span>,<span class="string">&quot;nu&quot;</span>:<span class="string">&quot;367847964498&quot;</span>,<span class="string">&quot;ischeck&quot;</span>:<span class="string">&quot;1&quot;</span>,<span class="string">&quot;condition&quot;</span>:<span class="string">&quot;F00&quot;</span>,<span class="string">&quot;com&quot;</span>:<span class="string">&quot;shunfeng&quot;</span>,<span class="string">&quot;status&quot;</span>:<span class="string">&quot;200&quot;</span>,<span class="string">&quot;state&quot;</span>:<span class="string">&quot;3&quot;</span>,<span class="string">&quot;data&quot;</span>:[&#123;<span class="string">&quot;time&quot;</span>:<span class="string">&quot;2017-09-21 09:33:09&quot;</span>,<span class="string">&quot;ftime&quot;</span>:<span class="string">&quot;2017-09-21 09:33:09&quot;</span>,<span class="string">&quot;context&quot;</span>:<span class="string">&quot;已签收,感谢使用顺丰,期待再次为您服务&quot;</span>,<span class="string">&quot;location&quot;</span>:<span class="string">&quot;&quot;</span>&#125;,&#123;<span class="string">&quot;time&quot;</span>:<span class="string">&quot;2017-09-21 09:09:48&quot;</span>,<span class="string">&quot;ftime&quot;</span>:<span class="string">&quot;2017-09-21 09:09:48&quot;</span>,<span class="string">&quot;context&quot;</span>:<span class="string">&quot;快件交给巩向涛，正在派送途中（联系电话：18806439871）&quot;</span>,<span class="string">&quot;location&quot;</span>:<span class="string">&quot;&quot;</span>&#125;,&#123;<span class="string">&quot;time&quot;</span>:<span class="string">&quot;2017-09-21 07:02:41&quot;</span>,<span class="string">&quot;ftime&quot;</span>:<span class="string">&quot;2017-09-21 07:02:41&quot;</span>,<span class="string">&quot;context&quot;</span>:<span class="string">&quot;快件到达 【淄博市桓台田庄速运营业点 】&quot;</span>,<span class="string">&quot;location&quot;</span>:<span class="string">&quot;&quot;</span>&#125;,&#123;<span class="string">&quot;time&quot;</span>:<span class="string">&quot;2017-09-20 15:32:00&quot;</span>,<span class="string">&quot;ftime&quot;</span>:<span class="string">&quot;2017-09-20 15:32:00&quot;</span>,<span class="string">&quot;context&quot;</span>:<span class="string">&quot;快件在【淄博市桓台县工业街营业点】已装车，准备发往下一站&quot;</span>,<span class="string">&quot;location&quot;</span>:<span class="string">&quot;&quot;</span>&#125;,&#123;<span class="string">&quot;time&quot;</span>:<span class="string">&quot;2017-09-20 13:37:08&quot;</span>,<span class="string">&quot;ftime&quot;</span>:<span class="string">&quot;2017-09-20 13:37:08&quot;</span>,<span class="string">&quot;context&quot;</span>:<span class="string">&quot;快件到达 【淄博市桓台县工业街营业点】&quot;</span>,<span class="string">&quot;location&quot;</span>:<span class="string">&quot;&quot;</span>&#125;,&#123;<span class="string">&quot;time&quot;</span>:<span class="string">&quot;2017-09-20 10:47:07&quot;</span>,<span class="string">&quot;ftime&quot;</span>:<span class="string">&quot;2017-09-20 10:47:07&quot;</span>,<span class="string">&quot;context&quot;</span>:<span class="string">&quot;快件在【淄博高新集散中心】已装车，准备发往下一站&quot;</span>,<span class="string">&quot;location&quot;</span>:<span class="string">&quot;&quot;</span>&#125;,&#123;<span class="string">&quot;time&quot;</span>:<span class="string">&quot;2017-09-20 10:15:47&quot;</span>,<span class="string">&quot;ftime&quot;</span>:<span class="string">&quot;2017-09-20 10:15:47&quot;</span>,<span class="string">&quot;context&quot;</span>:<span class="string">&quot;快件到达 【淄博高新集散中心】&quot;</span>,<span class="string">&quot;location&quot;</span>:<span class="string">&quot;&quot;</span>&#125;,&#123;<span class="string">&quot;time&quot;</span>:<span class="string">&quot;2017-09-19 23:20:18&quot;</span>,<span class="string">&quot;ftime&quot;</span>:<span class="string">&quot;2017-09-19 23:20:18&quot;</span>,<span class="string">&quot;context&quot;</span>:<span class="string">&quot;快件在【深圳总集散中心】已装车，准备发往下一站&quot;</span>,<span class="string">&quot;location&quot;</span>:<span class="string">&quot;&quot;</span>&#125;,&#123;<span class="string">&quot;time&quot;</span>:<span class="string">&quot;2017-09-19 22:39:27&quot;</span>,<span class="string">&quot;ftime&quot;</span>:<span class="string">&quot;2017-09-19 22:39:27&quot;</span>,<span class="string">&quot;context&quot;</span>:<span class="string">&quot;快件到达 【深圳总集散中心】&quot;</span>,<span class="string">&quot;location&quot;</span>:<span class="string">&quot;&quot;</span>&#125;,&#123;<span class="string">&quot;time&quot;</span>:<span class="string">&quot;2017-09-19 18:57:33&quot;</span>,<span class="string">&quot;ftime&quot;</span>:<span class="string">&quot;2017-09-19 18:57:33&quot;</span>,<span class="string">&quot;context&quot;</span>:<span class="string">&quot;快件在【深圳龙华新区华联社区营业部】已装车，准备发往下一站&quot;</span>,<span class="string">&quot;location&quot;</span>:<span class="string">&quot;&quot;</span>&#125;,&#123;<span class="string">&quot;time&quot;</span>:<span class="string">&quot;2017-09-19 16:12:21&quot;</span>,<span class="string">&quot;ftime&quot;</span>:<span class="string">&quot;2017-09-19 16:12:21&quot;</span>,<span class="string">&quot;context&quot;</span>:<span class="string">&quot;顺丰速运 已收取快件&quot;</span>,<span class="string">&quot;location&quot;</span>:<span class="string">&quot;&quot;</span>&#125;]&#125;</span><br></pre></td></tr></table></figure><p>上面是我们在上一篇文章中请求返回来的JSON字符串，那么我们现在要解析他。第一步就是要根据这个JSON来写出对应的实体类。用来存放数据。这个实体类如何写的？其实非常简单。因为一般</p><p>不需要手动自己写，当然，你要是喜欢也可以自己写。不过我一般使用网站直接转换。自己百度 查一下，JSON转C#实体类，就会有很多网站给你转。</p><p>我使用的是这个网站：<a href="http://www.bejson.com/convert/json2csharp/">http://www.bejson.com/convert/json2csharp/</a></p><p>使用很简单，把JSON放进去，点击生成就可以自动生成一个实体类。其实是两个类，不过一般我们写在一个文件里。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApplication1</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> JSON数据的实体类</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Root</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> message &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> nu &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> ischeck &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> condition &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> com &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> status &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> state &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> List&lt;DataItem&gt; data &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DataItem</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> time &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> ftime &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 已签收,感谢使用顺丰,期待再次为您服务</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> context &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> location &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实体类创建好后，我们还需要一个DLL文件，Newtonsoft.Json.DLL,这个文件哪里来呢？很简单，百度一下不就来了。。。。这个DLL的官方网站是：<a href="https://www.newtonsoft.com/json">https://www.newtonsoft.com/json</a></p><p>下载下来后，引入，引用（这两个步骤就不需要我教了吧<del>不懂就百度</del>）</p><p>做完这准备工作后，就进入大家最喜欢的写代码环节了。非常简单，一句代码搞定。自己看吧！</p><p>PS，我们接着使用上一篇文章用到的项目，添加一个按钮，在按钮里面写事件。代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> Newtonsoft.Json;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApplication1</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//我们的接口</span></span><br><span class="line">            <span class="built_in">string</span> url = <span class="string">&quot;http://www.kuaidi100.com/query?type=shunfeng&amp;postid=367847964498&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//将接口传入，这个HttpUitls的类，有兴趣可以研究下，也可以直接用就可以，不用管如何实现。</span></span><br><span class="line">            <span class="built_in">string</span> getJson = HttpUitls.Get(url);</span><br><span class="line"></span><br><span class="line">            MessageBox.Show(getJson);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button2_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//我们的接口</span></span><br><span class="line">            <span class="built_in">string</span> url = <span class="string">&quot;http://www.kuaidi100.com/query?type=shunfeng&amp;postid=367847964498&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//将接口传入，这个HttpUitls的类，有兴趣可以研究下，也可以直接用就可以，不用管如何实现。</span></span><br><span class="line">            <span class="built_in">string</span> getJson = HttpUitls.Get(url);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//这个需要引入Newtonsoft.Json这个DLL并using</span></span><br><span class="line">            <span class="comment">//传入我们的实体类还有需要解析的JSON字符串这样就OK了。然后就可以通过实体类使用数据了。</span></span><br><span class="line">            Root rt = JsonConvert.DeserializeObject&lt;Root&gt;(getJson);</span><br><span class="line">            <span class="comment">//这样就可以取出json数据里面的值</span></span><br><span class="line">            MessageBox.Show(<span class="string">&quot;com=&quot;</span> + rt.com + <span class="string">&quot;\r\n&quot;</span> + <span class="string">&quot;condition=&quot;</span> + rt.condition + <span class="string">&quot;\r\n&quot;</span> + <span class="string">&quot;ischeck=&quot;</span> + rt.ischeck + <span class="string">&quot;\r\n&quot;</span> + <span class="string">&quot;state=&quot;</span> + rt.state + <span class="string">&quot;\r\n&quot;</span> + <span class="string">&quot;status=&quot;</span> + rt.status);</span><br><span class="line">            <span class="comment">//由于这个JSON字符串的 public List&lt;DataItem&gt; data 是一个集合，所以我们需要遍历集合里面的所有数据</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; rt.data.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(<span class="string">&quot;Data=&quot;</span> + rt.data[i].context + <span class="string">&quot;\r\n&quot;</span> + rt.data[i].location + <span class="string">&quot;\r\n&quot;</span> + rt.data[i].time + <span class="string">&quot;\r\n&quot;</span> + rt.data[i].ftime);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 转自：<a href="https://www.cnblogs.com/zoujinhua/p/10330066.html">https://www.cnblogs.com/zoujinhua/p/10330066.html<a></p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> Json </tag>
            
            <tag> winfrom </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#如何拿到从http上返回JSON数据?</title>
      <link href="/RookieRoom/2020/05/07/cru-he-na-dao-cong-http-shang-fan-hui-json-shu-ju/"/>
      <url>/RookieRoom/2020/05/07/cru-he-na-dao-cong-http-shang-fan-hui-json-shu-ju/</url>
      
        <content type="html"><![CDATA[<p>在实际开发中，我们经常会使用到API，所谓API一般就是一个地址，我们称之为接口。然后我们通过用C#对这地址发送请求，请求后，服务器就会给我们返回数据，一般是XML或者JSON，这里我们主要讲述的是JSON。</p><p>为了演示，我们这里准备了一个接口，这是一个查询物流的接口。（读者读到这篇文章的时候，接口可能有效，也可能失效，因为接口是网上找的，不是笔者自己写的，但是原理是一样的。）</p><span id="more"></span><p>接口：  <a href="http://www.kuaidi100.com/query?type=%E5%BF%AB%E9%80%92%E5%85%AC%E5%8F%B8%E7%BC%96%E7%A0%81&amp;postid=%E7%89%A9%E6%B5%81%E5%8D%95%E5%8F%B7">http://www.kuaidi100.com/query?type=快递公司编码&amp;postid=物流单号</a></p><p>（ps:快递公司编码:申通&#x3D;”shentong” EMS&#x3D;”ems” 顺丰&#x3D;”shunfeng” 圆通&#x3D;”yuantong” 中通&#x3D;”zhongtong” 韵达&#x3D;”yunda” 天天&#x3D;”tiantian” 汇通&#x3D;”huitongkuaidi” 全峰&#x3D;”quanfengkuaidi” 德邦&#x3D;”debangwuliu” 宅急送&#x3D;”zhaijisong”）</p><p>一般我们拿到接口后，需要拼接成我们需要的地址。比如，我们现在需要查询顺丰物流的367847964498单的结果。那么，我们就需要拼接这个接口，拼接结果如下：</p><p><a href="http://www.kuaidi100.com/query?type=shunfeng&amp;postid=367847964498">http://www.kuaidi100.com/query?type=shunfeng&amp;postid=367847964498</a></p><p>我们拼接好后，可以直接在浏览器上访问这个地址，看看是不是可以正常访问。如果可以正常访问，说明我们这个接口没有问题。那么，我们现在先在浏览器访问一下。看到下面返回的结果就说明正确。</p><p><img src="https://images2017.cnblogs.com/blog/932266/201709/932266-20170919211046321-401476699.png" alt="img"></p><p>接下来就是大家最喜欢的写代码环节，为了方便演示，我们这里用winform程序。非常简单，我们新建一个窗体程序，点击后，弹出JSON数据即可。界面如下：</p><p><img src="https://images2017.cnblogs.com/blog/932266/201709/932266-20170919212402071-762015113.png" alt="img"></p><p>建好窗体，放一个按钮，然后我们来创建一个类HttpUitls。这个是这个文章中最重要的。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Net;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApplication1</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">HttpUitls</span></span><br><span class="line">    &#123;</span><br><span class="line">         <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">Get</span>(<span class="params"><span class="built_in">string</span> Url</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//System.GC.Collect();</span></span><br><span class="line">            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(Url);</span><br><span class="line">            request.Proxy = <span class="literal">null</span>;</span><br><span class="line">            request.KeepAlive = <span class="literal">false</span>;</span><br><span class="line">            request.Method = <span class="string">&quot;GET&quot;</span>;</span><br><span class="line">            request.ContentType = <span class="string">&quot;application/json; charset=UTF-8&quot;</span>;</span><br><span class="line">            request.AutomaticDecompression = DecompressionMethods.GZip;</span><br><span class="line"></span><br><span class="line">            HttpWebResponse response = (HttpWebResponse)request.GetResponse();</span><br><span class="line">            Stream myResponseStream = response.GetResponseStream();</span><br><span class="line">            StreamReader myStreamReader = <span class="keyword">new</span> StreamReader(myResponseStream, Encoding.UTF8);</span><br><span class="line">            <span class="built_in">string</span> retString = myStreamReader.ReadToEnd();</span><br><span class="line"></span><br><span class="line">            myStreamReader.Close();</span><br><span class="line">            myResponseStream.Close();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (response != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                response.Close();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (request != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                request.Abort();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> retString;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">Post</span>(<span class="params"><span class="built_in">string</span> Url, <span class="built_in">string</span> Data, <span class="built_in">string</span> Referer</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(Url);</span><br><span class="line">            request.Method = <span class="string">&quot;POST&quot;</span>;</span><br><span class="line">            request.Referer = Referer;</span><br><span class="line">            <span class="built_in">byte</span>[] bytes = Encoding.UTF8.GetBytes(Data);</span><br><span class="line">            request.ContentType = <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>;</span><br><span class="line">            request.ContentLength = bytes.Length;</span><br><span class="line">            Stream myResponseStream = request.GetRequestStream();</span><br><span class="line">            myResponseStream.Write(bytes, <span class="number">0</span>, bytes.Length);</span><br><span class="line"></span><br><span class="line">            HttpWebResponse response = (HttpWebResponse)request.GetResponse();</span><br><span class="line">            StreamReader myStreamReader = <span class="keyword">new</span> StreamReader(response.GetResponseStream(), Encoding.UTF8);</span><br><span class="line">            <span class="built_in">string</span> retString = myStreamReader.ReadToEnd();</span><br><span class="line"></span><br><span class="line">            myStreamReader.Close();</span><br><span class="line">            myResponseStream.Close();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (response != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                response.Close();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (request != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                request.Abort();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> retString;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个类有两个方法，一个是Get，一个是Post，本篇文章我们只需要用到Get就可以了。</p><p>然后是点击按钮的方法</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApplication1</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//我们的接口</span></span><br><span class="line">            <span class="built_in">string</span> url = <span class="string">&quot;http://www.kuaidi100.com/query?type=shunfeng&amp;postid=367847964498&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//将接口传入，这个HttpUitls的类，有兴趣可以研究下，也可以直接用就可以，不用管如何实现。</span></span><br><span class="line">            <span class="built_in">string</span> getJson = HttpUitls.Get(url);</span><br><span class="line"></span><br><span class="line">            MessageBox.Show(getJson);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 然后是运行结果</p><p><img src="https://images2017.cnblogs.com/blog/932266/201709/932266-20170919213026056-574902576.png" alt="img"></p><p>到这一步说明我们已经成功拿到接口给我们返回的JSON数据了。那么我们会在下一篇文章中讲解如何使用这JSON数据，也就是解析JSON</p><p>转自：<a herf="https://www.cnblogs.com/zoujinhua/p/10330037.html">https://www.cnblogs.com/zoujinhua/p/10330037.html<a></p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> Json </tag>
            
            <tag> winfrom </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C# winform写入和读取TXT文件</title>
      <link href="/RookieRoom/2020/05/07/c-winform-xie-ru-he-du-qu-txt-wen-jian/"/>
      <url>/RookieRoom/2020/05/07/c-winform-xie-ru-he-du-qu-txt-wen-jian/</url>
      
        <content type="html"><![CDATA[<p>C# winform写入和读取TXT文件</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> str;</span><br><span class="line">            str=<span class="keyword">this</span>.textBox1.Text;</span><br><span class="line">            StreamWriter sw = <span class="keyword">new</span> StreamWriter(Application.StartupPath +<span class="string">&quot;\\txtwriter.txt&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">            sw.WriteLine(str);</span><br><span class="line">            sw.Close();<span class="comment">//写入</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> str;</span><br><span class="line">StreamReader sr = <span class="keyword">new</span> StreamReader(Application.StartupPath +<span class="string">&quot;\\txtreader.txt&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">            str = sr.ReadLine().ToString();</span><br><span class="line">            sr.Close();</span><br><span class="line">            <span class="keyword">this</span>.textBox1.Text = str;<span class="comment"><span class="doctag">///</span>读取</span></span><br></pre></td></tr></table></figure><p>转自：<a herf="https://blog.csdn.net/lzid2008/article/details/53672244">https://blog.csdn.net/lzid2008/article/details/53672244<a></p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> winfrom </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于C# Winform的简易聊天程序[第三篇-信息群发]</title>
      <link href="/RookieRoom/2020/05/07/ji-yu-c-winform-de-jian-yi-liao-tian-cheng-xu-di-san-pian-xin-xi-qun-fa/"/>
      <url>/RookieRoom/2020/05/07/ji-yu-c-winform-de-jian-yi-liao-tian-cheng-xu-di-san-pian-xin-xi-qun-fa/</url>
      
        <content type="html"><![CDATA[<p><strong>程序简介</strong></p><p>好久没写博客了,最近时间比较充足.于是便打算把之前的聊天程序功能改进下,增加了一个服务端给客户端群发信息的功能.</p> <span id="more"></span><p><strong>原理</strong></p><p>首先我们需要获取连接客户端的IP和Port,并添加到客户端列表里作为每个客户端的唯一标识.然后通过相应客户端的Socket.Send()方法将信息发送出去.</p><p>服务端给客户端的信息群发与服务端给单个客户端的信息发送原理是一样的,通过遍历客户端列表里的所有客户端标识,然后把信息一个个发送出去.</p><p><strong>界面设计 - 客户端</strong></p><p><img src="https://images.cnblogs.com/cnblogs_com/longwu/201207/201207020854592570.png" alt="Client-UI"></p><p><strong>界面设计 - 服务端</strong></p><p><img src="https://images.cnblogs.com/cnblogs_com/longwu/201207/201207020855024191.png" alt="Server-UI"></p><p><strong>代码实施 - 客户端</strong></p><p>客户端没有做什么功能改进,这里就不贴代码了,需要看的学友可以到随笔后面下载源代码.</p><p><strong>代码实施 - 服务端</strong></p><p>这里将手动输入服务端IPv4地址改为了程序自动获取</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 获取本地IPv4地址</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>本地IPv4地址<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> IPAddress <span class="title">GetLocalIPv4Address</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    IPAddress localIPv4 = <span class="literal">null</span>;</span><br><span class="line">    <span class="comment">//获取本机所有的IP地址列表</span></span><br><span class="line">    IPAddress[] ipAddressList = Dns.GetHostAddresses(Dns.GetHostName());</span><br><span class="line">    <span class="keyword">foreach</span> (IPAddress ipAddress <span class="keyword">in</span> ipAddressList)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//判断是否是IPv4地址</span></span><br><span class="line">        <span class="keyword">if</span> (ipAddress.AddressFamily == AddressFamily.InterNetwork) <span class="comment">//AddressFamily.InterNetwork表示IPv4 </span></span><br><span class="line">        &#123;</span><br><span class="line">            localIPv4 = ipAddress;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> localIPv4;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为了方便后期给所有访问的客户端群发信息,我们需要用过通过监听客户端来获取所有访问客户端的IP地址和端口号,并组成每个访问客户端的唯一标识clientName 用于显示在客户端列表上;客户端唯一标识还有个作用就是服务端可以选择性的给单独某个客户端发送信息.</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用于保存所有通信客户端的Socket</span></span><br><span class="line">Dictionary&lt;<span class="built_in">string</span>, Socket&gt; dicSocket = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">string</span>, Socket&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建与客户端建立连接的套接字</span></span><br><span class="line">Socket socConnection = <span class="literal">null</span>;</span><br><span class="line"><span class="built_in">string</span> clientName = <span class="literal">null</span>; <span class="comment">//创建访问客户端的名字</span></span><br><span class="line">IPAddress clientIP; <span class="comment">//访问客户端的IP</span></span><br><span class="line"><span class="built_in">int</span> clientPort; <span class="comment">//访问客户端的端口号</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 持续不断监听客户端发来的请求, 用于不断获取客户端发送过来的连续数据信息</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">WatchConnecting</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            socConnection = socketWatch.Accept();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">        &#123;</span><br><span class="line">            txtMsg.AppendText(ex.Message); <span class="comment">//提示套接字监听异常</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获取访问客户端的IP</span></span><br><span class="line">        clientIP = (socConnection.RemoteEndPoint <span class="keyword">as</span> IPEndPoint).Address;</span><br><span class="line">        <span class="comment">//获取访问客户端的Port</span></span><br><span class="line">        clientPort = (socConnection.RemoteEndPoint <span class="keyword">as</span> IPEndPoint).Port;</span><br><span class="line">        <span class="comment">//创建访问客户端的唯一标识 由IP和端口号组成 </span></span><br><span class="line">        clientName = <span class="string">&quot;IP: &quot;</span> + clientIP +<span class="string">&quot; Port: &quot;</span>+ clientPort;</span><br><span class="line">        lstClients.Items.Add(clientName); <span class="comment">//在客户端列表添加该访问客户端的唯一标识</span></span><br><span class="line">        dicSocket.Add(clientName, socConnection); <span class="comment">//将客户端名字和套接字添加到添加到数据字典中</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建通信线程 </span></span><br><span class="line">        ParameterizedThreadStart pts = <span class="keyword">new</span> ParameterizedThreadStart(ServerRecMsg);</span><br><span class="line">        Thread thread = <span class="keyword">new</span> Thread(pts);</span><br><span class="line">        thread.IsBackground = <span class="literal">true</span>;</span><br><span class="line">        <span class="comment">//启动线程</span></span><br><span class="line">        thread.Start(socConnection);</span><br><span class="line">        txtMsg.AppendText(<span class="string">&quot;IP: &quot;</span> + clientIP + <span class="string">&quot; Port: &quot;</span> + clientPort + <span class="string">&quot; 的客户端与您连接成功,现在你们可以开始通信了...\r\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>服务端向客户端发送信息,在没有选择具体某个客户端的情况下,默认群发. 如果选择了具体某个客户端,则单独向该客户端发送信息.</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 发送信息到客户端的方法</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;sendMsg&quot;&gt;</span>发送的字符串信息<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ServerSendMsg</span>(<span class="params"><span class="built_in">string</span> sendMsg</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    sendMsg = txtSendMsg.Text.Trim();</span><br><span class="line">    <span class="comment">//将输入的字符串转换成 机器可以识别的字节数组</span></span><br><span class="line">    <span class="built_in">byte</span>[] arrSendMsg = Encoding.UTF8.GetBytes(sendMsg);</span><br><span class="line">    <span class="comment">//向客户端列表选中的客户端发送信息</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">string</span>.IsNullOrEmpty(lstClients.Text.Trim())) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//获得相应的套接字 并将字节数组信息发送出去</span></span><br><span class="line">        dicSocket[lstClients.Text.Trim()].Send(arrSendMsg);</span><br><span class="line">        <span class="comment">//通过Socket的send方法将字节数组发送出去</span></span><br><span class="line">        txtMsg.AppendText(<span class="string">&quot;您在 &quot;</span> + GetCurrentTime() + <span class="string">&quot; 向 IP: &quot;</span> + clientIP + <span class="string">&quot; Port: &quot;</span> + clientPort + <span class="string">&quot; 的客户端发送了:\r\n&quot;</span> + sendMsg + <span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="comment">//如果未选择任何客户端 则默认为群发信息</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//遍历所有的客户端</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; lstClients.Items.Count; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            dicSocket[lstClients.Items[i].ToString()].Send(arrSendMsg);</span><br><span class="line">        &#125;</span><br><span class="line">        txtMsg.AppendText(<span class="string">&quot;您在 &quot;</span> + GetCurrentTime() + <span class="string">&quot; 群发了信息:\r\n&quot;</span> + sendMsg + <span class="string">&quot; \r\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>运行程序</strong></p><p>1.首先启动服务端并连接各个客户端 </p><p><strong><img src="https://images.cnblogs.com/cnblogs_com/longwu/201207/201207021819362511.png" alt="1-server"></strong></p><p><img src="https://images.cnblogs.com/cnblogs_com/longwu/201207/201207021819406226.png" alt="1-client1"></p><p><img src="https://images.cnblogs.com/cnblogs_com/longwu/201207/201207020921051910.png" alt="1-client2"></p><p>2.服务端向所有客户端群发信息</p><p><img src="https://images.cnblogs.com/cnblogs_com/longwu/201207/201207020921099529.png" alt="2-server"></p><p><img src="https://images.cnblogs.com/cnblogs_com/longwu/201207/201207021819449177.png" alt="2-client1"></p><p><img src="https://images.cnblogs.com/cnblogs_com/longwu/201207/201207021819485650.png" alt="2-client2"></p><p>3.向指定的客户端发送信息</p><p><img src="https://images.cnblogs.com/cnblogs_com/longwu/201207/201207021819532298.png" alt="3server"></p><p><img src="https://images.cnblogs.com/cnblogs_com/longwu/201207/201207021819577201.png" alt="3-client2"></p><p>这样,服务端向客户端群发信息的功能就做好了.如果大家感兴趣,可以结合第2篇-文件发送 来做个服务端向客户端群发文件的功能 :)</p><p><strong>附上源代码</strong></p><p>服务端<a href="http://files.cnblogs.com/longwu/ChatServer3.zip">ChatServer3.zip</a> 客户端 <a href="http://files.cnblogs.com/longwu/ChatClient3.zip">ChatClient3.zip</a></p><p>转自：<a herf=" https://www.cnblogs.com/longwu/archive/2012/07/02/2572648.html">https://www.cnblogs.com/longwu/archive/2012/07/02/2572648.html<a></p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> winfrom </tag>
            
            <tag> socket </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于C# Winform的简易聊天程序[第二篇-文件发送]</title>
      <link href="/RookieRoom/2020/05/07/ji-yu-c-winform-de-jian-yi-liao-tian-cheng-xu-di-er-pian-wen-jian-fa-song/"/>
      <url>/RookieRoom/2020/05/07/ji-yu-c-winform-de-jian-yi-liao-tian-cheng-xu-di-er-pian-wen-jian-fa-song/</url>
      
        <content type="html"><![CDATA[<p><strong>程序简介</strong></p><p>基于网友的提议,最近有点时间,便打算给之前的聊天程序增加一个功能-文件发送.</p> <span id="more"></span><p><strong>原理</strong></p><p>文件发送跟字符串信息发送的原理其实是一样的,都是通过将需要发送的数据转换成计算机可以识别的字节数组来发送.当然,计算机本身并不知道你发送的是字符串信息还是文件,所以我们首先需要告诉计算机哪个发送的是文件,哪个是字符串信息;这里分别给它们的字节数组附加了一个类型标识符:字符串信息的字节数组标识符为0,文件的字节数组标识符为1.当一端将文件发送过去后,另一端则首先判断发送过来的类型标识符(1或者0),然后再调用相应的方法将获取的字节数组转换成人可以看懂的字符串信息或文件.</p><p><strong>界面设计 - 客户端</strong></p><p>这里新增了3个控件,用于实现文件发送功能.</p><p>Textbox: 文件名name: txtFileName</p><p>Button: 选择文件name: btnSelectFile 发送文件name: btnSendFile</p><p><a href="http://images.cnblogs.com/cnblogs_com/longwu/201203/201203260108136013.png"><img src="https://images.cnblogs.com/cnblogs_com/longwu/201203/201203260108166239.png" alt="01-界面设计"></a></p><p><strong>代码实施 - 客户端</strong></p><p>首先,我们需要写一个选择发送文件的方法,这里使用了最常见OpenFileDialog方法,用于选取需要发送的文件.</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> filePath = <span class="literal">null</span>;   <span class="comment">//文件的全路径</span></span><br><span class="line"><span class="built_in">string</span> fileName = <span class="literal">null</span>;   <span class="comment">//文件名称(不包含路径) </span></span><br><span class="line"><span class="comment">//选择要发送的文件</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnSelectFile_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    OpenFileDialog ofDialog = <span class="keyword">new</span> OpenFileDialog();</span><br><span class="line">    <span class="keyword">if</span> (ofDialog.ShowDialog(<span class="keyword">this</span>) == DialogResult.OK)</span><br><span class="line">    &#123;</span><br><span class="line">        fileName = ofDialog.SafeFileName; <span class="comment">//获取选取文件的文件名</span></span><br><span class="line">        txtFileName.Text = fileName;      <span class="comment">//将文件名显示在文本框上 </span></span><br><span class="line">        filePath = ofDialog.FileName;     <span class="comment">//获取包含文件名的全路径</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>选取文件之后,我们先发送文件的名称和长度, 然后再发送文件.</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 发送文件的方法</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;fileFullPath&quot;&gt;</span>文件全路径(包含文件名称)<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">SendFile</span>(<span class="params"><span class="built_in">string</span> fileFullPath</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">string</span>.IsNullOrEmpty(fileFullPath))</span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(<span class="string">@&quot;请选择需要发送的文件!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//发送文件之前 将文件名字和长度发送过去</span></span><br><span class="line">    <span class="built_in">long</span> fileLength = <span class="keyword">new</span> FileInfo(fileFullPath).Length;</span><br><span class="line">    <span class="built_in">string</span> totalMsg = <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0&#125;-&#123;1&#125;&quot;</span>, fileName, fileLength);</span><br><span class="line">    ClientSendMsg(totalMsg, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//发送文件</span></span><br><span class="line">    <span class="built_in">byte</span>[] buffer = <span class="keyword">new</span> <span class="built_in">byte</span>[SendBufferSize];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">using</span> (FileStream fs = <span class="keyword">new</span> FileStream(fileFullPath, FileMode.Open, FileAccess.Read))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> readLength = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">bool</span> firstRead = <span class="literal">true</span>;</span><br><span class="line">        <span class="built_in">long</span> sentFileLength = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> ((readLength = fs.Read(buffer, <span class="number">0</span>, buffer.Length)) &gt; <span class="number">0</span> &amp;&amp; sentFileLength &lt; fileLength)</span><br><span class="line">        &#123;</span><br><span class="line">            sentFileLength += readLength;</span><br><span class="line">            <span class="comment">//在第一次发送的字节流上加个前缀1</span></span><br><span class="line">            <span class="keyword">if</span> (firstRead)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">byte</span>[] firstBuffer = <span class="keyword">new</span> <span class="built_in">byte</span>[readLength + <span class="number">1</span>];</span><br><span class="line">                firstBuffer[<span class="number">0</span>] = <span class="number">1</span>; <span class="comment">//告诉机器该发送的字节数组为文件</span></span><br><span class="line">                Buffer.BlockCopy(buffer, <span class="number">0</span>, firstBuffer, <span class="number">1</span>, readLength);</span><br><span class="line"></span><br><span class="line">                socketClient.Send(firstBuffer, <span class="number">0</span>, readLength + <span class="number">1</span>, SocketFlags.None);</span><br><span class="line"></span><br><span class="line">                firstRead = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//之后发送的均为直接读取的字节流</span></span><br><span class="line">            socketClient.Send(buffer, <span class="number">0</span>, readLength, SocketFlags.None);</span><br><span class="line">        &#125;</span><br><span class="line">        fs.Close();</span><br><span class="line">    &#125;</span><br><span class="line">    txtMsg.AppendText(<span class="string">&quot;SoFlash:&quot;</span> + GetCurrentTime() + <span class="string">&quot;\r\n您发送了文件:&quot;</span> + fileName + <span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>代码实施 - 服务端</strong></p><p>服务端接受字符串信息,文件名称和长度以及文件</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> strSRecMsg = <span class="literal">null</span>;</span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 接收客户端发来的信息</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ServerRecMsg</span>(<span class="params"><span class="built_in">object</span> socketClientPara</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    Socket socketServer = socketClientPara <span class="keyword">as</span> Socket;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">long</span> fileLength = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> firstReceived = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">byte</span>[] buffer = <span class="keyword">new</span> <span class="built_in">byte</span>[ReceiveBufferSize];</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//获取接收的数据,并存入内存缓冲区  返回一个字节数组的长度</span></span><br><span class="line">            <span class="keyword">if</span> (socketServer != <span class="literal">null</span>) firstReceived = socketServer.Receive(buffer);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (firstReceived &gt; <span class="number">0</span>) <span class="comment">//接受到的长度大于0 说明有信息或文件传来</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (buffer[<span class="number">0</span>] == <span class="number">0</span>) <span class="comment">//0为文字信息</span></span><br><span class="line">                &#123;</span><br><span class="line">                    strSRecMsg = Encoding.UTF8.GetString(buffer, <span class="number">1</span>, firstReceived - <span class="number">1</span>);<span class="comment">//真实有用的文本信息要比接收到的少1(标识符)</span></span><br><span class="line">                    txtMsg.AppendText(<span class="string">&quot;SoFlash:&quot;</span> + GetCurrentTime() + <span class="string">&quot;\r\n&quot;</span> + strSRecMsg + <span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (buffer[<span class="number">0</span>] == <span class="number">2</span>)<span class="comment">//2为文件名字和长度</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">string</span> fileNameWithLength = Encoding.UTF8.GetString(buffer, <span class="number">1</span>, firstReceived - <span class="number">1</span>);</span><br><span class="line">                    strSRecMsg = fileNameWithLength.Split(<span class="string">&#x27;-&#x27;</span>).First(); <span class="comment">//文件名</span></span><br><span class="line">                    fileLength = Convert.ToInt64(fileNameWithLength.Split(<span class="string">&#x27;-&#x27;</span>).Last());<span class="comment">//文件长度</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (buffer[<span class="number">0</span>] == <span class="number">1</span>)<span class="comment">//1为文件</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">string</span> fileNameSuffix = strSRecMsg.Substring(strSRecMsg.LastIndexOf(<span class="string">&#x27;.&#x27;</span>)); <span class="comment">//文件后缀</span></span><br><span class="line">                    SaveFileDialog sfDialog = <span class="keyword">new</span> SaveFileDialog()</span><br><span class="line">                    &#123;</span><br><span class="line">                        Filter = <span class="string">&quot;(*&quot;</span> + fileNameSuffix + <span class="string">&quot;)|*&quot;</span> + fileNameSuffix + <span class="string">&quot;&quot;</span>, <span class="comment">//文件类型</span></span><br><span class="line">                        FileName = strSRecMsg</span><br><span class="line">                    &#125;;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//如果点击了对话框中的保存文件按钮 </span></span><br><span class="line">                    <span class="keyword">if</span> (sfDialog.ShowDialog(<span class="keyword">this</span>) == DialogResult.OK)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">string</span> savePath = sfDialog.FileName; <span class="comment">//获取文件的全路径</span></span><br><span class="line">                        <span class="comment">//保存文件</span></span><br><span class="line">                        <span class="built_in">int</span> received = <span class="number">0</span>;</span><br><span class="line">                        <span class="built_in">long</span> receivedTotalFilelength = <span class="number">0</span>;</span><br><span class="line">                        <span class="built_in">bool</span> firstWrite = <span class="literal">true</span>;</span><br><span class="line">                        <span class="keyword">using</span> (FileStream fs = <span class="keyword">new</span> FileStream(savePath, FileMode.Create, FileAccess.Write))</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">while</span> (receivedTotalFilelength &lt; fileLength) <span class="comment">//之后收到的文件字节数组</span></span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="keyword">if</span> (firstWrite)</span><br><span class="line">                                &#123;</span><br><span class="line">                                    fs.Write(buffer, <span class="number">1</span>, firstReceived - <span class="number">1</span>); <span class="comment">//第一次收到的文件字节数组 需要移除标识符1 后写入文件</span></span><br><span class="line">                                    fs.Flush();</span><br><span class="line"></span><br><span class="line">                                    receivedTotalFilelength += firstReceived - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                                    firstWrite = <span class="literal">false</span>;</span><br><span class="line">                                    <span class="keyword">continue</span>;</span><br><span class="line">                                &#125;</span><br><span class="line">                                received = socketServer.Receive(buffer); <span class="comment">//之后每次收到的文件字节数组 可以直接写入文件</span></span><br><span class="line">                                fs.Write(buffer, <span class="number">0</span>, received);</span><br><span class="line">                                fs.Flush();</span><br><span class="line"></span><br><span class="line">                                receivedTotalFilelength += received;</span><br><span class="line">                            &#125;</span><br><span class="line">                            fs.Close();</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="built_in">string</span> fName = savePath.Substring(savePath.LastIndexOf(<span class="string">&quot;\\&quot;</span>) + <span class="number">1</span>); <span class="comment">//文件名 不带路径</span></span><br><span class="line">                        <span class="built_in">string</span> fPath = savePath.Substring(<span class="number">0</span>, savePath.LastIndexOf(<span class="string">&quot;\\&quot;</span>)); <span class="comment">//文件路径 不带文件名</span></span><br><span class="line">                        txtMsg.AppendText(<span class="string">&quot;天之涯:&quot;</span> + GetCurrentTime() + <span class="string">&quot;\r\n您成功接收了文件&quot;</span> + fName + <span class="string">&quot;\r\n保存路径为:&quot;</span> + fPath + <span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">        &#123;</span><br><span class="line">            txtMsg.AppendText(<span class="string">&quot;系统异常消息:&quot;</span> + ex.Message);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>运行程序</strong></p><p>首先,启动服务端并持续监听客户端对其的连接,当客户端成功连接上服务端之后,两端便可以开始通信了.</p><p><a href="http://images.cnblogs.com/cnblogs_com/longwu/201203/201203250919137674.png"><img src="https://images.cnblogs.com/cnblogs_com/longwu/201203/201203250919141936.png" alt="02-启动服务端"></a></p><p><a href="http://images.cnblogs.com/cnblogs_com/longwu/201203/201203250919163374.png"><img src="https://images.cnblogs.com/cnblogs_com/longwu/201203/201203250919181540.png" alt="02-连接服务端"></a></p><p><a href="http://images.cnblogs.com/cnblogs_com/longwu/201203/201203250919206358.png"><img src="https://images.cnblogs.com/cnblogs_com/longwu/201203/201203250919225845.png" alt="02-开始通信"></a></p><p>两端建立连接之后,便可以开始互相通信了.</p><p><a href="http://images.cnblogs.com/cnblogs_com/longwu/201203/201203250919242058.png"><img src="https://images.cnblogs.com/cnblogs_com/longwu/201203/201203250919262384.png" alt="03-程序运行"></a></p><p><a href="http://images.cnblogs.com/cnblogs_com/longwu/201203/201203250919288041.png"><img src="https://images.cnblogs.com/cnblogs_com/longwu/201203/201203250919304463.png" alt="03-程序运行02"></a></p><p>简单的两端对聊之后, 本人便打算发送个文件过去.</p><p><a href="http://images.cnblogs.com/cnblogs_com/longwu/201203/201203250919325104.png"><img src="https://images.cnblogs.com/cnblogs_com/longwu/201203/201203250919346476.png" alt="03-程序运行03"></a></p><p>选取了一本张道真的语法书,后缀为.pdf(文件类型)</p><p><a href="http://images.cnblogs.com/cnblogs_com/longwu/201203/201203250919368229.png"><img src="https://images.cnblogs.com/cnblogs_com/longwu/201203/201203250919382143.png" alt="03-程序运行04"></a></p><p>当点击发送文件按钮后,客户端聊天内容中显示”您发送了文件:张道真实用英语语法.pdf”.</p><p><a href="http://images.cnblogs.com/cnblogs_com/longwu/201203/201203250919408356.png"><img src="https://images.cnblogs.com/cnblogs_com/longwu/201203/2012032509194277.png" alt="03-程序运行05"></a></p><p>这时服务端收到文件后,程序弹出一个另存为对话框,用于保存接收到的文件.这里我们可以看到系统自动附加上了文件名和保存类型.</p><p><a href="http://images.cnblogs.com/cnblogs_com/longwu/201203/201203250919459290.png"><img src="https://images.cnblogs.com/cnblogs_com/longwu/201203/201203250919477630.png" alt="03-程序运行06"></a></p><p>当服务端用户接收并保存文件之后,聊天内容里显示”您成功接收了文件张道真实用英语语法.pdf” 以及文件的保存路径.</p><p><a href="http://images.cnblogs.com/cnblogs_com/longwu/201203/201203250919496352.png"><img src="https://images.cnblogs.com/cnblogs_com/longwu/201203/201203250919518314.png" alt="03-程序运行08"></a></p><p><strong>附上源代码</strong></p><p>服务端 <a href="http://files.cnblogs.com/longwu/ChatServer2.zip">ChatServer2.zip</a> 客户端 <a href="http://files.cnblogs.com/longwu/ChatClient2.zip">ChatClient2.zip</a></p><p>转自：<a href="https://www.cnblogs.com/longwu/archive/2011/08/25/2153636.html">https://www.cnblogs.com/longwu/archive/2011/08/25/2153636.html<a></p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> winfrom </tag>
            
            <tag> socket </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于C# Winform的简易聊天程序[第一篇-两端通信]</title>
      <link href="/RookieRoom/2020/05/07/ji-yu-c-winform-de-jian-yi-liao-tian-cheng-xu-di-yi-pian-liang-duan-tong-xin/"/>
      <url>/RookieRoom/2020/05/07/ji-yu-c-winform-de-jian-yi-liao-tian-cheng-xu-di-yi-pian-liang-duan-tong-xin/</url>
      
        <content type="html"><![CDATA[<p><strong>程序简介</strong></p><p>本聊天程序支持局域网内部客户端与服务端之间的互相通信.</p> <span id="more"></span><p><strong>原理</strong></p><p>启动服务端后,服务端通过持续监听客户端发来的请求,一旦监听到客户端传来的信息后,两端便可以互发信息了.服务端需要绑定一个IP,用于客户端在网络中寻找并建立连接.信息发送原理:将手动输入字符串信息转换成机器可以识别的字节数组,然后调用套接字的Send()方法将字节数组发送出去.信息接收原理:调用套接字的Receive()方法,获取对端传来的字节数组,然后将其转换成人可以读懂的字符串信息.</p><p><strong>界面设计 - *<em>服务端*</em></strong></p><p>IP文本框 name: txtIP  port(端口号)文本框 name: txtPORT  聊天内容文本框 name: txtMsg  发送信息文本框 name:txtSendMsg</p><p>启动服务按钮 name: btnServerConn    发送信息按钮name: btnSendMsg</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011101820503331.jpg" alt="img"></p><p>服务端代码:</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">FServer</span> : <span class="title">Form</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FServer</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        InitializeComponent();</span><br><span class="line">        <span class="comment">//关闭对文本框的非法线程操作检查</span></span><br><span class="line">        TextBox.CheckForIllegalCrossThreadCalls = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Thread threadWatch = <span class="literal">null</span>; <span class="comment">//负责监听客户端的线程</span></span><br><span class="line">    Socket socketWatch = <span class="literal">null</span>; <span class="comment">//负责监听客户端的套接字</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnServerConn_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//定义一个套接字用于监听客户端发来的信息  包含3个参数(IP4寻址协议,流式连接,TCP协议)</span></span><br><span class="line">        socketWatch = <span class="keyword">new</span> Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);</span><br><span class="line">        <span class="comment">//服务端发送信息 需要1个IP地址和端口号</span></span><br><span class="line">        IPAddress ipaddress = IPAddress.Parse(txtIP.Text.Trim()); <span class="comment">//获取文本框输入的IP地址</span></span><br><span class="line">        <span class="comment">//将IP地址和端口号绑定到网络节点endpoint上 </span></span><br><span class="line">        IPEndPoint endpoint = <span class="keyword">new</span> IPEndPoint(ipaddress, <span class="built_in">int</span>.Parse(txtPORT.Text.Trim())); <span class="comment">//获取文本框上输入的端口号</span></span><br><span class="line">        <span class="comment">//监听绑定的网络节点</span></span><br><span class="line">        socketWatch.Bind(endpoint);</span><br><span class="line">        <span class="comment">//将套接字的监听队列长度限制为20</span></span><br><span class="line">        socketWatch.Listen(<span class="number">20</span>);</span><br><span class="line">        <span class="comment">//创建一个监听线程 </span></span><br><span class="line">        threadWatch = <span class="keyword">new</span> Thread(WatchConnecting);</span><br><span class="line">        <span class="comment">//将窗体线程设置为与后台同步</span></span><br><span class="line">        threadWatch.IsBackground = <span class="literal">true</span>;</span><br><span class="line">        <span class="comment">//启动线程</span></span><br><span class="line">        threadWatch.Start();</span><br><span class="line">        <span class="comment">//启动线程后 txtMsg文本框显示相应提示</span></span><br><span class="line">        txtMsg.AppendText(<span class="string">&quot;开始监听客户端传来的信息!&quot;</span> + <span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建一个负责和客户端通信的套接字 </span></span><br><span class="line">    Socket socConnection = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 监听客户端发来的请求</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">WatchConnecting</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)  <span class="comment">//持续不断监听客户端发来的请求</span></span><br><span class="line">        &#123;</span><br><span class="line">            socConnection = socketWatch.Accept();</span><br><span class="line">            txtMsg.AppendText(<span class="string">&quot;客户端连接成功&quot;</span> + <span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">            <span class="comment">//创建一个通信线程 </span></span><br><span class="line">            ParameterizedThreadStart pts = <span class="keyword">new</span> ParameterizedThreadStart(ServerRecMsg);</span><br><span class="line">            Thread thr = <span class="keyword">new</span> Thread(pts);</span><br><span class="line">            thr.IsBackground = <span class="literal">true</span>;</span><br><span class="line">            <span class="comment">//启动线程</span></span><br><span class="line">            thr.Start(socConnection);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 发送信息到客户端的方法</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;sendMsg&quot;&gt;</span>发送的字符串信息<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ServerSendMsg</span>(<span class="params"><span class="built_in">string</span> sendMsg</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//将输入的字符串转换成 机器可以识别的字节数组</span></span><br><span class="line">        <span class="built_in">byte</span>[] arrSendMsg = Encoding.UTF8.GetBytes(sendMsg);</span><br><span class="line">        <span class="comment">//向客户端发送字节数组信息</span></span><br><span class="line">        socConnection.Send(arrSendMsg);</span><br><span class="line">        <span class="comment">//将发送的字符串信息附加到文本框txtMsg上</span></span><br><span class="line">        txtMsg.AppendText(<span class="string">&quot;So-flash:&quot;</span> + GetCurrentTime() + <span class="string">&quot;\r\n&quot;</span> + sendMsg + <span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 接收客户端发来的信息 </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;socketClientPara&quot;&gt;</span>客户端套接字对象<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ServerRecMsg</span>(<span class="params"><span class="built_in">object</span> socketClientPara</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Socket socketServer = socketClientPara <span class="keyword">as</span> Socket;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//创建一个内存缓冲区 其大小为1024*1024字节  即1M</span></span><br><span class="line">            <span class="built_in">byte</span>[] arrServerRecMsg = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">1024</span> * <span class="number">1024</span>];</span><br><span class="line">            <span class="comment">//将接收到的信息存入到内存缓冲区,并返回其字节数组的长度</span></span><br><span class="line">            <span class="built_in">int</span> length = socketServer.Receive(arrServerRecMsg);</span><br><span class="line">            <span class="comment">//将机器接受到的字节数组转换为人可以读懂的字符串</span></span><br><span class="line">            <span class="built_in">string</span> strSRecMsg = Encoding.UTF8.GetString(arrServerRecMsg, <span class="number">0</span>, length);</span><br><span class="line">            <span class="comment">//将发送的字符串信息附加到文本框txtMsg上  </span></span><br><span class="line">            txtMsg.AppendText(<span class="string">&quot;天之涯:&quot;</span> + GetCurrentTime() + <span class="string">&quot;\r\n&quot;</span> + strSRecMsg + <span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//发送信息到客户端</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnSendMsg_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//调用 ServerSendMsg方法  发送信息到客户端</span></span><br><span class="line">        ServerSendMsg(txtSendMsg.Text.Trim());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//快捷键 Enter 发送信息</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">txtSendMsg_KeyDown</span>(<span class="params"><span class="built_in">object</span> sender, KeyEventArgs e</span>)</span>  </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//如果用户按下了Enter键</span></span><br><span class="line">        <span class="keyword">if</span> (e.KeyCode == Keys.Enter)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//则调用 服务器向客户端发送信息的方法</span></span><br><span class="line">            ServerSendMsg(txtSendMsg.Text.Trim());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 获取当前系统时间的方法</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>当前时间<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> DateTime <span class="title">GetCurrentTime</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        DateTime currentTime = <span class="keyword">new</span> DateTime();</span><br><span class="line">        currentTime = DateTime.Now;</span><br><span class="line">        <span class="keyword">return</span> currentTime;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>界面设计 - 客户端</strong></p><p>IP文本框 name: txtIP  Port文本框 name: txtPort  聊天内容文本框 name:txtMsg  发送信息文本框 name: txtCMsg</p><p>连接到服务端按钮 name: btnBeginListen  发送消息按钮 name: btnSend</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011101820510538.jpg" alt="img"></p><p>客户端代码:</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">FClient</span> : <span class="title">Form</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FClient</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        InitializeComponent();</span><br><span class="line">        <span class="comment">//关闭对文本框的非法线程操作检查</span></span><br><span class="line">        TextBox.CheckForIllegalCrossThreadCalls = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//创建 1个客户端套接字 和1个负责监听服务端请求的线程  </span></span><br><span class="line">    Socket socketClient = <span class="literal">null</span>; </span><br><span class="line">    Thread threadClient = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnBeginListen_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//定义一个套字节监听  包含3个参数(IP4寻址协议,流式连接,TCP协议)</span></span><br><span class="line">        socketClient = <span class="keyword">new</span> Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);</span><br><span class="line">        <span class="comment">//需要获取文本框中的IP地址</span></span><br><span class="line">        IPAddress ipaddress = IPAddress.Parse(txtIP.Text.Trim());</span><br><span class="line">        <span class="comment">//将获取的ip地址和端口号绑定到网络节点endpoint上</span></span><br><span class="line">        IPEndPoint endpoint = <span class="keyword">new</span> IPEndPoint(ipaddress, <span class="built_in">int</span>.Parse(txtPort.Text.Trim()));</span><br><span class="line">        <span class="comment">//这里客户端套接字连接到网络节点(服务端)用的方法是Connect 而不是Bind</span></span><br><span class="line">        socketClient.Connect(endpoint);</span><br><span class="line">        <span class="comment">//创建一个线程 用于监听服务端发来的消息</span></span><br><span class="line">        threadClient = <span class="keyword">new</span> Thread(RecMsg);</span><br><span class="line">        <span class="comment">//将窗体线程设置为与后台同步</span></span><br><span class="line">        threadClient.IsBackground = <span class="literal">true</span>;</span><br><span class="line">        <span class="comment">//启动线程</span></span><br><span class="line">        threadClient.Start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 接收服务端发来信息的方法</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">RecMsg</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) <span class="comment">//持续监听服务端发来的消息</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//定义一个1M的内存缓冲区 用于临时性存储接收到的信息</span></span><br><span class="line">            <span class="built_in">byte</span>[] arrRecMsg = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">1024</span> * <span class="number">1024</span>];</span><br><span class="line">            <span class="comment">//将客户端套接字接收到的数据存入内存缓冲区, 并获取其长度</span></span><br><span class="line">            <span class="built_in">int</span> length = socketClient.Receive(arrRecMsg);</span><br><span class="line">            <span class="comment">//将套接字获取到的字节数组转换为人可以看懂的字符串</span></span><br><span class="line">            <span class="built_in">string</span> strRecMsg = Encoding.UTF8.GetString(arrRecMsg, <span class="number">0</span>, length);</span><br><span class="line">            <span class="comment">//将发送的信息追加到聊天内容文本框中</span></span><br><span class="line">            txtMsg.AppendText(<span class="string">&quot;So-flash:&quot;</span> + GetCurrentTime() + <span class="string">&quot;\r\n&quot;</span> + strRecMsg + <span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 发送字符串信息到服务端的方法</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;sendMsg&quot;&gt;</span>发送的字符串信息<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ClientSendMsg</span>(<span class="params"><span class="built_in">string</span> sendMsg</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//将输入的内容字符串转换为机器可以识别的字节数组</span></span><br><span class="line">        <span class="built_in">byte</span>[] arrClientSendMsg = Encoding.UTF8.GetBytes(sendMsg);</span><br><span class="line">        <span class="comment">//调用客户端套接字发送字节数组</span></span><br><span class="line">        socketClient.Send(arrClientSendMsg);</span><br><span class="line">        <span class="comment">//将发送的信息追加到聊天内容文本框中</span></span><br><span class="line">        txtMsg.AppendText(<span class="string">&quot;天之涯:&quot;</span> + GetCurrentTime() + <span class="string">&quot;\r\n&quot;</span> + sendMsg + <span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//点击按钮btnSend 向服务端发送信息</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnSend_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//调用ClientSendMsg方法 将文本框中输入的信息发送给服务端</span></span><br><span class="line">        ClientSendMsg(txtCMsg.Text.Trim());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//快捷键 Enter发送信息</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">txtCMsg_KeyDown</span>(<span class="params"><span class="built_in">object</span> sender, KeyEventArgs e</span>)</span> </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="comment">//当光标位于文本框时 如果用户按下了键盘上的Enter键 </span></span><br><span class="line">        <span class="keyword">if</span> (e.KeyCode == Keys.Enter)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//则调用客户端向服务端发送信息的方法</span></span><br><span class="line">            ClientSendMsg(txtCMsg.Text.Trim());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 获取当前系统时间的方法</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>当前时间<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> DateTime <span class="title">GetCurrentTime</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        DateTime currentTime = <span class="keyword">new</span> DateTime();</span><br><span class="line">        currentTime = DateTime.Now;</span><br><span class="line">        <span class="keyword">return</span> currentTime;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>运行方法</strong></p><p>获取电脑本机IP的方法: 例如:本机IP:192.168.0.3(可能变动)  端口号port可以随便写:1-65535之间的任意整数都行</p><p>1.打开程序 点击运行</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011082618345951.jpg" alt="img"></p><p>2.在运行栏里输入cmd指令</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011082618353233.jpg" alt="img"></p><p>3.输入查看IP指令: ipconfig</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011082618360842.jpg" alt="img"></p><p>4.获取当前IP: 192.168.0.3. 当然不同的地方 本机IP有可能不一样</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011101821194739.jpg" alt="img"></p><p>程序运行展示:</p><p>首先 点击服务端的 启动服务按钮 聊天内容出现”开始监听客户端传来的信息!”</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011102305374618.jpg" alt="img"></p><p>然后 点击客户端上的”连接到服务端”按钮 可以看见服务端上又出现了一行字 “客户端连接成功”</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011102305392044.jpg" alt="img"></p><p>之后 便可以 两端进行通信了</p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011101821050618.jpg" alt="img"></p><p><img src="https://pic002.cnblogs.com/images/2011/326877/2011101821051929.jpg" alt="img"></p><p>这样一个简单的聊天程序就完成了~~~~:)</p><p> <strong>源代码下载</strong> </p><p>客户端下载 <a href="http://files.cnblogs.com/longwu/ChatClient.zip">ChatClient.zip</a> 服务端下载 <a href="http://files.cnblogs.com/longwu/ChatServer.zip">ChatServer.zip</a> </p><p>转自：<a href="https://www.cnblogs.com/longwu/archive/2011/08/25/2153636.html">https://www.cnblogs.com/longwu/archive/2011/08/25/2153636.html<a></p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> winfrom </tag>
            
            <tag> socket </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C# 读写App.config配置文件的方法</title>
      <link href="/RookieRoom/2020/05/07/c-du-xie-appconfig-pei-zhi-wen-jian-de-fang-fa/"/>
      <url>/RookieRoom/2020/05/07/c-du-xie-appconfig-pei-zhi-wen-jian-de-fang-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="一、配置文件概述："><a href="#一、配置文件概述：" class="headerlink" title="一、配置文件概述："></a>一、配置文件概述：</h2><p>应用程序配置文件是标准的 XML 文件，XML 标记和属性是区分大小写的。它是可以按需要更改的，开发人员可以使用配置文件来更改设置，而不必重编译应用程序。配置文件的根节点是configuration。我们经常访问的是appSettings，它是由.Net预定义的配置节。我们经常使用的配置文件的架构是客诉下面的形式。先大概有个印象，通过后面的实例会有一个比较清楚的认识。下面的“配置节”可以理解为进行配置一个XML的节点。</p><span id="more"></span><p>常见配置文件模式：</p><configuration><configSections>          //配置节声明区域，包含配置节和命名空间声明<section>             //配置节声明<sectionGroup>         //定义配置节组<section>             //配置节组中的配置节声明<appSettings>            //预定义配置节<Custom element for configuration section>  //配置节设置区域<p>下面是一个最常见的应用程序配置文件的例子，只有appSettings节：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">    &lt;appSettings&gt;</span><br><span class="line">        &lt;<span class="keyword">add</span> key=<span class="string">&quot;connectionstring&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;User Source=.;Password=123456;Initial Catalog=test;Provider=SQLOLEDB.1;&quot;</span> /&gt;</span><br><span class="line">        &lt;<span class="keyword">add</span> key=<span class="string">&quot;TemplatePATH&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;Template&quot;</span> /&gt;</span><br><span class="line">    &lt;/appSettings&gt;</span><br><span class="line">&lt;/configuration&gt;    </span><br></pre></td></tr></table></figure><p>在预定义的 appSettings 节（注意大小写），有很多的元素，这些元素名称都是“add”，有两个属性分别是“key”和“value”。</p><p>.NET 提供了对appSettings节的访问方法。在 .NET 1.0 和 1.1 版本中，可以使用 System.Configuration.ConfigurationSettings.AppSettings[“Key”] 来对 key &#x3D; “Key” 的<add>元素的 value属性 进行访问。</p><p><strong>注意</strong>：现在.Net FrameWork 2.0中已经明确表示此ConfigurationSettings属性已经废弃，建议改为 ConfigurationManager 或 WebConfigurationManager。</p><p>使用 System.Configuration.ConfigurationManager，需要在工程里添加对 system.configuration.dll 程序集的引用。（在解决方案管理器中右键点击工程名称，在右键菜单中选择添加引用，在.NET选项卡下即可找到。）</p><p>添加引用后，就可以用 ConfigurationManager.AppSettings[“Key”] 来读取对应的值了.</p><p>但是，ConfigurationManager.AppSettings 属性是<strong>只读</strong>的，并不支持修改属性值。这是因为据说微软不太建议我们动态写入app.config文件，而是建议手工配置后，在程序运行时只做静态访问。</p><p>如果实在需要在程序中进行修改，也即写入App.Config，请往下看。</p><h2 id="二、appSettings配置节的读写操作"><a href="#二、appSettings配置节的读写操作" class="headerlink" title="二、appSettings配置节的读写操作"></a>二、appSettings配置节的读写操作</h2><p>读取App.config文件的appSettings节的方法比较简单，可以通过上文中 System.Configuration.ConfigurationManager.AppSettings[“Key”]的方法进行访问，但前面也已经说了，该方法不提供写入。</p><p>如果希望写入配置文件，可以使用ConfigurationManager对象执行打开配置文件的操作后，将会返回一个Configuration的对象，利用该对象进行操作（增删改查都可以哦）。</p><p>下面给出实现的代码（增加引用using System.Configuration名称空间）</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AccessAppSettings</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//获取Configuration对象</span></span><br><span class="line">    Configuration config = System.Configuration.ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);</span><br><span class="line">    <span class="comment">//根据Key读取&lt;add&gt;元素的Value</span></span><br><span class="line">    <span class="built_in">string</span> name = config.AppSettings.Settings[<span class="string">&quot;name&quot;</span>].Value;</span><br><span class="line">    <span class="comment">//写入&lt;add&gt;元素的Value</span></span><br><span class="line">    config.AppSettings.Settings[<span class="string">&quot;name&quot;</span>].Value = <span class="string">&quot;fx163&quot;</span>;</span><br><span class="line">    <span class="comment">//增加&lt;add&gt;元素</span></span><br><span class="line">    config.AppSettings.Settings.Add(<span class="string">&quot;url&quot;</span>, <span class="string">&quot;http://www.fx163.net&quot;</span>);</span><br><span class="line">    <span class="comment">//删除&lt;add&gt;元素</span></span><br><span class="line">    config.AppSettings.Settings.Remove(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">    <span class="comment">//一定要记得保存，写不带参数的config.Save()也可以</span></span><br><span class="line">    config.Save(ConfigurationSaveMode.Modified);</span><br><span class="line">    <span class="comment">//刷新，否则程序读取的还是之前的值（可能已装入内存）</span></span><br><span class="line">    System.Configuration.ConfigurationManager.RefreshSection(<span class="string">&quot;appSettings&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要注意的是：</p><p>1、根据并不存在的Key值访问<add>元素，甚至使用remove()方法删除不存在的元素，都不会导致异常，前者会返回null。</p><p>2、add已经存在的<add>元素也不会导致异常，而是concat了已有的Value和新的Value，用”,”分隔，例如：”olldvalue,newvalue”。</p><p>3、在项目进行编译后，在运行目录bin\Debuge文件下，将出现两个配置文件，一个名为“ProjectName.exe.config”，另一个名为“ProjectName.vshost.exe.config”。第一个文件为项目实际使用的配置文件，在程序运行中所做的更改都将被保存于此；第二个文件其实为原代码中“App.config”的同步文件，在程序运行中不会发生更改。</p><p>4、特别注意大小写（XML文件是区分大小写的），例如appSettings配置节。</p><p>5、可能有读者会想到，既然app.config是标准XML，当然也可以用操纵一般XML文件的方法来读写。这当然是可以的！只不过我认为这样就失去了VS提供app.config文件的意义了，还不如自己定义一个配置文件方便。</p><p>本文只是粗略地讲了app.config文件中appSettings配置节的访问方法，connectionStrings配置节的操作基本是类似的，也可以自定义配置节。这些高级的用法可以自己体会，VS对app.config这个配置文件的管理还是很强大的，例如WinForm应用程序的Settings设置（可以在IDE中或者通过代码访问）其实也是利用了app.config文件。</p><p><img src="https://images2015.cnblogs.com/blog/820134/201603/820134-20160305004113987-1682392002.jpg" alt="img"></p><p>转自：<a href="https://www.cnblogs.com/feiyuhuo/p/5243967.html">https://www.cnblogs.com/feiyuhuo/p/5243967.html<a></p>]]></content>
      
      
      
        <tags>
            
            <tag> App.config </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C# winForm 窗口跳转 后关闭上一个窗口的方法</title>
      <link href="/RookieRoom/2020/05/07/c-winform-chuang-kou-tiao-zhuan-hou-guan-bi-shang-yi-ge-chuang-kou-de-fang-fa/"/>
      <url>/RookieRoom/2020/05/07/c-winform-chuang-kou-tiao-zhuan-hou-guan-bi-shang-yi-ge-chuang-kou-de-fang-fa/</url>
      
        <content type="html"><![CDATA[<p>方法一：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//关闭子窗体后</span></span><br><span class="line">form2.Closed += (ss,ee)=&gt; &#123; <span class="keyword">this</span>.Close(); &#125;;</span><br><span class="line"><span class="comment">//或Application.OpenForms集合找到要关闭的窗口，再Close：</span></span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> item <span class="keyword">in</span> Application.OpenForms)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span> (item <span class="keyword">is</span> Form1) item.Close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法二：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">B new_form = <span class="keyword">new</span> B();</span><br><span class="line">new_form.owner = <span class="keyword">this</span>;</span><br><span class="line"><span class="keyword">this</span>.hide();</span><br><span class="line">new_form.showdialog();</span><br><span class="line">Application.ExitThread();</span><br><span class="line"></span><br><span class="line">Application.ExitThread();<span class="comment">//是退出当前线程。</span></span><br><span class="line"><span class="comment">//首先默认情况下我们的程序是单线程的，</span></span><br><span class="line"><span class="keyword">this</span>.hide();<span class="comment">//后把当前窗体隐藏起来了，然后new_form.showdialog();模态弹出新窗口。</span></span><br><span class="line"><span class="comment">//这个时候线程不会继续执行（被阻塞了），</span></span><br><span class="line"><span class="comment">//直到我们关闭了新弹出来的模态窗口后，程序才会继续执行Application.ExitThread();此时线程关闭，所有一切都关闭了，隐藏的窗口也关闭了。</span></span><br></pre></td></tr></table></figure><p>转自：<a href="https://www.cnblogs.com/huanhuan86/archive/2013/02/21/2920303.html">https://www.cnblogs.com/huanhuan86/archive/2013/02/21/2920303.html<a></p>]]></content>
      
      
      
        <tags>
            
            <tag> winfrom </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于博客园内嵌入bilibili视频(转)</title>
      <link href="/RookieRoom/2020/04/29/guan-yu-bo-ke-yuan-nei-qian-ru-bilibili-shi-pin-zhuan/"/>
      <url>/RookieRoom/2020/04/29/guan-yu-bo-ke-yuan-nei-qian-ru-bilibili-shi-pin-zhuan/</url>
      
        <content type="html"><![CDATA[<h2 id="一、原理"><a href="#一、原理" class="headerlink" title="一、原理"></a>一、原理</h2><p>使用iframe标签，更改其中src对应bilibili视频的aid和cid，组装新的HTML源码，即可在文章内嵌入bilibili视频。</p><h2 id="二、获取aid和cid"><a href="#二、获取aid和cid" class="headerlink" title="二、获取aid和cid"></a>二、获取aid和cid</h2><p>aid为视频的av号，但是每个av号下不一定只有1p，所以B站用cid来管理视频的真正id，那么也可以说如果视频只有1p，那么cid就无用了，我测试直接填1也是可以的。</p><p>这里介绍两种获取aid和cid的方法：</p><span id="more"></span><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>先观察视频的URL</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:``//www.bilibili.com/video/av84267566?from=search&amp;seid=13400362594908841480</span><br></pre></td></tr></table></figure><p> 其中84267566就是av号。</p><p>或者直接点右键——查看网页源代码——ctrl+f——搜索’aid&#x3D;’、‘cid&#x3D;’ 就可以了。</p><h3 id="方法二-推荐"><a href="#方法二-推荐" class="headerlink" title="方法二(推荐)"></a>方法二(推荐)</h3><p>我们在转发视频的时候直接可以看到嵌入代码</p><p><img src="https://img2018.cnblogs.com/i-beta/1358881/202002/1358881-20200206150838006-392318847.png"></p><p>这是官方准备的嵌入代码，可以直接拿来用，但是显示效果不是很理想，样式不是我们希望的，需要调整一下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src=&quot;//player.bilibili.com/player.html?aid=84267566&amp;cid=145147963&amp;page=1&quot; scrolling=&quot;no&quot; border=&quot;0&quot; frameborder=&quot;no&quot; framespacing=&quot;0&quot; allowfullscreen=&quot;true&quot;&gt; &lt;/iframe&gt;</span><br></pre></td></tr></table></figure><p>从嵌入代码中我们直接得到了aid和cid</p><p>我们重新设置一下功能、大小、样式，得到可用的HTML代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src=&quot;//player.bilibili.com/player.html?aid=84267566&amp;amp;cid=145147963&amp;amp;page=1&quot; frameborder=&quot;no&quot; scrolling=&quot;no&quot; width=&quot;95%&quot; height=&quot;600&quot;&gt;&lt;/iframe&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>以后插入需要的bilibili视频只需要改变上面的aid和cid就可以了！</p><h2 id="三、移动端适配"><a href="#三、移动端适配" class="headerlink" title="三、移动端适配"></a>三、移动端适配</h2><p>**<a href="https://www.cnblogs.com/experdot/">ExperDot</a>**大佬提出移动端出现不适配的问题，我当时其实并没有考虑移动端的问题，固定了播放器的高度造成了这个问题。</p><p><img src="https://img2018.cnblogs.com/i-beta/1358881/202002/1358881-20200217230556219-1666126249.png"></p><p>大佬已经给出了解决方案</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=&quot;position: relative; padding: 30% 45%;&quot;&gt;</span><br><span class="line">&lt;iframe style=&quot;position: absolute; width: 100%; height: 100%; left: 0; top: 0;&quot; src=&quot;https://player.bilibili.com/player.html?cid=145147963&amp;aid=84267566&amp;page=1&amp;as_wide=1&amp;high_quality=1&amp;danmaku=0&quot; frameborder=&quot;no&quot; scrolling=&quot;no&quot;&gt;&lt;/iframe&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>可以用这个代码作为样板，以后只需要改变src的id好就可以了！</p><p>再次感谢大佬**<a href="https://www.cnblogs.com/experdot/">ExperDot</a>**的帮助！</p><h2 id="四、嵌入方法"><a href="#四、嵌入方法" class="headerlink" title="四、嵌入方法"></a>四、嵌入方法</h2><p>选择tinyMCE编辑器，这是博客园默认的编辑器，选择编辑html原代码，插入上面的代码即可。</p><p><img src="https://img2018.cnblogs.com/i-beta/1358881/202002/1358881-20200206151748141-1744878901.png" alt="img"></p><p> <img src="https://img2018.cnblogs.com/i-beta/1358881/202002/1358881-20200206153114389-1534665027.png" alt="img"></p><h2 id="五、参数说明"><a href="#五、参数说明" class="headerlink" title="五、参数说明"></a>五、参数说明</h2><p>本来这篇博客是我的游戏之作，但没想到捧场的朋友这么多，我看到评论区有朋友讲清晰度的问题，我这里再说一下几个参数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://player.bilibili.com/player.html?cid=145147963&amp;aid=84267566&amp;page=1&amp;as_wide=1&amp;high_quality=1&amp;danmaku=0</span><br></pre></td></tr></table></figure><table><thead><tr><th>key</th><th>说明</th></tr></thead><tbody><tr><td>aid</td><td>视频ID 就是B站的 avxxxx 后面的数字</td></tr><tr><td>cid</td><td>应该是客户端id, clientId 的缩写(推测的, 不一定准确) 经过测试, 这个字段不填也没关系</td></tr><tr><td>page</td><td>第几个视频, 起始下标为 1 (默认值也是为1) 就是B站视频, 选集里的, 第几个视频</td></tr><tr><td>as_wide</td><td>是否宽屏 1: 宽屏, 0: 小屏</td></tr><tr><td>high_quality</td><td>是否高清 1: 高清, 0: 最低视频质量(默认) 如视频有 360p 720p 1080p 三种, 默认或者 high_quality&#x3D;0 是最低 360p high_quality&#x3D;1 是最高1080p</td></tr><tr><td>danmaku</td><td>是否开启弹幕 1: 开启(默认), 0: 关闭</td></tr></tbody></table><p>所以只要设置<strong>high_quality&#x3D;1</strong>就能开启最高画质了。</p><p>B站官方并没有给出文档说明…..但我发现论坛上有一些相关的讨论</p><p><a href="http://link.acg.tv/forum.php?mod=viewthread&tid=22308&highlight=%E6%92%AD%E6%94%BE%E5%99%A8%E5%8F%82%E6%95%B0%E7%9A%84%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%E5%9C%A8%E5%93%AA%E9%87%8C%E5%91%A2"><strong>相关链接</strong></a></p><p>经测试high_quality参数可以正常使用，此参数控制外链播放器的默认清晰度：<br>&#x3D;1时默认清晰度是最高非大会员清晰度，例如：<br>（1）原视频清晰度有360P、480P、720P，外链播放器默认为最高的720P，<br>（2）原视频清晰度有360P、480P、720P、1080P，外链播放器默认为最高的1080P，<br>（3）原视频清晰度有360P、480P、720P、1080P、1080P+，外链播放器默认为1080P，<br>选择其他清晰度会打开原视频页面，</p><p>&#x3D;其他数值或没有此参数时默认清晰度是360P，选择其他清晰度会打开原视频页面。</p><h2 id="六、示例"><a href="#六、示例" class="headerlink" title="六、示例"></a>六、示例</h2><p>这里给出2020拜年祭的《万古生香》</p><p>万古千秋，代代有玲珑气象！<br>风云史往，页页赋秀骨生香！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=&quot;position: relative; padding: 30% 45%;&quot;&gt;</span><br><span class="line">&lt;iframe style=&quot;position: absolute; width: 100%; height: 100%; left: 0; top: 0;&quot; src=&quot;https://player.bilibili.com/player.html?cid=145147963&amp;aid=84267566&amp;page=1&amp;as_wide=1&amp;high_quality=1&amp;danmaku=0&quot; frameborder=&quot;no&quot; scrolling=&quot;no&quot;&gt;&lt;/iframe&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="https://player.bilibili.com/player.html?cid=145147963&aid=84267566&page=1&as_wide=1&high_quality=1&danmaku=0" frameborder="no" scrolling="no"></iframe></div><hr><p>转自博客园：<a href="https://www.cnblogs.com/wkfvawl/p/12268980.html">https://www.cnblogs.com/wkfvawl/p/12268980.html<a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 有趣的编程知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>12分钟上手CSS【看懂封面就理解CSS】</title>
      <link href="/RookieRoom/2020/04/28/12-fen-zhong-shang-shou-csskan-dong-feng-mian-jiu-li-jie-css/"/>
      <url>/RookieRoom/2020/04/28/12-fen-zhong-shang-shou-csskan-dong-feng-mian-jiu-li-jie-css/</url>
      
        <content type="html"><![CDATA[<iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="https://player.bilibili.com/player.html?aid=86238906&bvid=BV1X7411x7ao&cid=147396296&page=1&as_wide=1&high_quality=1&danmaku=0" frameborder="no" scrolling="no"></iframe>]]></content>
      
      
      
        <tags>
            
            <tag> 有趣的编程知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>老说的API到底是什么??</title>
      <link href="/RookieRoom/2020/04/28/1/"/>
      <url>/RookieRoom/2020/04/28/1/</url>
      
        <content type="html"><![CDATA[<div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="https://player.bilibili.com/player.html?aid=85460523&bvid=BV137411z7KM&cid=146081137&page=1&as_wide=1&high_quality=1&danmaku=0" frameborder="no" scrolling="no"></iframe></div>]]></content>
      
      
      
        <tags>
            
            <tag> 有趣的编程知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c#拓展方法</title>
      <link href="/RookieRoom/2020/04/28/ctuo-zhan-fang-fa/"/>
      <url>/RookieRoom/2020/04/28/ctuo-zhan-fang-fa/</url>
      
        <content type="html"><![CDATA[<p> 例如要给StringBuilder加一个拓展方法，在一个静态类中，写一个公开的静态方法，参数列表中加上 (this+空格+StringBuilder S ,参数1，参数2，····· )<br> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">void</span> <span class="title">Add</span>(<span class="params"><span class="keyword">this</span> StringBuilder S,<span class="built_in">int</span> a, <span class="built_in">string</span> b,<span class="built_in">int</span> c,***</span>)</span>&#123;&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>什么是隐式类型</title>
      <link href="/RookieRoom/2020/04/28/shi-me-shi-yin-shi-lei-xing/"/>
      <url>/RookieRoom/2020/04/28/shi-me-shi-yin-shi-lei-xing/</url>
      
        <content type="html"><![CDATA[<p>C#隐式类型是.net4.0推出的新功能特性，我们先了解一下什么是隐式类型？<br>当程序中使用了隐式类型，那么这个变量不需要指定其数据类型，由操作系统自动判断其数据类型，但它绝对不会进行装箱和拆箱的操作。<br>以前我们在定义变量的时间，必须要指定变量的数据类型，隐式类型变量是用var关键字来表示的，当使用了var关键字定义的变量就不需要指定其数据类型。例：var flag1&#x3D;2;var flag2&#x3D;”张三”;var flag3&#x3D;true;以上定义隐式类型变量都是正确的，但是使用了隐式类型变量需要注意如下几点：1、使用var作为定义隐式类型的关键字，var其实也是javascript定义变量的语法；2、定义隐式类型时，必须为它赋值，例var str&#x3D;“test”；3、赋值后，变量的值可以修改，但是值的数据类型是不可更改的；4、隐式类型具体是什么类型，是初始化的值，由编译器自动判断。</p>]]></content>
      
      
      
        <tags>
            
            <tag> c# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ASP.NET MVC HtmlHelper用法大全 </title>
      <link href="/RookieRoom/2020/04/28/aspnet-mvc-htmlhelper-yong-fa-da-quan/"/>
      <url>/RookieRoom/2020/04/28/aspnet-mvc-htmlhelper-yong-fa-da-quan/</url>
      
        <content type="html"><![CDATA[<p>HTML扩展类的所有方法都有2个参数：<br>以textbox为例子</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">TextBox</span>(<span class="params"> <span class="keyword">this</span> HtmlHelper htmlHelper, <span class="built_in">string</span> name, Object <span class="keyword">value</span>, IDictionary&lt;<span class="built_in">string</span>, Object&gt; htmlAttributes </span>)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">TextBox</span>(<span class="params"> <span class="keyword">this</span> HtmlHelper htmlHelper, <span class="built_in">string</span> name, Object <span class="keyword">value</span>, Object htmlAttributes </span>)</span></span><br></pre></td></tr></table></figure><p>这2个参数代表这个html标签的属性集合。使用方法如下。</p><span id="more"></span><p>   1.ActionLink</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;%=Html.ActionLink(<span class="string">&quot;这是一个连接&quot;</span>, <span class="string">&quot;Index&quot;</span>, <span class="string">&quot;Home&quot;</span>)%&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">//带有QueryString的写法</span></span><br><span class="line"></span><br><span class="line">&lt;%=Html.ActionLink(<span class="string">&quot;这是一个连接&quot;</span>, <span class="string">&quot;Index&quot;</span>, <span class="string">&quot;Home&quot;</span>, <span class="keyword">new</span> &#123; page=<span class="number">1</span> &#125;,<span class="literal">null</span>)%&gt;</span><br><span class="line"></span><br><span class="line">&lt;%=Html.ActionLink(<span class="string">&quot;这是一个连接&quot;</span>, <span class="string">&quot;Index&quot;</span>, <span class="keyword">new</span> &#123; page=<span class="number">1</span> &#125;)%&gt;有其它Html属性的写法&lt;%=Html.ActionLink(<span class="string">&quot;这是一个连接&quot;</span>, <span class="string">&quot;Index&quot;</span>, <span class="string">&quot;Home&quot;</span>, <span class="keyword">new</span> &#123; id=<span class="string">&quot;link1&quot;</span> &#125;)%&gt;</span><br><span class="line"></span><br><span class="line">&lt;%=Html.ActionLink(<span class="string">&quot;这是一个连接&quot;</span>, <span class="string">&quot;Index&quot;</span>,<span class="literal">null</span>, <span class="keyword">new</span> &#123; id=<span class="string">&quot;link1&quot;</span> &#125;)%&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">//QueryString与Html属性同时存在</span></span><br><span class="line"></span><br><span class="line">&lt;%=Html.ActionLink(<span class="string">&quot;这是一个连接&quot;</span>, <span class="string">&quot;Index&quot;</span>, <span class="string">&quot;Home&quot;</span>, <span class="keyword">new</span> &#123; page = <span class="number">1</span> &#125;, <span class="keyword">new</span> &#123; id = <span class="string">&quot;link1&quot;</span> &#125;)%&gt;&lt;%=Html.ActionLink(<span class="string">&quot;这是一个连接&quot;</span>, <span class="string">&quot;Index&quot;</span> , <span class="keyword">new</span> &#123; page = <span class="number">1</span> &#125;, <span class="keyword">new</span> &#123; id = <span class="string">&quot;link1&quot;</span> &#125;)%&gt; </span><br><span class="line"></span><br><span class="line"><span class="comment">//生成结果为：</span></span><br><span class="line"></span><br><span class="line">&lt; a href=<span class="string">&quot;/&quot;</span>&gt; 这是一个连接 &lt; /a &gt; </span><br><span class="line"></span><br><span class="line"><span class="comment">//带有QueryString的写法</span></span><br><span class="line"></span><br><span class="line">&lt; a href=<span class="string">&quot;/?page=1&quot;</span>&gt;这是一个连接&lt; /a&gt;</span><br><span class="line"></span><br><span class="line">&lt; a href=<span class="string">&quot;/?page=1&quot;</span>&gt;这是一个连接&lt; /a&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">//有其它Html属性的写法</span></span><br><span class="line"></span><br><span class="line">&lt; a href=<span class="string">&quot;/?Length=4&quot;</span> id=<span class="string">&quot;link1&quot;</span>&gt;这是一个连接&lt; /a&gt;</span><br><span class="line"></span><br><span class="line">&lt; a href=<span class="string">&quot;/&quot;</span> id=<span class="string">&quot;link1&quot;</span>&gt;这是一个连接&lt; /a&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">//QueryString与Html属性同时存在</span></span><br><span class="line"></span><br><span class="line">&lt; a href=<span class="string">&quot;/?page=1&quot;</span> id=<span class="string">&quot;link1&quot;</span>&gt;这是一个连接&lt; /a&gt;</span><br><span class="line"></span><br><span class="line">&lt; a href=<span class="string">&quot;/?page=1&quot;</span> id=<span class="string">&quot;link1&quot;</span>&gt;这是一个连接&lt; /a&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>RouteLink</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">跟ActionLink在功能上一样。</span><br><span class="line">&lt;%=Html.RouteLink(<span class="string">&quot;关于&quot;</span>, <span class="string">&quot;about&quot;</span>, <span class="keyword">new</span> &#123; &#125;)%&gt;</span><br><span class="line">带QueryString</span><br><span class="line">&lt;%=Html.RouteLink(<span class="string">&quot;关于&quot;</span>, <span class="string">&quot;about&quot;</span>, <span class="keyword">new</span> &#123; page = <span class="number">1</span> &#125;)%&gt;</span><br><span class="line">&lt;%=Html.RouteLink(<span class="string">&quot;关于&quot;</span>, <span class="string">&quot;about&quot;</span>, <span class="keyword">new</span> &#123; page = <span class="number">1</span> &#125;, <span class="keyword">new</span> &#123; id = <span class="string">&quot;link1&quot;</span> &#125;)%&gt;</span><br><span class="line"> </span><br><span class="line">生成结果：</span><br><span class="line">&lt;a href=<span class="string">&quot;/about&quot;</span>&gt;关于&lt;/a&gt;</span><br><span class="line">&lt;a href=<span class="string">&quot;/about?page=1&quot;</span>&gt;关于&lt;/a&gt;</span><br><span class="line">&lt;a href=<span class="string">&quot;/about?page=1&quot;</span> id=<span class="string">&quot;link1&quot;</span>&gt;关于&lt;/a&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li>Form 2种方法</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="keyword">using</span>(Html.BeginForm(<span class="string">&quot;index&quot;</span>,<span class="string">&quot;home&quot;</span>,FormMethod.Post))&#123;%&gt;</span><br><span class="line">&lt;%&#125; %&gt;</span><br><span class="line"> </span><br><span class="line">&lt;%Html.BeginForm(<span class="string">&quot;index&quot;</span>, <span class="string">&quot;home&quot;</span>, FormMethod.Post);<span class="comment">//注意这里没有=输出%&gt;</span></span><br><span class="line">&lt;%Html.EndForm(); %&gt;</span><br><span class="line">    </span><br><span class="line"> <span class="comment">//生成结果：</span></span><br><span class="line">&lt;form action=<span class="string">&quot;/home/index&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;&lt;/form&gt;</span><br></pre></td></tr></table></figure><ol start="4"><li>TextBox , Hidden ,</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;%=Html.TextBox(<span class="string">&quot;input1&quot;</span>) %&gt;</span><br><span class="line">&lt;%=Html.TextBox(<span class="string">&quot;input2&quot;</span>,Model.CategoryName,<span class="keyword">new</span>&#123; @style = <span class="string">&quot;width:300px;&quot;</span> &#125;) %&gt;</span><br><span class="line">&lt;%=Html.TextBox(<span class="string">&quot;input3&quot;</span>, ViewData[<span class="string">&quot;Name&quot;</span>],<span class="keyword">new</span>&#123; @style = <span class="string">&quot;width:300px;&quot;</span> &#125;) %&gt;</span><br><span class="line">&lt;%=Html.TextBoxFor(a =&gt; a.CategoryName, <span class="keyword">new</span> &#123; @style = <span class="string">&quot;width:300px;&quot;</span> &#125;)%&gt;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//生成结果：</span></span><br><span class="line"> </span><br><span class="line">&lt;input id=<span class="string">&quot;input1&quot;</span> name=<span class="string">&quot;input1&quot;</span> type=<span class="string">&quot;text&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;&quot;</span> /&gt;</span><br><span class="line">&lt;input id=<span class="string">&quot;input2&quot;</span> name=<span class="string">&quot;input2&quot;</span> style=<span class="string">&quot;width:300px;&quot;</span> type=<span class="string">&quot;text&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;Beverages&quot;</span> /&gt;</span><br><span class="line">&lt;input id=<span class="string">&quot;input3&quot;</span> name=<span class="string">&quot;input3&quot;</span> style=<span class="string">&quot;width:300px;&quot;</span> type=<span class="string">&quot;text&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;&quot;</span> /&gt;</span><br><span class="line">&lt;input id=<span class="string">&quot;CategoryName&quot;</span> name=<span class="string">&quot;CategoryName&quot;</span> style=<span class="string">&quot;width:300px;&quot;</span> type=<span class="string">&quot;text&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;Beverages&quot;</span> /&gt;</span><br></pre></td></tr></table></figure><ol start="5"><li>TextArea</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;%=Html.TextArea(<span class="string">&quot;input5&quot;</span>, Model.CategoryName, <span class="number">3</span>, <span class="number">9</span>,<span class="literal">null</span>)%&gt;</span><br><span class="line">&lt;%=Html.TextAreaFor(a =&gt; a.CategoryName, <span class="number">3</span>, <span class="number">3</span>, <span class="literal">null</span>)%&gt;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//生成结果：</span></span><br><span class="line">&lt;textarea cols=<span class="string">&quot;9&quot;</span> id=<span class="string">&quot;input5&quot;</span> name=<span class="string">&quot;input5&quot;</span> rows=<span class="string">&quot;3&quot;</span>&gt;Beverages&lt;/textarea&gt;</span><br><span class="line">&lt;textarea cols=<span class="string">&quot;3&quot;</span> id=<span class="string">&quot;CategoryName&quot;</span> name=<span class="string">&quot;CategoryName&quot;</span> rows=<span class="string">&quot;3&quot;</span>&gt;Beverages&lt;/textarea&gt;</span><br><span class="line"> </span><br></pre></td></tr></table></figure><ol start="6"><li>CheckBox</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;%=Html.CheckBox(<span class="string">&quot;chk1&quot;</span>,<span class="literal">true</span>) %&gt;</span><br><span class="line">&lt;%=Html.CheckBox(<span class="string">&quot;chk1&quot;</span>, <span class="keyword">new</span> &#123; @class=<span class="string">&quot;checkBox&quot;</span>&#125;) %&gt;</span><br><span class="line">&lt;%=Html.CheckBoxFor(a =&gt;a.IsVaild, <span class="keyword">new</span> &#123; @class = <span class="string">&quot;checkBox&quot;</span> &#125;)%&gt;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//生成结果：</span></span><br><span class="line"> </span><br><span class="line">&lt;input checked=<span class="string">&quot;checked&quot;</span> id=<span class="string">&quot;chk1&quot;</span> name=<span class="string">&quot;chk1&quot;</span> type=<span class="string">&quot;checkbox&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;true&quot;</span> /&gt;&lt;input name=<span class="string">&quot;chk1&quot;</span> type=<span class="string">&quot;hidden&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span><br><span class="line"> </span><br><span class="line">&lt;input <span class="keyword">class</span>=<span class="string">&quot;checkBox&quot;</span> id=<span class="string">&quot;chk1&quot;</span> name=<span class="string">&quot;chk1&quot;</span> type=<span class="string">&quot;checkbox&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;true&quot;</span> /&gt;&lt;input name=<span class="string">&quot;chk1&quot;</span> type=<span class="string">&quot;hidden&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span><br><span class="line"> </span><br><span class="line">&lt;input checked=<span class="string">&quot;checked&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;checkBox&quot;</span> id=<span class="string">&quot;IsVaild&quot;</span> name=<span class="string">&quot;IsVaild&quot;</span> type=<span class="string">&quot;checkbox&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;true&quot;</span> /&gt;&lt;input name=<span class="string">&quot;IsVaild&quot;</span> type=<span class="string">&quot;hidden&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span><br><span class="line"> </span><br></pre></td></tr></table></figure><ol start="7"><li>ListBox</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;%=Html.ListBox(<span class="string">&quot;lstBox1&quot;</span>,(SelectList)ViewData[<span class="string">&quot;Categories&quot;</span>])%&gt;</span><br><span class="line">&lt;%=Html.ListBoxFor(a =&gt; a.CategoryName, (SelectList)ViewData[<span class="string">&quot;Categories&quot;</span>])%&gt;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//生成结果：</span></span><br><span class="line">&lt;<span class="keyword">select</span> id=<span class="string">&quot;lstBox1&quot;</span> multiple=<span class="string">&quot;multiple&quot;</span> name=<span class="string">&quot;lstBox1&quot;</span>&gt;</span><br><span class="line">&lt;option <span class="keyword">value</span>=<span class="string">&quot;1&quot;</span>&gt;Beverages&lt;/option&gt;</span><br><span class="line">&lt;option <span class="keyword">value</span>=<span class="string">&quot;2&quot;</span>&gt;Condiments&lt;/option&gt;</span><br><span class="line">&lt;option selected=<span class="string">&quot;selected&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;3&quot;</span>&gt;Confections&lt;/option&gt;</span><br><span class="line">&lt;option <span class="keyword">value</span>=<span class="string">&quot;4&quot;</span>&gt;Dairy Products&lt;/option&gt;</span><br><span class="line">&lt;option <span class="keyword">value</span>=<span class="string">&quot;5&quot;</span>&gt;Grains/Cereals&lt;/option&gt;</span><br><span class="line">&lt;option <span class="keyword">value</span>=<span class="string">&quot;6&quot;</span>&gt;Meat/Poultry&lt;/option&gt;</span><br><span class="line">&lt;option <span class="keyword">value</span>=<span class="string">&quot;7&quot;</span>&gt;Produce&lt;/option&gt;</span><br><span class="line">&lt;option <span class="keyword">value</span>=<span class="string">&quot;8&quot;</span>&gt;Seafood&lt;/option&gt;</span><br><span class="line">&lt;/<span class="keyword">select</span>&gt;</span><br><span class="line">&lt;<span class="keyword">select</span> id=<span class="string">&quot;CategoryName&quot;</span> multiple=<span class="string">&quot;multiple&quot;</span> name=<span class="string">&quot;CategoryName&quot;</span>&gt;</span><br><span class="line">&lt;option <span class="keyword">value</span>=<span class="string">&quot;1&quot;</span>&gt;Beverages&lt;/option&gt;</span><br><span class="line">&lt;option <span class="keyword">value</span>=<span class="string">&quot;2&quot;</span>&gt;Condiments&lt;/option&gt;</span><br><span class="line">&lt;option <span class="keyword">value</span>=<span class="string">&quot;3&quot;</span>&gt;Confections&lt;/option&gt;</span><br><span class="line">&lt;option <span class="keyword">value</span>=<span class="string">&quot;4&quot;</span>&gt;Dairy Products&lt;/option&gt;</span><br><span class="line">&lt;option <span class="keyword">value</span>=<span class="string">&quot;5&quot;</span>&gt;Grains/Cereals&lt;/option&gt;</span><br><span class="line">&lt;option <span class="keyword">value</span>=<span class="string">&quot;6&quot;</span>&gt;Meat/Poultry&lt;/option&gt;</span><br><span class="line">&lt;option <span class="keyword">value</span>=<span class="string">&quot;7&quot;</span>&gt;Produce&lt;/option&gt;</span><br><span class="line">&lt;option <span class="keyword">value</span>=<span class="string">&quot;8&quot;</span>&gt;Seafood&lt;/option&gt;</span><br><span class="line">&lt;/<span class="keyword">select</span>&gt;</span><br><span class="line"> </span><br></pre></td></tr></table></figure><ol start="8"><li>DropDownList</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;%= Html.DropDownList(<span class="string">&quot;ddl1&quot;</span>, (SelectList)ViewData[<span class="string">&quot;Categories&quot;</span>],  <span class="string">&quot;--Select One--&quot;</span>)%&gt;</span><br><span class="line">&lt;%=Html.DropDownListFor(a =&gt; a.CategoryName, (SelectList)ViewData[<span class="string">&quot;Categories&quot;</span>], <span class="string">&quot;--Select One--&quot;</span>, <span class="keyword">new</span> &#123; @class = <span class="string">&quot;dropdownlist&quot;</span> &#125;)%&gt;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//生成结果：</span></span><br><span class="line">&lt;<span class="keyword">select</span> id=<span class="string">&quot;ddl1&quot;</span> name=<span class="string">&quot;ddl1&quot;</span>&gt;</span><br><span class="line">&lt;option <span class="keyword">value</span>=<span class="string">&quot;&quot;</span>&gt;--Select One--&lt;/option&gt;</span><br><span class="line">&lt;option <span class="keyword">value</span>=<span class="string">&quot;1&quot;</span>&gt;Beverages&lt;/option&gt;</span><br><span class="line">&lt;option <span class="keyword">value</span>=<span class="string">&quot;2&quot;</span>&gt;Condiments&lt;/option&gt;</span><br><span class="line">&lt;option selected=<span class="string">&quot;selected&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;3&quot;</span>&gt;Confections&lt;/option&gt;</span><br><span class="line">&lt;option <span class="keyword">value</span>=<span class="string">&quot;4&quot;</span>&gt;Dairy Products&lt;/option&gt;</span><br><span class="line">&lt;option <span class="keyword">value</span>=<span class="string">&quot;5&quot;</span>&gt;Grains/Cereals&lt;/option&gt;</span><br><span class="line">&lt;option <span class="keyword">value</span>=<span class="string">&quot;6&quot;</span>&gt;Meat/Poultry&lt;/option&gt;</span><br><span class="line">&lt;option <span class="keyword">value</span>=<span class="string">&quot;7&quot;</span>&gt;Produce&lt;/option&gt;</span><br><span class="line">&lt;option <span class="keyword">value</span>=<span class="string">&quot;8&quot;</span>&gt;Seafood&lt;/option&gt;</span><br><span class="line">&lt;/<span class="keyword">select</span>&gt;</span><br><span class="line">&lt;<span class="keyword">select</span> <span class="keyword">class</span>=<span class="string">&quot;dropdownlist&quot;</span> id=<span class="string">&quot;CategoryName&quot;</span> name=<span class="string">&quot;CategoryName&quot;</span>&gt;</span><br><span class="line">&lt;option <span class="keyword">value</span>=<span class="string">&quot;&quot;</span>&gt;--Select One--&lt;/option&gt;</span><br><span class="line">&lt;option <span class="keyword">value</span>=<span class="string">&quot;1&quot;</span>&gt;Beverages&lt;/option&gt;</span><br><span class="line">&lt;option <span class="keyword">value</span>=<span class="string">&quot;2&quot;</span>&gt;Condiments&lt;/option&gt;</span><br><span class="line">&lt;option <span class="keyword">value</span>=<span class="string">&quot;3&quot;</span>&gt;Confections&lt;/option&gt;</span><br><span class="line">&lt;option <span class="keyword">value</span>=<span class="string">&quot;4&quot;</span>&gt;Dairy Products&lt;/option&gt;</span><br><span class="line">&lt;option <span class="keyword">value</span>=<span class="string">&quot;5&quot;</span>&gt;Grains/Cereals&lt;/option&gt;</span><br><span class="line">&lt;option <span class="keyword">value</span>=<span class="string">&quot;6&quot;</span>&gt;Meat/Poultry&lt;/option&gt;</span><br><span class="line">&lt;option <span class="keyword">value</span>=<span class="string">&quot;7&quot;</span>&gt;Produce&lt;/option&gt;</span><br><span class="line">&lt;option <span class="keyword">value</span>=<span class="string">&quot;8&quot;</span>&gt;Seafood&lt;/option&gt;</span><br><span class="line">&lt;/<span class="keyword">select</span>&gt;</span><br></pre></td></tr></table></figure><ol start="9"><li>Partial 视图模板</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//webform里叫自定义控件。功能都是为了复用。但使用上自定义控件真的很难用好。</span></span><br><span class="line">&lt;% Html.RenderPartial(<span class="string">&quot;DinnerForm&quot;</span>); %&gt;  看清楚了没有等号的。</span><br><span class="line"> </span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> mvc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库设计-几种范式</title>
      <link href="/RookieRoom/2020/04/28/shu-ju-ku-she-ji-ji-chong-fan-shi/"/>
      <url>/RookieRoom/2020/04/28/shu-ju-ku-she-ji-ji-chong-fan-shi/</url>
      
        <content type="html"><![CDATA[<h2 id="数据库的设计"><a href="#数据库的设计" class="headerlink" title="数据库的设计:"></a>数据库的设计:</h2><h3 id="1-多表之间的关系"><a href="#1-多表之间的关系" class="headerlink" title="1.多表之间的关系"></a>1.多表之间的关系</h3><h4 id="1-分类"><a href="#1-分类" class="headerlink" title="1.分类"></a>1.分类</h4><blockquote><p>1)一对一(了解)<br>如:人和身份证<br>分析:一个人只有一个身份证，一个身份证也只能对一个人<br>2).一对多(多对一)<br>    如:部门和员工<br>    分析:一个部门有多个员工，一个员工只能对应一个部门3).多对多<br>    如:学生和课程<br>    分析:一个学生可以选择很多门课程，一个课程也可以被多个学生选择</p></blockquote><span id="more"></span><h4 id="2-实现关系"><a href="#2-实现关系" class="headerlink" title="2.实现关系"></a>2.实现关系</h4><blockquote><p>1)一对多(多对一)  部门(主键叫部门ID)和员工(外键部门ID)<br>        实现方式:在多的一方建立外键，执向一的一方的主键2).多对多关系   学生(ID)和课程(ID)<br>       实现方式:多对多关系实现需要借助第三张表，中间表至少包含两个字段<br>   这两个字段作为第三张表的外键，分别指向两张表的主键<br>3).一对一  人和身份证<br>        实现方式:可以在任意一方添加唯一外键指向另一方的主键</p></blockquote><h3 id="2-数据库设计的范式"><a href="#2-数据库设计的范式" class="headerlink" title="2.数据库设计的范式"></a>2.数据库设计的范式</h3><blockquote><p> 设计关系数据库时，遵从不同的规范要求，设计出合理的关系型数据库，这些不同的规范要求被称为不同的范式，<br> 各种范式呈递次规范，越高的范式数据库冗余越小。</p></blockquote><h3 id="目前关系数据库有六种范式"><a href="#目前关系数据库有六种范式" class="headerlink" title="目前关系数据库有六种范式"></a>目前关系数据库有六种范式</h3><blockquote><p>第一范式（1NF）、第二范式（2NF）、第三范式（3NF）、<br>巴斯-科德范式（BCNF）、第四范式(4NF）和第五范式（5NF，又称完美范式）。</p></blockquote><h4 id="第一范式（1NF"><a href="#第一范式（1NF" class="headerlink" title="第一范式（1NF):"></a>第一范式（1NF):</h4><blockquote><p>即数据库表的每一列都是不可分割的原子数据项，而不能是集合，数组</p></blockquote><h4 id="第二范式-2NF-："><a href="#第二范式-2NF-：" class="headerlink" title="第二范式(2NF)："></a>第二范式(2NF)：</h4><blockquote><p>在1NF的基础上，非码属性必须完全依赖于码（在1NF基础上消除非主属性对主码的部分函数依赖）</p></blockquote><h5 id="几个概念"><a href="#几个概念" class="headerlink" title="几个概念:"></a>几个概念:</h5><blockquote><p> 1.函数依赖:A–&gt;B  如果通过A属性(属性组)的值，可以确定唯一的B属性的值，则称B依赖于A</p><p> ​                     学号–&gt;姓名   （学号，课程名）–&gt;分数</p><p> 2.完全函数依赖：A—&gt;B 如果A是一个属性组，则B属性值的确定需要依赖于A属性组中的所有属性</p><p> ​                    学号，课程名—&gt;分数  完全依赖</p><p> 3.部分函数依赖：A–&gt;B  如果A是一个属性组，则B属性的值确定需要依赖于A属性组中某一些值即可。</p><p> ​                        例如：学号，课程名–&gt;姓名</p><p> 4.传递函数依赖，A–&gt;B  B–&gt;C 如果通过A属性(属性组)的值，可以确定唯一的B属性的值，在通过B属性(属性组)的值</p><p> ​     可以确定唯一的C属性，则称，C传递函数依赖于A<br> ​               学号–&gt;系名–&gt;系主任</p><p> 5.码:如果在一张表中，一个属性或属性组，被其他属性所完全依赖，则称这个属性（属性组）为该表的码。</p><p> ​                例如:本表的码为（学号，课程名）<br> ​                 主属性：码属性组中的所有属性  学号 课程名<br> ​                 非主属性:除码属性组之外的所有属性 </p></blockquote><h4 id="第三范式-3NF-："><a href="#第三范式-3NF-：" class="headerlink" title="第三范式(3NF)："></a>第三范式(3NF)：</h4><blockquote><p>在2NF基础上，任何非主属性不依赖于其它非主属性（在2NF基础上消除传递依赖） 偶数</p></blockquote><h2 id="资料链接："><a href="#资料链接：" class="headerlink" title="资料链接："></a>资料链接：</h2><p><a href="https://baike.so.com/doc/4367825-4573590.html">https://baike.so.com/doc/4367825-4573590.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>什么是sqlStructured Query  Language结构化查询语言</title>
      <link href="/RookieRoom/2020/04/28/shi-me-shi-sqlstructured-query-language-jie-gou-hua-cha-xun-yu-yan/"/>
      <url>/RookieRoom/2020/04/28/shi-me-shi-sqlstructured-query-language-jie-gou-hua-cha-xun-yu-yan/</url>
      
        <content type="html"><![CDATA[<p>定义了操作所有关系型数据库的规则，每一种数据库操作的方式存<br>在不一样的地方，称为方言  Sql server</p>]]></content>
      
      
      
        <tags>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sql通用语法</title>
      <link href="/RookieRoom/2020/04/28/sql-tong-yong-yu-fa/"/>
      <url>/RookieRoom/2020/04/28/sql-tong-yong-yu-fa/</url>
      
        <content type="html"><![CDATA[<p>1.SQL语句可以单行或多行书写，以分号结束<br>2.可以使用空格或缩进来增强语句的可读性<br>3.MySQL数据库的SQL语句不区分大小写，关键字建议使用大写<br>4.MySQL 注释  单行–<br>         多行注释  &#x2F;*   *&#x2F;<br>         注释内容  #(mysql  特有)<br>5.SQL分类<br>        DDL：Data Definition Language  定义<br>                    定义数据库对象:数据库，表，列 Create drop  alter<br>        DCL：Data Control Language<br>                    数据库控制语言<br>                    访问权限和安全级别，REMOVE  Grank<br>         DML：Data Manipulation Language<br>                     数据库操作语言:<br>                     数据库中的表进行增删改： insert   delete  update<br>       DQL:Data Query Language<br>                     数据库查询语言  Select  where等                            </p>]]></content>
      
      
      
        <tags>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript的window.onload事件和jQuery的ready函数有何不同 </title>
      <link href="/RookieRoom/2020/04/28/javascript-de-windowonload-shi-jian-he-jquery-de-ready-han-shu-you-he-bu-tong/"/>
      <url>/RookieRoom/2020/04/28/javascript-de-windowonload-shi-jian-he-jquery-de-ready-han-shu-you-he-bu-tong/</url>
      
        <content type="html"><![CDATA[<p>JavaScript window.onload 事件和 jQuery ready 函数之间的主要区别是，前者除了要等待 DOM 被创建还要等到包括大型图片、音频、视频在内的所有外部资源都完全加载。如果加载图片和媒体内容花费了大量时间，用户就会感受到定义在 window.onload 事件上的代码在执行时有明显的延迟。<br>另一方面，jQuery ready() 函数只需对 DOM 树的等待，而无需对图像或外部资源加载的等待，从而执行起来更快。使用 jQuery $(document).ready() 的另一个优势是你可以在网页里多次使用它，浏览器会按它们在 HTML 页面里出现的顺序执行它们，相反对于 onload 技术而言，只能在单一函数里使用。鉴于这个好处，用 jQuery ready() 函数比用 JavaScript window.onload 事件要更好些。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>svn解除版本控制</title>
      <link href="/RookieRoom/2020/04/28/svn-jie-chu-ban-ben-kong-zhi/"/>
      <url>/RookieRoom/2020/04/28/svn-jie-chu-ban-ben-kong-zhi/</url>
      
        <content type="html"><![CDATA[<p>一个项目如果提交到SVN之后，就会在文件夹左下方出现绿色或红色的圆形图标，如果想把该项目引入到另一个项目中去，会发现不能被识别出来，这时候要解除版本控制，解除方法挺诡异的：<br>在要解除版本控制的文件夹右键TortoiseSVN–&gt;Export–&gt;选择同一个文件夹（目标文件夹一定要和你右击的文件夹是同一个文件夹），这时就会出现“是否解除版本控制”的对话框。 </p>]]></content>
      
      
      
        <tags>
            
            <tag> svn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实现前端点击按钮自动复制剪贴板功能</title>
      <link href="/RookieRoom/2020/04/28/shi-xian-qian-duan-dian-ji-an-niu-zi-dong-fu-zhi-jian-tie-ban-gong-neng/"/>
      <url>/RookieRoom/2020/04/28/shi-xian-qian-duan-dian-ji-an-niu-zi-dong-fu-zhi-jian-tie-ban-gong-neng/</url>
      
        <content type="html"><![CDATA[<p>【目录】</p><ul><li>明确需求</li><li>html分析<ul><li>代码实现</li></ul></li><li>css分析</li><li>js分析<ul><li>代码实现</li></ul></li></ul><p>只要是文本，长按选中就可以复制，但是需求来了挡也挡不住：</p><h2 id="明确需求"><a href="#明确需求" class="headerlink" title="明确需求"></a>明确需求</h2><p>为了提升用户体验，点击【复制】按钮就自动复制到剪贴板，那么就需要前端实现这种功能了。</p><span id="more"></span><p>首先明确了需求就先看一下最终图片：</p><p><img src="https://user-gold-cdn.xitu.io/2018/5/7/163392f99478483e?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"></p><h2 id="html分析"><a href="#html分析" class="headerlink" title="html分析"></a>html分析</h2><p>左边是一个input的文本框，只读，右边是一个按钮。</p><h3 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--左边是一个input输入框，要求只读，而且里面的内容通过url?后面的code传入--&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;AJS4EFS&quot;</span> <span class="attr">readonly</span> <span class="attr">id</span>=<span class="string">&quot;textAreas&quot;</span>/&gt;</span></span></span><br><span class="line">&lt;!--右边是一个按钮--&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cuteShareBtn&quot;</span> <span class="attr">id</span>=<span class="string">&quot;copy&quot;</span>&gt;</span>复制<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="css分析"><a href="#css分析" class="headerlink" title="css分析"></a>css分析</h2><p>这种东西就跳过吧，不是重点。</p><h2 id="js分析"><a href="#js分析" class="headerlink" title="js分析"></a>js分析</h2><ol><li>点击按钮获取input对象</li></ol><blockquote><p>解决方法：</p><ol><li>如果使用的jquery，那么直接$(“#textArea”).select()选中的就是这个input对象</li><li>如果使用的zepto，上面的方法是获取到的zepto对象是不支持原生select()方法的，那么就使用原生的办法 <code>var obj = document.getElementById(&quot;textAreas&quot;);</code> <code>obj.select();</code></li></ol></blockquote><p>​    2.然后复制到剪贴板</p><p>两行？看起来是不是很简单？哈哈~那你就错了，这里面是有坑的。 第一目前没有一个很完美的方法可以兼容各个浏览器和移动端，引用插件也是一样的。 查了半天最好的办法就是使用 <strong>document.execCommand(“Copy”)</strong> 兼容性是不错的：</p><p><img src="https://user-gold-cdn.xitu.io/2018/5/7/163392f994522bd0?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"></p><p><img src="https://user-gold-cdn.xitu.io/2018/5/7/163392f9946584e9?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"></p><p>手机安卓支持到4.1、各种浏览器是可以的，<strong>但是唯独ios是不支持的</strong>，来给我把刀，ios你这玩意你限制是干什么？是要保护手机安全还是咋的。 所以只是<strong>pc端</strong> 使用那么就下面几行代码就可以搞定了：</p><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//复制按钮事件绑定</span></span><br><span class="line">$(<span class="string">&quot;#copy&quot;</span>).<span class="title function_">on</span>(<span class="string">&quot;tap&quot;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="comment">//获取input对象</span></span><br><span class="line">  <span class="keyword">var</span> obj = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;textAreas&quot;</span>);</span><br><span class="line">  <span class="comment">//选择当前对象</span></span><br><span class="line">  obj.<span class="title function_">select</span>(); </span><br><span class="line">  <span class="keyword">try</span>&#123;</span><br><span class="line">    <span class="comment">//进行复制到剪切板</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">document</span>.<span class="title function_">execCommand</span>(<span class="string">&quot;Copy&quot;</span>,<span class="string">&quot;false&quot;</span>,<span class="literal">null</span>))&#123;</span><br><span class="line">      <span class="comment">//如果复制成功</span></span><br><span class="line">      <span class="title function_">alert</span>(<span class="string">&quot;复制成功！&quot;</span>);  </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="comment">//如果复制失败</span></span><br><span class="line">      <span class="title function_">alert</span>(<span class="string">&quot;复制失败！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;<span class="keyword">catch</span>(err)&#123;</span><br><span class="line">    <span class="comment">//如果报错</span></span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;复制错误！&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>那如果是<strong>移动端</strong> 的话，就要兼容IOS，但是依然在iPhone5的10.2的系统中，依然显示复制失败，由于用户使用率较低，兼容就做到这里，那些用户你们就自己手动复制吧。 下面的两种方法都可以进行复制，因为核心代码就那么几行，先来简单的：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#copy&quot;</span>).<span class="title function_">on</span>(<span class="string">&quot;tap&quot;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="comment">//获取input对象</span></span><br><span class="line">  <span class="keyword">var</span> obj = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;textAreas&quot;</span>);</span><br><span class="line">  <span class="comment">//如果是ios端</span></span><br><span class="line">  <span class="keyword">if</span>(isiOSDevice)&#123;</span><br><span class="line">    <span class="comment">// 获取元素内容是否可编辑和是否只读</span></span><br><span class="line">    <span class="keyword">var</span> editable = obj.<span class="property">contentEditable</span>;</span><br><span class="line">    <span class="keyword">var</span> readOnly = obj.<span class="property">readOnly</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将对象变成可编辑的</span></span><br><span class="line">    obj.<span class="property">contentEditable</span> = <span class="literal">true</span>;</span><br><span class="line">    obj.<span class="property">readOnly</span> = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建一个Range对象，Range 对象表示文档的连续范围区域，如用户在浏览器窗口中用鼠标拖动选中的区域</span></span><br><span class="line">    <span class="keyword">var</span> range = <span class="variable language_">document</span>.<span class="title function_">createRange</span>();</span><br><span class="line">   <span class="comment">//获取obj的内容作为选中的范围</span></span><br><span class="line">    range.<span class="title function_">selectNodeContents</span>(obj);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> selection = <span class="variable language_">window</span>.<span class="title function_">getSelection</span>();</span><br><span class="line">    selection.<span class="title function_">removeAllRanges</span>();</span><br><span class="line">    selection.<span class="title function_">addRange</span>(range);</span><br><span class="line"></span><br><span class="line">    obj.<span class="title function_">setSelectionRange</span>(<span class="number">0</span>, <span class="number">999999</span>);  <span class="comment">//选择范围，确保全选</span></span><br><span class="line">    <span class="comment">//恢复原来的状态</span></span><br><span class="line">    obj.<span class="property">contentEditable</span> = editable;</span><br><span class="line">    obj.<span class="property">readOnly</span> = readOnly;</span><br><span class="line">    <span class="comment">//如果是安卓端    </span></span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    obj.<span class="title function_">select</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">try</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">document</span>.<span class="title function_">execCommand</span>(<span class="string">&quot;Copy&quot;</span>,<span class="string">&quot;false&quot;</span>,<span class="literal">null</span>))&#123;</span><br><span class="line">      <span class="title function_">alert</span>(<span class="string">&quot;复制成功！&quot;</span>);  </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="title function_">alert</span>(<span class="string">&quot;复制失败！请手动复制！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;<span class="keyword">catch</span>(err)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;复制错误！请手动复制！&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>下面是一个比较完整的升级版方法，和插件Clipboard.js一样，不过代码不多，就直接拿来用好了。 这个获取的不是input对象，而是需要复制的内容。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义函数</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="property">Clipboard</span> = (<span class="keyword">function</span>(<span class="params"><span class="variable language_">window</span>, <span class="variable language_">document</span>, navigator</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> textArea,</span><br><span class="line">      copy;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 判断是不是ios端</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">isOS</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> navigator.<span class="property">userAgent</span>.<span class="title function_">match</span>(<span class="regexp">/ipad|iphone/i</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//创建文本元素</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">createTextArea</span>(<span class="params">text</span>) &#123;</span><br><span class="line">    textArea = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;textArea&#x27;</span>);</span><br><span class="line">    textArea.<span class="property">value</span> = text;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(textArea);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//选择内容</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">selectText</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> range,</span><br><span class="line">        selection;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_">isOS</span>()) &#123;</span><br><span class="line">      range = <span class="variable language_">document</span>.<span class="title function_">createRange</span>();</span><br><span class="line">      range.<span class="title function_">selectNodeContents</span>(textArea);</span><br><span class="line">      selection = <span class="variable language_">window</span>.<span class="title function_">getSelection</span>();</span><br><span class="line">      selection.<span class="title function_">removeAllRanges</span>();</span><br><span class="line">      selection.<span class="title function_">addRange</span>(range);</span><br><span class="line">      textArea.<span class="title function_">setSelectionRange</span>(<span class="number">0</span>, <span class="number">999999</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      textArea.<span class="title function_">select</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//复制到剪贴板</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">copyToClipboard</span>(<span class="params"></span>) &#123;        </span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">      <span class="keyword">if</span>(<span class="variable language_">document</span>.<span class="title function_">execCommand</span>(<span class="string">&quot;Copy&quot;</span>))&#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;复制成功！&quot;</span>);  </span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;复制失败！请手动复制！&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;<span class="keyword">catch</span>(err)&#123;</span><br><span class="line">      <span class="title function_">alert</span>(<span class="string">&quot;复制错误！请手动复制！&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">removeChild</span>(textArea);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  copy = <span class="keyword">function</span>(<span class="params">text</span>) &#123;</span><br><span class="line">    <span class="title function_">createTextArea</span>(text);</span><br><span class="line">    <span class="title function_">selectText</span>();</span><br><span class="line">    <span class="title function_">copyToClipboard</span>();</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">copy</span>: copy</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)(<span class="variable language_">window</span>, <span class="variable language_">document</span>, navigator);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用函数</span></span><br><span class="line">$(<span class="string">&quot;#copy&quot;</span>).<span class="title function_">on</span>(<span class="string">&quot;tap&quot;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">var</span>  val = $(<span class="string">&quot;#textAreas&quot;</span>).<span class="title function_">val</span>();</span><br><span class="line">  <span class="title class_">Clipboard</span>.<span class="title function_">copy</span>(val);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>这样就实现了前端点击按钮自动复制剪贴板的功能。 version1.0 —— 2018&#x2F;5&#x2F;6，首次创建实现前端点击按钮自动复制剪贴板功能 ©burning_韵七七</p><p>转自掘金：<a href="https://juejin.im/post/5aefeb6e6fb9a07aa43c20af">https://juejin.im/post/5aefeb6e6fb9a07aa43c20af</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Test</title>
      <link href="/RookieRoom/2020/04/27/test/"/>
      <url>/RookieRoom/2020/04/27/test/</url>
      
        <content type="html"><![CDATA[<p><img src="http://news.mydrivers.com/Img/20120315/2012031510342639.jpg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Test </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
