<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小菜鸟的温暖小窝</title>
  
  
  <link href="https://kdt-g.github.io/atom.xml" rel="self"/>
  
  <link href="https://kdt-g.github.io/"/>
  <updated>2022-03-30T16:18:58.016Z</updated>
  <id>https://kdt-g.github.io/</id>
  
  <author>
    <name>小菜鸟</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linq：使用Take和Skip实现分页</title>
    <link href="https://kdt-g.github.io/2022/03/28/Linq%EF%BC%9A%E4%BD%BF%E7%94%A8Take%E5%92%8CSkip%E5%AE%9E%E7%8E%B0%E5%88%86%E9%A1%B5/"/>
    <id>https://kdt-g.github.io/2022/03/28/Linq%EF%BC%9A%E4%BD%BF%E7%94%A8Take%E5%92%8CSkip%E5%AE%9E%E7%8E%B0%E5%88%86%E9%A1%B5/</id>
    <published>2022-03-27T16:00:00.000Z</published>
    <updated>2022-03-30T16:18:58.016Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Skip，Take："><a href="#Skip，Take：" class="headerlink" title="Skip，Take："></a><strong>Skip，Take：</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list = list.Skip(pageNum * pageSize).Take(pageSize).ToList();</span><br></pre></td></tr></table></figure><p><strong>pageSize</strong> ：表示一页多少条。</p><p><strong>pageNum</strong>：表示页数，但是正确的页数是pageNum + 1。因为pageNum &#x3D; 0，是第一页。pageNum &#x3D; 1的时候，是第二页。</p><p><strong>Ski</strong>p ：表示从第pageNum * pageSize + 1条数据开始，也就是说再这之前有pageNum * pageSize条数据。</p><p><strong>Take</strong>：表示显示多少条数据，也就是pageSize条。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list = list.Skip(5 * 2).Take(2).ToList();</span><br></pre></td></tr></table></figure><p><strong>pageNum</strong> * <strong>pageSize</strong> &#x3D; 10，那么之前已经有10条数据。从第11条数据开始查询。查询2条。这就是第6页显示的内容。</p><span id="more"></span><h3 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码:"></a>参考代码:</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Program</span>   </span><br><span class="line">  &#123;   </span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="built_in">int</span> <span class="title">Main</span>()</span>   </span><br><span class="line">      &#123;   </span><br><span class="line">          <span class="comment">//每页条数   </span></span><br><span class="line">          <span class="keyword">const</span> <span class="built_in">int</span> pageSize = <span class="number">2</span>;   </span><br><span class="line">          <span class="comment">//页码 0也就是第一条 </span></span><br><span class="line">          <span class="built_in">int</span> pageNum = <span class="number">0</span>;   </span><br><span class="line">   </span><br><span class="line">          <span class="comment">//源数据   </span></span><br><span class="line">          <span class="built_in">string</span>[] names = &#123; <span class="string">&quot;刘一&quot;</span>,<span class="string">&quot;陈二&quot;</span>,<span class="string">&quot;张三&quot;</span>,<span class="string">&quot;李四&quot;</span>,<span class="string">&quot;王五&quot;</span>,<span class="string">&quot;赵六&quot;</span>,<span class="string">&quot;孙七&quot;</span>,<span class="string">&quot;周八&quot;</span>,<span class="string">&quot;吴九&quot;</span> &#125;;</span><br><span class="line">   　　　　</span><br><span class="line">          <span class="keyword">while</span> (pageNum * pageSize &lt; names.Length)   </span><br><span class="line">          &#123;   </span><br><span class="line">              <span class="comment">//分页   </span></span><br><span class="line">              <span class="keyword">var</span> query = names.Skip(pageNum * pageSize).Take(pageSize);   </span><br><span class="line">              Console.WriteLine(<span class="string">&quot;输出第&#123;0&#125;页记录&quot;</span>, pageNum + <span class="number">1</span>);   </span><br><span class="line">              <span class="comment">//输出每页内容   </span></span><br><span class="line">              <span class="keyword">foreach</span> (<span class="keyword">var</span> q <span class="keyword">in</span> query)   </span><br><span class="line">              &#123;   </span><br><span class="line">                  Console.WriteLine(q);   </span><br><span class="line">              &#125;   </span><br><span class="line">              pageNum++;   </span><br><span class="line">          &#125;   </span><br><span class="line">   </span><br><span class="line">          Console.ReadKey();   </span><br><span class="line">   </span><br><span class="line">          <span class="keyword">return</span> <span class="number">0</span>;   </span><br><span class="line">      &#125;   </span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="原文链接："><a href="#原文链接：" class="headerlink" title="原文链接："></a>原文链接：</h3><p><strong><a href="https://www.cnblogs.com/cang12138/p/5707841.html">https://www.cnblogs.com/cang12138/p/5707841.html</a></strong></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;Skip，Take：&quot;&gt;&lt;a href=&quot;#Skip，Take：&quot; class=&quot;headerlink&quot; title=&quot;Skip，Take：&quot;&gt;&lt;/a&gt;&lt;strong&gt;Skip，Take：&lt;/strong&gt;&lt;/h3&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;list = list.Skip(pageNum * pageSize).Take(pageSize).ToList();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;pageSize&lt;/strong&gt; ：表示一页多少条。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;pageNum&lt;/strong&gt;：表示页数，但是正确的页数是pageNum + 1。因为pageNum &amp;#x3D; 0，是第一页。pageNum &amp;#x3D; 1的时候，是第二页。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ski&lt;/strong&gt;p ：表示从第pageNum * pageSize + 1条数据开始，也就是说再这之前有pageNum * pageSize条数据。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Take&lt;/strong&gt;：表示显示多少条数据，也就是pageSize条。&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;list = list.Skip(5 * 2).Take(2).ToList();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;pageNum&lt;/strong&gt; * &lt;strong&gt;pageSize&lt;/strong&gt; &amp;#x3D; 10，那么之前已经有10条数据。从第11条数据开始查询。查询2条。这就是第6页显示的内容。&lt;/p&gt;</summary>
    
    
    
    
    <category term="c#" scheme="https://kdt-g.github.io/tags/c/"/>
    
    <category term="有趣的编程知识" scheme="https://kdt-g.github.io/tags/%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BC%96%E7%A8%8B%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>Unity 3d场景中的2d图片辅助线</title>
    <link href="https://kdt-g.github.io/2022/03/28/Unity%203d%E5%9C%BA%E6%99%AF%E4%B8%AD%E7%9A%842d%E5%9B%BE%E7%89%87%E8%BE%85%E5%8A%A9%E7%BA%BF/"/>
    <id>https://kdt-g.github.io/2022/03/28/Unity%203d%E5%9C%BA%E6%99%AF%E4%B8%AD%E7%9A%842d%E5%9B%BE%E7%89%87%E8%BE%85%E5%8A%A9%E7%BA%BF/</id>
    <published>2022-03-27T16:00:00.000Z</published>
    <updated>2022-03-30T16:37:29.939Z</updated>
    
    <content type="html"><![CDATA[<p>代码如下：</p><span id="more"></span><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GuideLine</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> Transform[] dotsList; <span class="comment">//辅助线节点列表</span></span><br><span class="line">    <span class="keyword">public</span> GameObject dot;<span class="comment">//辅助线节点</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> dotScale = <span class="number">2f</span>;<span class="comment">//节点缩放</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> dotsNumber = <span class="number">50</span>;<span class="comment">//节点数量</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        InitGuideLine();<span class="comment">//初始化辅助线</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 初始化辅助线</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitGuideLine</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        dotsList = <span class="keyword">new</span> Transform[dotsNumber];<span class="comment">//初始化节点列表</span></span><br><span class="line"></span><br><span class="line">        dot.transform.localScale = Vector3.one * dotScale;<span class="comment">//初始化节点缩放</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; dotsNumber; ++i)<span class="comment">//遍历生成节点</span></span><br><span class="line">        &#123;</span><br><span class="line">            dotsList[i] = Instantiate(dot, <span class="literal">null</span>).transform;<span class="comment">//生成节点对象</span></span><br><span class="line">            dotsList[i].parent = transform;<span class="comment">//设置节点的父物体</span></span><br><span class="line">            dotsList[i].localPosition = Vector3.zero;<span class="comment">//设置节点自身位置</span></span><br><span class="line">        &#125;</span><br><span class="line">        Hide();<span class="comment">//隐藏辅助线</span></span><br><span class="line">    &#125;</span><br><span class="line">     <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 辅助线更新</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">GuideLineUpdata</span>(<span class="params">GameObject obj</span>)<span class="comment">//obj是辅助线要连接到的对象</span></span></span><br><span class="line">    &#123;</span><br><span class="line">        Show();<span class="comment">//显示辅助线</span></span><br><span class="line"></span><br><span class="line">        Vector3 startPoint = transform.position;<span class="comment">//获取辅助线起始点</span></span><br><span class="line">        Vector3 endPoint = obj.transform.position;<span class="comment">//获取辅助线终点</span></span><br><span class="line"></span><br><span class="line">        Vector3 step = (endPoint - startPoint) / (dotsNumber - <span class="number">1</span>);<span class="comment">//计算节点间隔</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">1</span>; i &lt; dotsNumber; i++)<span class="comment">//遍历设置节点坐标</span></span><br><span class="line">        &#123;</span><br><span class="line">            dotsList[i].position = startPoint + step * i;<span class="comment">//设置坐标</span></span><br><span class="line">            Debug.Log(<span class="string">$&quot;Pos <span class="subst">&#123;i&#125;</span>: <span class="subst">&#123;dotsList[i].position&#125;</span>&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 隐藏辅助线</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Hide</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        gameObject.SetActive(<span class="literal">false</span>);<span class="comment">//隐藏对象</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 显示辅助线</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Show</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        gameObject.SetActive(<span class="literal">true</span>); <span class="comment">//显示对象</span></span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;代码如下：&lt;/p&gt;</summary>
    
    
    
    
    <category term="c#" scheme="https://kdt-g.github.io/tags/c/"/>
    
    <category term="Unity" scheme="https://kdt-g.github.io/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>Unity Destroy和DestroyImmediate的区别</title>
    <link href="https://kdt-g.github.io/2022/03/28/Unity%20Destroy%E5%92%8CDestroyImmediate%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>https://kdt-g.github.io/2022/03/28/Unity%20Destroy%E5%92%8CDestroyImmediate%E7%9A%84%E5%8C%BA%E5%88%AB/</id>
    <published>2022-03-27T16:00:00.000Z</published>
    <updated>2022-03-30T16:21:21.988Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Destroy"><a href="#Destroy" class="headerlink" title="Destroy"></a>Destroy</h2><blockquote><p>Destroy是异步销毁，一般在下一帧就销毁了，不会影响主线程的运行。</p></blockquote><h2 id="DestroyImmediate"><a href="#DestroyImmediate" class="headerlink" title="DestroyImmediate"></a>DestroyImmediate</h2><blockquote><p>DestroyImmediate是立即销毁，立即释放资源，做这个操作的时候，会消耗很多时间的，影响主线程运行</p></blockquote><span id="more"></span><p>官方推荐使用Destroy代替DestroyImmediate</p><h2 id=""><a href="#" class="headerlink" title=""></a></h2><blockquote><p>官方文档里说：</p></blockquote><blockquote><p>Destroy is always delayed (but executed within the same frame).</p></blockquote><blockquote><p>Actual object destruction is always delayed until after the current Update loop, but will always be done before rendering.</p></blockquote><blockquote><p>Destroy应该是当前帧 Update之后，渲染之前销毁对象</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Destroy&quot;&gt;&lt;a href=&quot;#Destroy&quot; class=&quot;headerlink&quot; title=&quot;Destroy&quot;&gt;&lt;/a&gt;Destroy&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Destroy是异步销毁，一般在下一帧就销毁了，不会影响主线程的运行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;DestroyImmediate&quot;&gt;&lt;a href=&quot;#DestroyImmediate&quot; class=&quot;headerlink&quot; title=&quot;DestroyImmediate&quot;&gt;&lt;/a&gt;DestroyImmediate&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;DestroyImmediate是立即销毁，立即释放资源，做这个操作的时候，会消耗很多时间的，影响主线程运行&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="c#" scheme="https://kdt-g.github.io/tags/c/"/>
    
    <category term="Unity" scheme="https://kdt-g.github.io/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>Unity LitJson和抖音Json冲突出错</title>
    <link href="https://kdt-g.github.io/2022/03/28/Unity%20LitJson%E5%92%8C%E6%8A%96%E9%9F%B3Json%E5%86%B2%E7%AA%81%E5%87%BA%E9%94%99/"/>
    <id>https://kdt-g.github.io/2022/03/28/Unity%20LitJson%E5%92%8C%E6%8A%96%E9%9F%B3Json%E5%86%B2%E7%AA%81%E5%87%BA%E9%94%99/</id>
    <published>2022-03-27T16:00:00.000Z</published>
    <updated>2022-03-30T16:37:42.590Z</updated>
    
    <content type="html"><![CDATA[<p>代码如下：</p><span id="more"></span><h3 id="控制台报错"><a href="#控制台报错" class="headerlink" title="控制台报错"></a>控制台报错</h3><p>error CS0433: The type ‘JsonMapper’ exists in both ‘LitJson, Version&#x3D;0.9.0.0, Culture&#x3D;neutral, PublicKeyToken&#x3D;null’ and ‘unitytoolsEditor, Version&#x3D;0.0.0.0, Culture&#x3D;neutral, PublicKeyToken&#x3D;null’</p><p>Unity版本：4.35</p><p>StarkSDKUnityTools </p><p>原版本：2.5.21 (打包太大，打包多种处理器配置)</p><p>新版本：2.5.86(出错版本)</p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>引用从 LitJson 换成使用抖音的 UNBridgeLib.LitJson</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;代码如下：&lt;/p&gt;</summary>
    
    
    
    
    <category term="c#" scheme="https://kdt-g.github.io/tags/c/"/>
    
    <category term="Unity" scheme="https://kdt-g.github.io/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>Unity Texture2D转Sprite </title>
    <link href="https://kdt-g.github.io/2022/03/28/Unity%20Texture2D%E8%BD%ACSprite/"/>
    <id>https://kdt-g.github.io/2022/03/28/Unity%20Texture2D%E8%BD%ACSprite/</id>
    <published>2022-03-27T16:00:00.000Z</published>
    <updated>2022-03-30T16:22:31.385Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Texture2D texture = ScreenCapture.CaptureScreenshotAsTexture();<span class="comment">//Unity截屏</span></span><br><span class="line">Sprite pic = Sprite.Create(texture, <span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">0</span>, Screen.width, Screen.height), <span class="keyword">new</span> Vector2(<span class="number">0.5f</span>, <span class="number">0.5f</span>));</span><br><span class="line">image.sprite = pic;</span><br><span class="line"><span class="comment">// image.SetNativeSize();设置image自适应Sprite</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight csharp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas</summary>
      
    
    
    
    
    <category term="c#" scheme="https://kdt-g.github.io/tags/c/"/>
    
    <category term="Unity" scheme="https://kdt-g.github.io/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>Unity 射线检测(2D&amp;&amp;3D)</title>
    <link href="https://kdt-g.github.io/2022/03/28/Unity%20%E5%B0%84%E7%BA%BF%E6%A3%80%E6%B5%8B(2D&amp;&amp;3D)/"/>
    <id>https://kdt-g.github.io/2022/03/28/Unity%20%E5%B0%84%E7%BA%BF%E6%A3%80%E6%B5%8B(2D&amp;&amp;3D)/</id>
    <published>2022-03-27T16:00:00.000Z</published>
    <updated>2022-03-30T16:23:22.122Z</updated>
    
    <content type="html"><![CDATA[<h1 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h1><span id="more"></span><h4 id="Canvas上2D物体检测更新"><a href="#Canvas上2D物体检测更新" class="headerlink" title="Canvas上2D物体检测更新"></a><strong>Canvas上2D物体检测更新</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">private Canvas canvas;</span><br><span class="line"></span><br><span class="line">    void Start()</span><br><span class="line">    &#123;</span><br><span class="line">        canvas = FindObjectOfType&lt;Canvas&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    void Update()</span><br><span class="line">    &#123;</span><br><span class="line">        if (Input.GetMouseButtonDown(0))</span><br><span class="line">        &#123;</span><br><span class="line">            Click2DItem();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 点击2d物体，主要是用canvas的事件系统</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public void Click2DItem()</span><br><span class="line">    &#123;</span><br><span class="line">        PointerEventData pointerEventData = new PointerEventData(EventSystem.current);</span><br><span class="line">        pointerEventData.position = Input.mousePosition;</span><br><span class="line">        GraphicRaycaster gr = canvas.GetComponent&lt;GraphicRaycaster&gt;();</span><br><span class="line">        List&lt;RaycastResult&gt; results = new List&lt;RaycastResult&gt;();</span><br><span class="line">        gr.Raycast(pointerEventData, results);</span><br><span class="line">        if (results.Count != 0)</span><br><span class="line">        &#123;</span><br><span class="line">            //这里如果需要对特定的2d物体做点击，我一般是给对应的2d物体添加各自的tag</span><br><span class="line">            Debug.Log(results[0].gameObject.name);</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>被点击的物体上必须有collider组件</p><h4 id="3D物体检测："><a href="#3D物体检测：" class="headerlink" title="3D物体检测："></a><strong>3D物体检测：</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">//鼠标右键点击</span><br><span class="line">if (Input.GetMouseButtonUp(1))</span><br><span class="line">        &#123;</span><br><span class="line">            // 点击鼠标左键抬起时发射一条射线</span><br><span class="line">            Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);</span><br><span class="line">            RaycastHit hitInfo;</span><br><span class="line">            if (Physics.Raycast(ray, out hitInfo))</span><br><span class="line">            &#123;</span><br><span class="line">                Debug.Log(&quot;click object name is ----&gt;&quot; + hitInfo.collider.gameObject.name);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            //在半径为5的球形范围内的所有3d物体都会被检测到</span><br><span class="line">            Collider[] colliders = Physics.OverlapSphere(Vector3.zero, 5.0f);</span><br><span class="line">            if (colliders.Length &gt; 0)</span><br><span class="line">            &#123;</span><br><span class="line">                for (int i = 0; i &lt; colliders.Length; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    Debug.Log(&quot;第二种方式---click object name is ----&gt;&quot; + colliders[i].gameObject.name);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h4 id="Sprite-2D物体检测"><a href="#Sprite-2D物体检测" class="headerlink" title="Sprite 2D物体检测"></a><strong>Sprite 2D物体检测</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">//左</span><br><span class="line">if (Input.GetMouseButtonUp(0))</span><br><span class="line">        &#123;</span><br><span class="line">            // 第一种方法，与3d检测类似</span><br><span class="line">            RaycastHit2D hit = Physics2D.Raycast(Camera.main.ScreenToWorldPoint(Input.mousePosition), Vector2.zero);</span><br><span class="line">            if (hit.collider != null)</span><br><span class="line">            &#123;</span><br><span class="line">                Debug.Log(&quot;clicked object name is ----&gt;&quot;+ hit.collider.gameObject);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            // 第二种方法，overlap检测物体重叠的点</span><br><span class="line">            Collider2D[] collider2Ds = Physics2D.OverlapPointAll(Camera.main.ScreenToWorldPoint(Input.mousePosition));</span><br><span class="line">            if (collider2Ds.Length &gt; 0)</span><br><span class="line">            &#123;</span><br><span class="line">                for (int i = 0; i &lt; collider2Ds.Length; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    Debug.Log(&quot;overlap object point,The name is ----&gt;&quot; + collider2Ds[i].gameObject.name);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                //foreach (Collider2D item in collider2Ds)</span><br><span class="line">                //&#123;</span><br><span class="line">                //    Debug.Log(&quot;overlap object point,The name is ----&gt;&quot; + collider2Ds[i].gameObject.name);</span><br><span class="line">                //&#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h1 id="转载网址："><a href="#转载网址：" class="headerlink" title="转载网址："></a>转载网址：</h1><p><a href="https://blog.csdn.net/Memoryuuu/article/details/80937541">https://blog.csdn.net/Memoryuuu/article/details/80937541</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;例子&quot;&gt;&lt;a href=&quot;#例子&quot; class=&quot;headerlink&quot; title=&quot;例子&quot;&gt;&lt;/a&gt;例子&lt;/h1&gt;</summary>
    
    
    
    
    <category term="c#" scheme="https://kdt-g.github.io/tags/c/"/>
    
    <category term="Unity" scheme="https://kdt-g.github.io/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>Unity创建一个物理线</title>
    <link href="https://kdt-g.github.io/2022/03/28/Unity%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%89%A9%E7%90%86%E7%BA%BF/"/>
    <id>https://kdt-g.github.io/2022/03/28/Unity%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%89%A9%E7%90%86%E7%BA%BF/</id>
    <published>2022-03-27T16:00:00.000Z</published>
    <updated>2022-04-05T09:57:23.503Z</updated>
    
    <content type="html"><![CDATA[<p>代码如下：</p><span id="more"></span><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Starry</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Test_0</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 线</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> Material line;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 是否开启重力</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">bool</span> gravity;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 线的颜色</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> Color lineColor = Color.white;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 线列表</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> List&lt;GameObject&gt; lineList = <span class="keyword">new</span> List&lt;GameObject&gt;();</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 点列表</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> List&lt;Vector2&gt; pointList = <span class="keyword">new</span> List&lt;Vector2&gt;();</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 当前线</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> GameObject currentLine;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 当前线渲染器</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> LineRenderer currentLineRenderer;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">bool</span> stopHolding;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 获取Shader中材质的发光颜色</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="built_in">int</span> EmissionColor = Shader.PropertyToID(<span class="string">&quot;_EmissionColor&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (Input.GetMouseButtonDown(<span class="number">0</span>))<span class="comment">//鼠标左键按下的时候</span></span><br><span class="line">            &#123;</span><br><span class="line">                pointList.Clear();<span class="comment">//清空线列表</span></span><br><span class="line">                CreateLine();<span class="comment">//创建线</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (Input.GetMouseButton(<span class="number">0</span>))<span class="comment">//鼠标左键点击的时候</span></span><br><span class="line">            &#123;</span><br><span class="line">                Vector2 item = Camera.main.ScreenToWorldPoint(Input.mousePosition);<span class="comment">//将鼠标坐标从屏幕空间变换为世界空间</span></span><br><span class="line">                <span class="keyword">if</span> (!pointList.Contains(item))<span class="comment">//如果点列表中没有当前点</span></span><br><span class="line">                &#123;</span><br><span class="line">                    pointList.Add(item);<span class="comment">//点列表添加当前点</span></span><br><span class="line">                    currentLineRenderer.positionCount = pointList.Count;<span class="comment">//当前线渲染器的数量是点列表的数量</span></span><br><span class="line">                    currentLineRenderer.SetPosition(pointList.Count - <span class="number">1</span>, pointList.Last());<span class="comment">//当前线渲染器的位置设置为点列表中对象的位置</span></span><br><span class="line">                    <span class="keyword">if</span> (pointList.Count &gt;= <span class="number">2</span>)<span class="comment">//如果点列表内的数量大于等于2</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        Vector2 vector1 = pointList[pointList.Count - <span class="number">2</span>];</span><br><span class="line">                        Vector2 vector2 = pointList[pointList.Count - <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">                        GameObject currentCollierObject = <span class="keyword">new</span> GameObject(<span class="string">&quot;Collider&quot;</span>);<span class="comment">//新建一个对象</span></span><br><span class="line">                        currentCollierObject.transform.position = (vector1 + vector2) / <span class="number">2f</span>;<span class="comment">//设置位置为当前点和上一个点的中间位置</span></span><br><span class="line">                        currentCollierObject.transform.right = (vector2 - vector1).normalized;<span class="comment">//右端指向线的尾部</span></span><br><span class="line">                        currentCollierObject.transform.parent = currentLine.transform;<span class="comment">//设置为当前线的子物体</span></span><br><span class="line">                        BoxCollider2D currentBoxCollider2D = currentCollierObject.AddComponent&lt;BoxCollider2D&gt;();<span class="comment">//给该对象添加2d碰撞器</span></span><br><span class="line">                        currentBoxCollider2D.size = <span class="keyword">new</span> Vector3((vector2 - vector1).magnitude, <span class="number">0.1f</span>, <span class="number">0.1f</span>);<span class="comment">//设置碰撞器尺寸</span></span><br><span class="line">                        currentBoxCollider2D.enabled = <span class="literal">false</span>;<span class="comment">//碰撞器开关暂时不开启</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (Input.GetMouseButtonUp(<span class="number">0</span>))<span class="comment">//鼠标左键抬起</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (currentLine.transform.childCount &gt; <span class="number">0</span>)<span class="comment">//如果当前线的子物体大于0</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; currentLine.transform.childCount; i++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        currentLine.transform.GetChild(i).GetComponent&lt;BoxCollider2D&gt;().enabled = <span class="literal">true</span>;<span class="comment">//把所有子物体的碰撞器开关打开</span></span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    lineList.Add(currentLine);<span class="comment">//线列表添加当前创建的线</span></span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (gravity)<span class="comment">//如果开启添加重力</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        currentLine.AddComponent&lt;Rigidbody2D&gt;().useAutoMass = <span class="literal">true</span>;<span class="comment">//给该线添加重力组件，并开启</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    Destroy(currentLine);<span class="comment">//否则删除当前空的线对象</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (Input.GetMouseButtonDown(<span class="number">1</span>))<span class="comment">//按下鼠标右键</span></span><br><span class="line">            &#123;</span><br><span class="line">                ClearAll();<span class="comment">//清除所有线</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 创建线</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CreateLine</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            currentLine = <span class="keyword">new</span> GameObject(<span class="string">&quot;Line&quot;</span>);<span class="comment">//创建对象</span></span><br><span class="line">            currentLineRenderer = currentLine.AddComponent&lt;LineRenderer&gt;();<span class="comment">//给对象添加线渲染器</span></span><br><span class="line">            currentLineRenderer.material = line;<span class="comment">//获取自定义好的线材质</span></span><br><span class="line">            currentLineRenderer.material.EnableKeyword(<span class="string">&quot;_EMISSION&quot;</span>);<span class="comment">//设置着色器的名称</span></span><br><span class="line">            currentLineRenderer.material.SetColor(EmissionColor, <span class="keyword">this</span>.lineColor);<span class="comment">//设置颜色</span></span><br><span class="line">            currentLineRenderer.positionCount = <span class="number">0</span>;<span class="comment">//设置线渲染器的坐标数量</span></span><br><span class="line">            currentLineRenderer.startWidth = <span class="number">0.1f</span>;<span class="comment">//设置开始的宽</span></span><br><span class="line">            currentLineRenderer.endWidth = <span class="number">0.1f</span>;<span class="comment">//设置结束的宽</span></span><br><span class="line">            currentLineRenderer.startColor = lineColor;<span class="comment">//设置开始的颜色</span></span><br><span class="line">            currentLineRenderer.endColor = lineColor;<span class="comment">//设置结束的颜色</span></span><br><span class="line">            currentLineRenderer.useWorldSpace = <span class="literal">false</span>;<span class="comment">//是否开启在世界空间中定义线</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 清空全部</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ClearAll</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="keyword">var</span> obj <span class="keyword">in</span> lineList)</span><br><span class="line">            &#123;</span><br><span class="line">                Destroy(obj);</span><br><span class="line">            &#125;</span><br><span class="line">            lineList.Clear();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;代码如下：&lt;/p&gt;</summary>
    
    
    
    
    <category term="c#" scheme="https://kdt-g.github.io/tags/c/"/>
    
    <category term="Unity" scheme="https://kdt-g.github.io/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>Unity入门常见错误之碰撞检测方法无法触发</title>
    <link href="https://kdt-g.github.io/2022/03/28/Unity%E5%85%A5%E9%97%A8%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF%E4%B9%8B%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B%E6%96%B9%E6%B3%95%E6%97%A0%E6%B3%95%E8%A7%A6%E5%8F%91/"/>
    <id>https://kdt-g.github.io/2022/03/28/Unity%E5%85%A5%E9%97%A8%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF%E4%B9%8B%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B%E6%96%B9%E6%B3%95%E6%97%A0%E6%B3%95%E8%A7%A6%E5%8F%91/</id>
    <published>2022-03-27T16:00:00.000Z</published>
    <updated>2022-03-30T16:25:05.374Z</updated>
    
    <content type="html"><![CDATA[<h1 id="无法触发：OnTriggerEnter、OnTriggerStay、OnCollisionEnter方法"><a href="#无法触发：OnTriggerEnter、OnTriggerStay、OnCollisionEnter方法" class="headerlink" title="无法触发：OnTriggerEnter、OnTriggerStay、OnCollisionEnter方法"></a>无法触发：OnTriggerEnter、OnTriggerStay、OnCollisionEnter方法</h1><span id="more"></span><h2 id="需考虑："><a href="#需考虑：" class="headerlink" title="需考虑："></a>需考虑：</h2><h3 id="OnCollisionEnter"><a href="#OnCollisionEnter" class="headerlink" title="OnCollisionEnter:"></a>OnCollisionEnter:</h3><p>需要双方都有Collider或者Rigibody,如果双方都有Rigibody,那么需要勾选isKinematic。</p><h3 id="OnTriggerEnter"><a href="#OnTriggerEnter" class="headerlink" title="OnTriggerEnter:"></a>OnTriggerEnter:</h3><p>需要双方至少有一个Rigibody,可以勾选isKinematic,双方最少有一方勾选上Collider组件上的isTrigger。</p><h3 id="OnTriggerStay"><a href="#OnTriggerStay" class="headerlink" title="OnTriggerStay:"></a>OnTriggerStay:</h3><p>运行了一段时间后OnTriggerStay不再被调用，则需要考虑是否被检测物体的刚体的睡眠模式是否设置为了Never Sleep。</p><h2 id="测试OnTriggerEnter和OnCollisionEnter的区别"><a href="#测试OnTriggerEnter和OnCollisionEnter的区别" class="headerlink" title="测试OnTriggerEnter和OnCollisionEnter的区别"></a>测试OnTriggerEnter和OnCollisionEnter的区别</h2><h3 id="测试："><a href="#测试：" class="headerlink" title="测试："></a>测试：</h3><p>如果两个物体A,B</p><p>两者都有碰撞体collider（Box Collider，Sphere Collider，Capsule Collider等）</p><p>A，B都有刚体（Rigidbody）</p><p>A或者B中有一个勾选isTrigger或者两者都勾选isTrigger A和B都可以进入OnTriggerEnter方法，但是不可进入OnCollisionEnter方法。</p><p>A和B都不勾选isTrigger，A和B能进入OnCollisionEnter方法但是不能进入OnTriggerEnter方法。</p><h3 id="结论："><a href="#结论：" class="headerlink" title="结论："></a>结论：</h3><p>OnCollisionEnter方法必须是在两个碰撞物体都不勾选isTrigger的前提下才能进入，反之只要勾选一个isTrigger那么就能进入OnTriggerEnter方法。</p><p>OnCollisionEnter和OnTriggerEnter是冲突的不能同时存在的。</p><h3 id="OnTriggerEnter和OnCollisionEnter的选择。"><a href="#OnTriggerEnter和OnCollisionEnter的选择。" class="headerlink" title="OnTriggerEnter和OnCollisionEnter的选择。"></a>OnTriggerEnter和OnCollisionEnter的选择。</h3><p>如果想实现两个刚体物理的实际碰撞效果时候用OnCollisionEnter，Unity引擎会自动处理刚体碰撞的效果。</p><p>如果想在两个物体碰撞后自己处理碰撞事件用OnTriggerEnter。</p><h1 id="转载地址"><a href="#转载地址" class="headerlink" title="转载地址"></a>转载地址</h1><p><a href="https://blog.csdn.net/baidu_41935968/article/details/102847324">https://blog.csdn.net/baidu_41935968/article/details/102847324</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;无法触发：OnTriggerEnter、OnTriggerStay、OnCollisionEnter方法&quot;&gt;&lt;a href=&quot;#无法触发：OnTriggerEnter、OnTriggerStay、OnCollisionEnter方法&quot; class=&quot;headerlink&quot; title=&quot;无法触发：OnTriggerEnter、OnTriggerStay、OnCollisionEnter方法&quot;&gt;&lt;/a&gt;无法触发：OnTriggerEnter、OnTriggerStay、OnCollisionEnter方法&lt;/h1&gt;</summary>
    
    
    
    
    <category term="c#" scheme="https://kdt-g.github.io/tags/c/"/>
    
    <category term="Unity" scheme="https://kdt-g.github.io/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>Untiy UI获取坐标与Dotween插件使UI移动</title>
    <link href="https://kdt-g.github.io/2022/03/28/Untiy%20UI%E8%8E%B7%E5%8F%96%E5%9D%90%E6%A0%87%E4%B8%8EDotween%E6%8F%92%E4%BB%B6%E4%BD%BFUI%E7%A7%BB%E5%8A%A8/"/>
    <id>https://kdt-g.github.io/2022/03/28/Untiy%20UI%E8%8E%B7%E5%8F%96%E5%9D%90%E6%A0%87%E4%B8%8EDotween%E6%8F%92%E4%BB%B6%E4%BD%BFUI%E7%A7%BB%E5%8A%A8/</id>
    <published>2022-03-27T16:00:00.000Z</published>
    <updated>2022-03-30T16:39:03.875Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//UI获取坐标，先获取RectTransform组件，而非Transform</span></span><br><span class="line">RectTransform rt = gameObject.transform <span class="keyword">as</span> RectTransform;</span><br><span class="line"><span class="comment">//获取anchoredPosition属性，而非Transform中的Position</span></span><br><span class="line">rt.anchoredPosition;</span><br><span class="line"><span class="comment">//Dotween 坐标移动使用DOAnchorPos，而非DOMove</span></span><br><span class="line">rt.DOAnchorPos([指定坐标],[速度]);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight csharp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas</summary>
      
    
    
    
    
    <category term="c#" scheme="https://kdt-g.github.io/tags/c/"/>
    
    <category term="Unity" scheme="https://kdt-g.github.io/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>Unity游戏开发小技巧(仅供参考）</title>
    <link href="https://kdt-g.github.io/2022/03/28/Unity%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91%E5%B0%8F%E6%8A%80%E5%B7%A7(%E4%BB%85%E4%BE%9B%E5%8F%82%E8%80%83%EF%BC%89/"/>
    <id>https://kdt-g.github.io/2022/03/28/Unity%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91%E5%B0%8F%E6%8A%80%E5%B7%A7(%E4%BB%85%E4%BE%9B%E5%8F%82%E8%80%83%EF%BC%89/</id>
    <published>2022-03-27T16:00:00.000Z</published>
    <updated>2022-03-30T16:38:52.609Z</updated>
    
    <content type="html"><![CDATA[<p>内容如下：</p><span id="more"></span><h1 id="1-借助-Prefab-暂存数据"><a href="#1-借助-Prefab-暂存数据" class="headerlink" title="1. 借助 Prefab 暂存数据"></a>1. 借助 Prefab 暂存数据</h1><p>可以直接在脚本的 Inspector 上填写，然后把整个 GameObject 拖成 Prefab 暂存。等要用的时候再拖出来。</p><h1 id="2-DontDestroy模式"><a href="#2-DontDestroy模式" class="headerlink" title="2. DontDestroy模式"></a>2. DontDestroy模式</h1><p>在跨场景的时候保持某些对象一直存在，不必要每次都重新加载，譬如显示广告的模块。</p><h1 id="3-内置函数"><a href="#3-内置函数" class="headerlink" title="3. 内置函数"></a>3. 内置函数</h1><p>Awake，Start，Update，FixedUpdate，LateUpdate 函数，令开发者直接往游戏循环里加内容，非常方便快捷。</p><h1 id="4-Input"><a href="#4-Input" class="headerlink" title="4. Input"></a>4. Input</h1><p>Input.MouseDown 在移动设备上也通用，对于一些对输入性能要求不高的操作，直接用它来代替 Input.TouchCount或者 RaycastHit 即可。</p><h1 id="5-UGUI"><a href="#5-UGUI" class="headerlink" title="5. UGUI"></a>5. UGUI</h1><p>新的 UGUI 支持多种 Camera 渲染，以及 RectTransform 里Anchor 的灵活配置，功能很强大。提前设计好的话，可以一套 UI 同时支持 iPhone4&#x2F;5&#x2F;6&#x2F;iPad以及所有 Android 设备各种尺寸的分辨率。再也不必做多套 UI 来适应各种设备了。</p><h1 id="6-Editor-脚本"><a href="#6-Editor-脚本" class="headerlink" title="6. Editor 脚本"></a>6. Editor 脚本</h1><p>可以方便在编辑器里扩展，对开发和摆关卡帮助极大。微信搜索公众号 [爱上游戏开发]，回复 “资料”，免费领取 200G 学习资料！</p><h1 id="7-测试"><a href="#7-测试" class="headerlink" title="7. 测试"></a>7. 测试</h1><p>测试运行时，可以在任意时候暂停游戏，重新调整数值，游戏对象的位置等等，然后再继续游戏。</p><h1 id="8-Editor-x2F-Resources-目录可以存在多个，且可以存放在任意目录下"><a href="#8-Editor-x2F-Resources-目录可以存在多个，且可以存放在任意目录下" class="headerlink" title="8. Editor&#x2F;Resources 目录可以存在多个，且可以存放在任意目录下"></a>8. Editor&#x2F;Resources 目录可以存在多个，且可以存放在任意目录下</h1><p>写自己的插件或者代码库时可以自带辅助的资源。</p><h1 id="9-Hierachy-层级"><a href="#9-Hierachy-层级" class="headerlink" title="9. Hierachy 层级"></a>9. Hierachy 层级</h1><p>在 Hierachy 层级对话框，可以随时输入搜索关键字，然后一起选中筛选出来的GameObject，这个时候可以同时修改它们的相同属性。</p><h1 id="10-内置取色器可以暂存颜色"><a href="#10-内置取色器可以暂存颜色" class="headerlink" title="10. 内置取色器可以暂存颜色"></a>10. 内置取色器可以暂存颜色</h1><h1 id="11-显示脚本的公用属性"><a href="#11-显示脚本的公用属性" class="headerlink" title="11. 显示脚本的公用属性"></a>11. 显示脚本的公用属性</h1><p>脚本的公用属性在 Inspector 中显示时，可以用额外的修饰符控制其显示方式，取值范围等等，非常方便。</p><h1 id="12-StreamingAssets-目录是用来存放不加密的外部文件"><a href="#12-StreamingAssets-目录是用来存放不加密的外部文件" class="headerlink" title="12. StreamingAssets 目录是用来存放不加密的外部文件"></a>12. StreamingAssets 目录是用来存放不加密的外部文件</h1><p>它还有一个极好的用途是存放测试数据。方便在 PC&#x2F;MAC&#x2F;移动设备上都能调用到同样的测试数据进行模拟处理。</p><h1 id="13-配合-Alfred-这款快捷启动的小工具"><a href="#13-配合-Alfred-这款快捷启动的小工具" class="headerlink" title="13. 配合 Alfred 这款快捷启动的小工具"></a>13. 配合 Alfred 这款快捷启动的小工具</h1><p>输入“us 关键字”即可快速调出Unity的 ScriptAPI，你是否也经常忘记 Collier&#x2F;Trigger 函数的完整写法？</p><p>每次都需要从帮助手册里复制代码段？</p><h1 id="14-Unity死机未保存场景"><a href="#14-Unity死机未保存场景" class="headerlink" title="14. Unity死机未保存场景"></a>14. Unity死机未保存场景</h1><p>当你在Unity中编辑场景，突然死机时，可以在项目文件目录中找到Temp文件夹，双击文件夹，找到_Backupscenes文件夹，把后缀为.backup的文件后缀改为.unity，然后拖进Unity的Project界面里面，这样就可以还原死机前场景最后情况。微信搜索公众号 [爱上游戏开发]，回复 “资料”，免费领取 200G 学习资料！</p><h1 id="15-Inspector界面的数值栏自带加减乘除功能"><a href="#15-Inspector界面的数值栏自带加减乘除功能" class="headerlink" title="15. Inspector界面的数值栏自带加减乘除功能"></a>15. Inspector界面的数值栏自带加减乘除功能</h1><p>从Unity5.1开始，可以在Inspector界面中的数值栏进行计算，比如：你可以在Transform里面的Position中X栏中加减乘除。</p><h1 id="16-随意移动模型预览视窗"><a href="#16-随意移动模型预览视窗" class="headerlink" title="16. 随意移动模型预览视窗"></a>16. 随意移动模型预览视窗</h1><p>在Project界面里面选中模型，在Inspector界面上会显示模型的预览视图，右击视图的上的双横条，模型预览视图就会跳出来，此时就可以像Scene，Game等视窗一样任意移动，放在你想放的地方，如果想让他变回去，只要关掉它即可。</p><h1 id="17-搜寻当前场景中哪些物件运用了指定脚本"><a href="#17-搜寻当前场景中哪些物件运用了指定脚本" class="headerlink" title="17. 搜寻当前场景中哪些物件运用了指定脚本"></a>17. 搜寻当前场景中哪些物件运用了指定脚本</h1><p>在Hierarchy界面中的搜索栏中输入你想要搜索的脚本全名，即可找到哪些物件用了这个脚本，此方法也可以用来搜索哪些物体上有哪些物件，比如：Rigidbody等。</p><h1 id="18-在界面上查看private变量"><a href="#18-在界面上查看private变量" class="headerlink" title="18. 在界面上查看private变量"></a>18. 在界面上查看private变量</h1><p>在Inspector界面右击Inspector的标签栏，选择Debug。</p><h1 id="19-只让游戏运行一帧"><a href="#19-只让游戏运行一帧" class="headerlink" title="19. 只让游戏运行一帧"></a>19. 只让游戏运行一帧</h1><p>先按下暂停键，再按运行键。</p><h1 id="20-通过Debug-Log获取执行此语句物件"><a href="#20-通过Debug-Log获取执行此语句物件" class="headerlink" title="20. 通过Debug.Log获取执行此语句物件"></a>20. 通过Debug.Log获取执行此语句物件</h1><p>在脚本的Debug.Log语句中加入gameObject，即Debug.Log(“Test”, gameObject); 脚本运行时点击Console界面中的输出语句，就能在Hierarchy界面中看到哪个物件执行了这个脚本。</p><h1 id="21-展开所有子节点"><a href="#21-展开所有子节点" class="headerlink" title="21. 展开所有子节点"></a>21. 展开所有子节点</h1><p>按住Alt，用鼠标点击包含子节点物件前的三角形，在Hierarchy界面和Project界面都可以使用。</p><h1 id="22-编辑时镜头跟随选中物件"><a href="#22-编辑时镜头跟随选中物件" class="headerlink" title="22. 编辑时镜头跟随选中物件"></a>22. 编辑时镜头跟随选中物件</h1><h1 id="23-在Scene界面中方便移动编辑镜头"><a href="#23-在Scene界面中方便移动编辑镜头" class="headerlink" title="23. 在Scene界面中方便移动编辑镜头"></a>23. 在Scene界面中方便移动编辑镜头</h1><p>在Scene界面中鼠标右键 + A&#x2F;S&#x2F;D&#x2F;W&#x2F;Q&#x2F;E来移动镜头， 如果想使Game视窗的镜头跟Scene一样，可以在Unity菜单栏中选择GameObject–&gt;AlignWithView。</p><h1 id="24-在Project界面搜索商店内容"><a href="#24-在Project界面搜索商店内容" class="headerlink" title="24. 在Project界面搜索商店内容"></a>24. 在Project界面搜索商店内容</h1><p>先在Project界面中的搜索栏中输入你想要搜索内容的关键字，然后在搜索栏下边的搜索范围选择中选择AssetStore。</p><h1 id="25-区分Unity项目"><a href="#25-区分Unity项目" class="headerlink" title="25.区分Unity项目"></a>25.区分Unity项目</h1><p>还在用4.X, 拍案叫绝不敢说, 多开几个Unity实例我不知道各位看官怎么区分开的倒地是哪个?我们用Unity的C#功能识别路径把Unity的路径打到标题栏, 这样就方便多了</p><h1 id="26-脚本编译可以不用mono编译器"><a href="#26-脚本编译可以不用mono编译器" class="headerlink" title="26. 脚本编译可以不用mono编译器"></a>26. 脚本编译可以不用mono编译器</h1><p>而编译的dll和il都可以在mono上跑。从而规避老版本编译器的一些生成问题。</p><h1 id="27-shader-lab支持自定义对应版本的bytecode"><a href="#27-shader-lab支持自定义对应版本的bytecode" class="headerlink" title="27. shader lab支持自定义对应版本的bytecode"></a>27. shader lab支持自定义对应版本的bytecode</h1><p>可以用别的shader编译器来编译shader。也是挺灵活的。</p><h1 id="28-横向移动"><a href="#28-横向移动" class="headerlink" title="28. 横向移动"></a>28. 横向移动</h1><p>做一个横向移动模块 里面有个Update函数 传入Transform，就把Transform按固定速度横向移动。</p><h1 id="29-纵向移动"><a href="#29-纵向移动" class="headerlink" title="29. 纵向移动"></a>29. 纵向移动</h1><p>做一个纵向移动模块 里面有个Update函数 传入Transform，就把Transform按重力加速垂直移动。</p><h1 id="30-下次要做一个-斜向固定速度的，就重用-横向移动模块"><a href="#30-下次要做一个-斜向固定速度的，就重用-横向移动模块" class="headerlink" title="30. 下次要做一个 斜向固定速度的，就重用 横向移动模块"></a>30. 下次要做一个 斜向固定速度的，就重用 横向移动模块</h1><p>单独写一个纵向固定速度移动的模块。同样的角色脚本，推这两个组件进去，角色就斜着飞了。</p><h1 id="31-把一个模块列表做成状态机状态，加个进入模块和退出模块。"><a href="#31-把一个模块列表做成状态机状态，加个进入模块和退出模块。" class="headerlink" title="31. 把一个模块列表做成状态机状态，加个进入模块和退出模块。"></a>31. 把一个模块列表做成状态机状态，加个进入模块和退出模块。</h1><p>加点状态转换逻辑，你就有个状态机了。</p><h1 id="32-可以把Update函数，拿一个协程的iEnumerator代替"><a href="#32-可以把Update函数，拿一个协程的iEnumerator代替" class="headerlink" title="32. 可以把Update函数，拿一个协程的iEnumerator代替"></a>32. 可以把Update函数，拿一个协程的iEnumerator代替</h1><p>进入状态就启动协程。定时的，不用更新，或者其他特殊的状态都可以轻松搞出来了。</p><h1 id="33-状态里面定义个System-Action之类的事件，模块可以随便抛出这个玩意。"><a href="#33-状态里面定义个System-Action之类的事件，模块可以随便抛出这个玩意。" class="headerlink" title="33. 状态里面定义个System.Action之类的事件，模块可以随便抛出这个玩意。"></a>33. 状态里面定义个System.Action之类的事件，模块可以随便抛出这个玩意。</h1><p>呵呵，这下动画关键帧也有了。</p><h1 id="34-角色"><a href="#34-角色" class="headerlink" title="34. 角色"></a>34. 角色</h1><p>做一个角色的脚本 包含一个模块列表，把一个横向和一个纵向模块推入列表，然后角色每次Update就遍历就执行每个模块的Update。</p><h1 id="35-快捷目录"><a href="#35-快捷目录" class="headerlink" title="35. 快捷目录"></a>35. 快捷目录</h1><p>Project窗口下，可以把文件夹直接拖到Favorites下作为快捷入口，再也不用找一个文件翻半天了，常用的目录都可以放在这里</p><h1 id="36-线框输出"><a href="#36-线框输出" class="headerlink" title="36. 线框输出"></a>36. 线框输出</h1><p>Game窗口的右上角有个Gizmos按钮，点击之后可以把你用于Debug画出来的所有线框都画到游戏场景中，其中包含Gizmos类画出来的所有东西，以及Unity本身提供的碰撞体等等这些需要去Scene窗口看的东西，尤其是没有双屏幕的开发者，这个功能太贴心了。</p><h1 id="37-自定义Profiler"><a href="#37-自定义Profiler" class="headerlink" title="37. 自定义Profiler"></a>37. 自定义Profiler</h1><p>利用Profiler.BeginSample()和Profiler.EndSample()函数，可以将任何代码断加入Profiler输出，性能调优的利器，一般来说如果有某个地方你自己对于性能不是很有把握，检测一下即可知道其使用开销，用了之后就停不下来了。微信搜索公众号 [爱上游戏开发]，回复 “资料”，免费领取 200G 学习资料！</p><h1 id="38-反射"><a href="#38-反射" class="headerlink" title="38. 反射"></a>38. 反射</h1><p>如果项目中有一些使用到反射的代码不太方便修改，而又希望通过设置Stripping Level来降低包体大小和内存占用，可以在Assets目录下添加link.xml文件来指定涉及到反射的类。</p><h1 id="39-查看prefab的配置"><a href="#39-查看prefab的配置" class="headerlink" title="39. 查看prefab的配置"></a>39. 查看prefab的配置</h1><p>通过将Editor Setting中的Asset Serialization设置为Force Text可以查看prefab的配置内容，并通过比对工具进行差异处理和合并。</p><h1 id=""><a href="#" class="headerlink" title=""></a></h1>]]></content>
    
    
    <summary type="html">&lt;p&gt;内容如下：&lt;/p&gt;</summary>
    
    
    
    
    <category term="c#" scheme="https://kdt-g.github.io/tags/c/"/>
    
    <category term="Unity" scheme="https://kdt-g.github.io/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>第一个微信小程序应用示例</title>
    <link href="https://kdt-g.github.io/2022/03/28/create_wechat_first/"/>
    <id>https://kdt-g.github.io/2022/03/28/create_wechat_first/</id>
    <published>2022-03-27T16:00:00.000Z</published>
    <updated>2022-03-26T18:35:21.526Z</updated>
    
    <content type="html"><![CDATA[<h4 id="具体部分"><a href="#具体部分" class="headerlink" title="具体部分"></a>具体部分</h4><span id="more"></span><blockquote><p>wxml部分</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--miniprogram/pages/index/index.wxml--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;movie&quot;</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;moveList&#125;&#125;&quot;</span> <span class="attr">wx:key</span>=<span class="string">&quot;item&quot;</span> &gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">&#x27;&#123;&#123;item.ImgSrc&#125;&#125;&#x27;</span> <span class="attr">class</span>=<span class="string">&quot;movie-img&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;movie-info&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;movie-title&quot;</span>&gt;</span>&#123;&#123;item.CN_Title&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span> <span class="tag">&lt;<span class="name">text</span> <span class="attr">style</span>=<span class="string">&quot;color:&#x27;#00A65F&#x27;&quot;</span>&gt;</span> Top&#123;&#123;item.uid&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">text</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;item.EN_Title !== &#x27; &#x27;&#125;&#125;&quot;</span>&gt;</span>别名：&#123;&#123;item.EN_Title&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">text</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;item.EN_Title == &#x27; &#x27;&#125;&#125;&quot;</span>&gt;</span>别名：暂无<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span>&gt;</span>观众评分：</span><br><span class="line">      <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;movie-score&quot;</span>&gt;</span> &#123;&#123;item.Rating&#125;&#125;分<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span>&gt;</span>评分人数：</span><br><span class="line">      <span class="tag">&lt;<span class="name">text</span> &gt;</span>&#123;&#123;item.Judge&#125;&#125; <span class="tag">&lt;<span class="name">text</span> &gt;</span>人评价<span class="tag">&lt;/<span class="name">text</span>&gt;</span> <span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;item.Inq !== &#x27; &#x27;&#125;&#125;&quot;</span>&gt;</span>点评: “&#123;&#123;item.Inq&#125;&#125;”<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;item.Inq == &#x27; &#x27;&#125;&#125;&quot;</span>&gt;</span>点评: 暂无<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> &gt;</span>详情链接:<span class="tag">&lt;<span class="name">text</span> <span class="attr">style</span>=<span class="string">&quot;color:blue&quot;</span> <span class="attr">data-text</span>=<span class="string">&quot;&#123;&#123;item.Link&#125;&#125;&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;textPaste&quot;</span>&gt;</span>点击复制<span class="tag">&lt;/<span class="name">text</span>&gt;</span> <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">&lt;/view &gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;has-no-more&quot;</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;end&#125;&#125;&quot;</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center;font-size:20rpx;&quot;</span>&gt;</span>---没有更多了---<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;gotop&quot;</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;ToTop&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;btn-gotop&quot;</span> <span class="attr">style</span>=<span class="string">&quot;&quot;</span>&gt;</span>顶部<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>wxss部分</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* miniprogram/pages/index/index.wxss */</span></span><br><span class="line"><span class="selector-class">.movie</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.movie-img</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200</span>rpx;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300</span>rpx;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">20</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.movie-info</span>&#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">28</span>rpx;</span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">1.8</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.movie-title</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#666</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">40</span>rpx;</span><br><span class="line">  <span class="attribute">font-weight</span>: bolder;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.movie-score</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#faaf00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.movie-comment</span>&#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">60</span>rpx;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#E54847</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">26</span>rpx;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">120</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#808080</span>;</span><br><span class="line">  <span class="attribute">border</span>: black;</span><br><span class="line">  <span class="attribute">margin-left</span>:<span class="number">85%</span>;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">48px</span>; </span><br><span class="line">  <span class="attribute">height</span>: <span class="number">48px</span>;</span><br><span class="line">  <span class="attribute">position</span>:fixed; </span><br><span class="line">  <span class="attribute">bottom</span>:<span class="number">40px</span>; </span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">opacity</span>:<span class="number">0.5</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.btn-gotop</span> </span><br><span class="line">  &#123; </span><br><span class="line">  <span class="attribute">color</span>:white; </span><br><span class="line">  <span class="attribute">position</span>:absolute;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">0.8rem</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">0.4rem</span></span><br><span class="line">  &#125; </span><br></pre></td></tr></table></figure><blockquote><p>js部分</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// miniprogram/pages/index/index.js</span></span><br><span class="line"><span class="keyword">const</span> db = wx.<span class="property">cloud</span>.<span class="title function_">database</span>()</span><br><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 页面的初始数据</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">data</span>: &#123;    </span><br><span class="line">      <span class="attr">moveList</span>:[],</span><br><span class="line">      <span class="attr">start</span>:<span class="number">0</span>,</span><br><span class="line">      <span class="attr">cout</span>:<span class="number">20</span>,</span><br><span class="line">      <span class="title class_">ToTop</span>:<span class="literal">false</span>,</span><br><span class="line">      <span class="attr">end</span>:<span class="literal">false</span>,</span><br><span class="line">      <span class="attr">s</span>:<span class="string">&#x27;&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">textPaste</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="comment">//点击复制</span></span><br><span class="line">    wx.<span class="title function_">setClipboardData</span>(&#123;</span><br><span class="line">      <span class="attr">data</span>: e.<span class="property">currentTarget</span>.<span class="property">dataset</span>.<span class="property">text</span>,</span><br><span class="line">      <span class="attr">success</span>:<span class="keyword">function</span>(<span class="params">res</span>)&#123;</span><br><span class="line">         wx.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;复制成功&#x27;</span>,</span><br><span class="line">         &#125;)</span><br><span class="line">        <span class="comment">/*wx.getClipboardData(&#123;//获取复制内容</span></span><br><span class="line"><span class="comment">          success: function(res)&#123;</span></span><br><span class="line"><span class="comment">            console.log(res.data)</span></span><br><span class="line"><span class="comment">          &#125;</span></span><br><span class="line"><span class="comment">        &#125;)*/</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"> &#125;,</span><br><span class="line">  <span class="attr">onPageScroll</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123; <span class="comment">// 获取滚动条当前位置</span></span><br><span class="line">    <span class="keyword">if</span>(e.<span class="property">scrollTop</span>&gt;<span class="number">400</span>)&#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">         <span class="title class_">ToTop</span>:<span class="literal">true</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">        <span class="title class_">ToTop</span>:<span class="literal">false</span></span><br><span class="line">     &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br><span class="line">  <span class="attr">gotop</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="comment">//返回顶部</span></span><br><span class="line">    <span class="keyword">if</span> (wx.<span class="property">pageScrollTo</span>) &#123;  </span><br><span class="line">      wx.<span class="title function_">pageScrollTo</span>(&#123;</span><br><span class="line">        <span class="attr">scrollTop</span>: <span class="number">0</span></span><br><span class="line">      &#125;);    </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      wx.<span class="title function_">showModal</span>(&#123;</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&#x27;提示&#x27;</span>,</span><br><span class="line">        <span class="attr">content</span>: <span class="string">&#x27;当前微信版本过低，无法使用该功能，请升级到最新微信版本后重试。&#x27;</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">K</span>:<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    wx.<span class="title function_">showLoading</span>(&#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;加载中&#x27;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">var</span> start = <span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">start</span>;</span><br><span class="line">    <span class="keyword">var</span> cout =<span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">cout</span>;</span><br><span class="line">    db.<span class="title function_">collection</span>(<span class="string">&#x27;douban&#x27;</span>).<span class="title function_">skip</span>(start).<span class="title function_">limit</span>(cout).<span class="title function_">get</span>().<span class="title function_">then</span>(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">        <span class="attr">moveList</span>:<span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">moveList</span>.<span class="title function_">concat</span>(res.<span class="property">data</span>),</span><br><span class="line">        <span class="attr">start</span>:start+cout</span><br><span class="line">      &#125;);</span><br><span class="line">      wx.<span class="title function_">hideLoading</span>();</span><br><span class="line">    &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 生命周期函数--监听页面加载</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">onLoad</span>: <span class="keyword">function</span> (<span class="params">options</span>) &#123;</span><br><span class="line">    </span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 生命周期函数--监听页面初次渲染完成</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">onReady</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">K</span>();</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 生命周期函数--监听页面显示</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">onShow</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 生命周期函数--监听页面隐藏</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">onHide</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 生命周期函数--监听页面卸载</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">onUnload</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 页面相关事件处理函数--监听用户下拉动作</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">onPullDownRefresh</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    </span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 页面上拉触底事件的处理函数</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">onReachBottom</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">K</span>();</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">start</span>&gt;=<span class="number">240</span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">            <span class="attr">end</span>:<span class="literal">true</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 用户点击右上角分享</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">onShareAppMessage</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;具体部分&quot;&gt;&lt;a href=&quot;#具体部分&quot; class=&quot;headerlink&quot; title=&quot;具体部分&quot;&gt;&lt;/a&gt;具体部分&lt;/h4&gt;</summary>
    
    
    
    
    <category term="微信小程序" scheme="https://kdt-g.github.io/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>VSCode中给方法添加注释头(C#)</title>
    <link href="https://kdt-g.github.io/2022/03/28/csharp_addzhushi/"/>
    <id>https://kdt-g.github.io/2022/03/28/csharp_addzhushi/</id>
    <published>2022-03-27T16:00:00.000Z</published>
    <updated>2022-03-26T18:31:29.853Z</updated>
    
    <content type="html"><![CDATA[<p>使用C# XML Documentation Comments插件<br>快捷键 &#x2F;&#x2F;&#x2F;</p><span id="more"></span><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> </span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;a&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;b&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">DoSomething</span>(<span class="params"><span class="built_in">float</span> a,<span class="built_in">string</span> b</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>转自：<a href="https://blog.csdn.net/hbflyhbfly/article/details/86542362">https://blog.csdn.net/hbflyhbfly/article/details/86542362</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;使用C# XML Documentation Comments插件&lt;br&gt;快捷键 &amp;#x2F;&amp;#x2F;&amp;#x2F;&lt;/p&gt;</summary>
    
    
    
    
    <category term="c#" scheme="https://kdt-g.github.io/tags/c/"/>
    
    <category term="有趣的编程知识" scheme="https://kdt-g.github.io/tags/%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BC%96%E7%A8%8B%E7%9F%A5%E8%AF%86/"/>
    
    <category term="插件" scheme="https://kdt-g.github.io/tags/%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>钩子程序</title>
    <link href="https://kdt-g.github.io/2022/03/28/gouzichengxu/"/>
    <id>https://kdt-g.github.io/2022/03/28/gouzichengxu/</id>
    <published>2022-03-27T16:00:00.000Z</published>
    <updated>2022-03-26T18:47:12.457Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><blockquote><p>​            钩子(Hook)，是Windows消息处理机制的一个平台，应用程序可以在上面设置子程序以监视指定窗口的某种消息，而且所监视的窗口可以是其他进程所创建的。当消息到达后，在目标窗口处理函数之前处理它。钩子机制允许应用程序截获处理Windows消息或特定事件。<br>中文名钩子程序外文名Hook类    型处理消息的程序段平    台Windows消息处理机制的一个平台</p></blockquote><span id="more"></span><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><p>1 基本概念<br>2 运行机制<br>3 分类<br>4 常用类型</p><h3 id="1-基本概念编辑"><a href="#1-基本概念编辑" class="headerlink" title="1.基本概念编辑"></a>1.基本概念编辑</h3><p>在某种操作后弹出的关于钩子程序的界面<br>在某种操作后弹出的关于钩子程序的界面<br>钩子实际上是一个处理消息的程序段，通过系统调用，把它挂入系统。每当特定的消息发出，在没有到达目的窗口前，钩子程序就先捕获该消息，亦即钩子函数先得到控制权。这时钩子函数即可以加工处理（改变）该消息，也可以不作处理而继续传递该消息，还可以强制结束消息的传递。<br>钩子也可以理解为WINDOWS留给我们的后门，比如你想控制键盘，在DOS时代很简单通过INT即可，而WINDOWS时代不允许我们直接操作硬件；由于WINDOWS是消息驱动，所以我们可以拦截键盘消息以达到控制键盘的目的。控制自己进程的消息固然很简单，但是要控制所有进程消息就要利用钩子了。将钩子函数放在DLL中，所有的有关键盘的消息都必须经过钩子函数过滤，这样你就可以为所欲为了。<br>WINDOWS下的钩子程序就像DOS下的TSR(内存驻留程序)一样，用来截获WINDOWS下的消息。</p><h3 id="2-运行机制编辑"><a href="#2-运行机制编辑" class="headerlink" title="2.运行机制编辑"></a>2.运行机制编辑</h3><p>每一个Hook(钩子)都有一个与之相关联的指针列表，称之为钩子链表，由系统来维护。这个列表的指针指向指定的，应用程序定义的，被Hook子程调用的回调函数，也就是该钩子的各个处理子程。当与指定的Hook类型关联的消息发生时，系统就把这个消息传递到Hook子程。 一些Hook子程可以只监视消息，或者修改消息，或者停止消息的前进，避免这些消息传递到下一个Hook子程或者目的窗口。最近安装的钩子放在链的开始， 而最早安装的钩子放在最后，也就是后加入的先获得控制权。<br>Windows 并不要求钩子子程的卸载顺序一定得和安装顺序相反。每当有一个钩子被卸载，Windows 便释放其占用的内存，并更新整个Hook链表。如果程序安装了钩子，但是在尚未卸载钩子之前就结束了，那么系统会自动为它做卸载钩子的操作。</p><h3 id="3-分类编辑"><a href="#3-分类编辑" class="headerlink" title="3.分类编辑"></a>3.分类编辑</h3><p>按事件分类<br>有如下的几种常用类型<br>（1）键盘钩子和低级键盘钩子可以监视各种键盘消息。<br>（2） 鼠标钩子和低级鼠标钩子可以监视各种鼠标消息。<br>（3） 外壳钩子可以监视各种Shell事件消息。比如启动和关闭应用程序。<br>（4）日志钩子可以记录从系统消息队列中取出的各种事件消息。<br>（5） 窗口过程钩子监视所有从系统消息队列发往目标窗口的消息。<br>此外，还有一些特定事件的钩子提供给我们使用，不一一列举。<br>按使用范围分类<br>主要有线程钩子和系统钩子<br>（1） 线程钩子监视指定线程的事件消息。<br>（2）系统钩子监视系统中的所有线程的事件消息。因为系统钩子会影响系统中所有的应用程序，所以钩子函数必须放在独立的动态链接库(DLL)中。这是系统钩子和线程钩子很大的不同之处。<br>几点需要说明的地方：<br>（1） 如果对于同一事件（如鼠标消息）既安装了线程钩子又安装了系统钩子，那么系统会自动先调用线程钩子，然后调用系统钩子。<br>（2） 对同一事件消息可安装多个钩子处理过程，这些钩子处理过程形成了钩子链。当前钩子处理结束后应把钩子信息传递给下一个钩子函数。而且最近安装的钩子放在链的开始，而最早安装的钩子放在最后，也就是后加入的先获得控制权。<br>（3） 钩子特别是系统钩子会消耗消息处理时间，降低系统性能。只有在必要的时候才安装钩子，在使用完毕后要及时卸载。</p><h3 id="4-常用类型编辑"><a href="#4-常用类型编辑" class="headerlink" title="4.常用类型编辑"></a>4.常用类型编辑</h3><p>WH_CALLWNDPROC<br>1、WH_CALLWNDPROC和WH_CALLWNDPROCRET Hooks<br>WH_CALLWNDPROC和WH_CALLWNDPROCRET Hooks使你可以监视发送到窗口过程的消息。系统在消息发送到接收窗口过程之前调用WH_CALLWNDPROC Hook子程，并且在窗口过程处理完消息之后调用WH_CALLWNDPROCRET Hook子程。<br>WH_CALLWNDPROCRET Hook传递指针到CWPRETSTRUCT结构，再传递到Hook子程。CWPRETSTRUCT结构包含了来自处理消息的窗口过程的返回值，同样也包括了与这个消息关联的消息参数。<br>WH_CBT Hook<br>在以下事件之前，系统都会调用WH_CBT Hook子程，这些事件包括：</p><ol><li>激活，建立，销毁，最小化，最大化，移动，改变尺寸等窗口事件；</li><li>完成系统指令；</li><li>来自系统消息队列中的移动鼠标，键盘事件；</li><li>设置输入焦点事件；</li><li>同步系统消息队列事件。<br>Hook子程的返回值确定系统是否允许或者防止这些操作中的一个。<br>WH_DEBUG Hook<br>在系统调用系统中与其他Hook关联的Hook子程之前，系统会调用WH_DEBUG Hook子程。你可以使用这个Hook来决定是否允许系统调用与其他Hook关联的Hook子程。<br>WH_FOREGROUNDIDLE Hook<br>当应用程序的前台线程处于空闲状态时，可以使用WH_FOREGROUNDIDLE Hook执行低优先级的任务。当应用程序的前台线程大概要变成空闲状态时，系统就会调用WH_FOREGROUNDIDLE Hook子程。<br>WH_GETMESSAGE Hook<br>应用程序使用WH_GETMESSAGE Hook来监视从GetMessage or PeekMessage函数返回的消息。你可以使用WH_GETMESSAGE Hook去监视鼠标和键盘输入，以及其他发送到消息队列中的消息。<br>WH_JOURNALPLAYBACK Hook<br>WH_JOURNALPLAYBACK Hook使应用程序可以插入消息到系统消息队列。可以使用这个Hook回放通过使用WH_JOURNALRECORD Hook记录下来的连续的鼠标和键盘事件。只要WH_JOURNALPLAYBACK Hook已经安装，正常的鼠标和键盘事件就是无效的。<br>WH_JOURNALPLAYBACK Hook是全局Hook，它不能象线程特定Hook一样使用。 WH_JOURNALPLAYBACK Hook返回超时值，这个值告诉系统在处理来自回放Hook当前消息之前需要等待多长时间（毫秒）。这就使Hook可以控制实时事件的回放。<br>WH_JOURNALPLAYBACK是system-wide local hooks，它们不会被注射到任何行程位址空间。（估计按键精灵是用这个hook做的）<br>WH_JOURNALRECORD Hook<br>WH_JOURNALRECORD Hook用来监视和记录输入事件。典型的，可以使用这个Hook记录连续的鼠标和键盘事件，然后通过使用WH_JOURNALPLAYBACK Hook来回放。<br>WH_JOURNALRECORD Hook是全局Hook，它不能象线程特定Hook一样使用。<br>WH_JOURNALRECORD是system-wide local hooks，它们不会被注射到任何行程位址空间。<br>WH_KEYBOARD Hook<br>在应用程序中，WH_KEYBOARD Hook用来监视WM_KEYDOWN and WM_KEYUP消息，这些消息通过GetMessage or PeekMessage function返回。可以使用这个Hook来监视输入到消息队列中的键盘消息。<br>WH_KEYBOARD_LL Hook<br>WH_KEYBOARD_LL Hook监视输入到线程消息队列中的键盘消息。<br>WH_MOUSE Hook<br>WH_MOUSE Hook监视从GetMessage 或者 PeekMessage 函数返回的鼠标消息。使用这个Hook监视输入到消息队列中的鼠标消息。<br>WH_MOUSE_LL Hook<br>WH_MOUSE_LL Hook监视输入到线程消息队列中的鼠标消息。<br>WH_MSGFILTER &#x2F; hooks<br>WH_MSGFILTER 和 WH_SYSMSGFILTER Hooks<br>WH_MSGFILTER 和 WH_SYSMSGFILTER Hooks使我们可以监视菜单，滚动条，消息框，对话框消息并且发现用户使用ALT+TAB or ALT+ESC 组合键切换窗口。<br>WH_MSGFILTER Hook只能监视传递到菜单，滚动条，消息框的消息，以及传递到通过安装了Hook子程的应用程序建立的对话框的消息。<br>WH_SYSMSGFILTER Hook监视所有应用程序消息。<br>WH_MSGFILTER 和 WH_SYSMSGFILTER Hooks使我们可以在模式循环期间过滤消息，这等价于在主消息循环中过滤消息。通过调用CallMsgFilter function可以直接的调用WH_MSGFILTER Hook。通过使用这个函数，应用程序能够在模式循环期间使用相同的代码去过滤消息，如同在主消息循环里一样。<br>WH_SHELL Hook<br>外壳应用程序可以使用WH_SHELL Hook去接收重要的通知。当外壳应用程序是激活的并且当顶层窗口建立或者销毁时，系统调用WH_SHELL Hook子程。<br>WH_SHELL 共有5钟情况：</li><li>只要有个top-level、unowned 窗口被产生、起作用、或是被摧毁；</li><li>当Taskbar需要重画某个按钮；</li><li>当系统需要显示关于Taskbar的一个程序的最小化形式；</li><li>键盘布局状态改变；</li><li>当使用者按Ctrl+Esc去执行Task Manager（或相同级别的程序）。<br>按照惯例，外壳应用程序都不接收WH_SHELL消息。所以，在应用程序能够接收WH_SHELL消息之前，应用程序必须调用SystemParametersInfo function注册它自己。</li></ol><p>转自：<a href="https://baike.baidu.com/item/%E9%92%A9%E5%AD%90%E7%A8%8B%E5%BA%8F/10772325">https://baike.baidu.com/item/钩子程序/10772325</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;​            钩子(Hook)，是Windows消息处理机制的一个平台，应用程序可以在上面设置子程序以监视指定窗口的某种消息，而且所监视的窗口可以是其他进程所创建的。当消息到达后，在目标窗口处理函数之前处理它。钩子机制允许应用程序截获处理Windows消息或特定事件。&lt;br&gt;中文名钩子程序外文名Hook类    型处理消息的程序段平    台Windows消息处理机制的一个平台&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="有趣的编程知识" scheme="https://kdt-g.github.io/tags/%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BC%96%E7%A8%8B%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>jq在线引用地址大全</title>
    <link href="https://kdt-g.github.io/2022/03/28/jq_src/"/>
    <id>https://kdt-g.github.io/2022/03/28/jq_src/</id>
    <published>2022-03-27T16:00:00.000Z</published>
    <updated>2022-03-26T18:39:57.355Z</updated>
    
    <content type="html"><![CDATA[<p>1.官网jquery压缩版引用地址:</p><span id="more"></span><p>　3.1.1版本:</p><p>　　<script src="https://code.jquery.com/jquery-3.1.1.min.js"></script></p><p>   3.0.0版本:</p><p>　　<script src="https://code.jquery.com/jquery-3.0.0.min.js"></script></p><p>　2.1.4版本:</p><p>　　<script src="http://code.jquery.com/jquery-2.1.4.min.js"></script></p><p>2.百度压缩版引用地址:</p><p>　　<script src="http://libs.baidu.com/jquery/2.1.4/jquery.min.js"></script></p><p>3.微软压缩版引用地址:</p><p>　　<script src="http://ajax.aspnetcdn.com/ajax/jquery/jquery-2.1.4.min.js"></script></p><br /><p>转自：<a href="https://blog.csdn.net/weixin_42630877/article/details/83096998">https://blog.csdn.net/weixin_42630877&#x2F;article&#x2F;details&#x2F;83096998</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;1.官网jquery压缩版引用地址:&lt;/p&gt;</summary>
    
    
    
    
    <category term="前端" scheme="https://kdt-g.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>简单使用Node.js连接MySql数据库进行增删改查</title>
    <link href="https://kdt-g.github.io/2022/03/28/nodejs_test/"/>
    <id>https://kdt-g.github.io/2022/03/28/nodejs_test/</id>
    <published>2022-03-27T16:00:00.000Z</published>
    <updated>2022-03-26T18:42:16.100Z</updated>
    
    <content type="html"><![CDATA[<p>##连接数据库</p><span id="more"></span><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入mysql（既然要使用它，当然要引入啦）</span></span><br><span class="line"><span class="keyword">const</span> mysql = <span class="built_in">require</span>(<span class="string">&#x27;mysql&#x27;</span>); </span><br><span class="line"> </span><br><span class="line"><span class="comment">//连接mysql,option可很具情况自行配置</span></span><br><span class="line"><span class="keyword">const</span> option = &#123;</span><br><span class="line">  <span class="attr">host</span>: <span class="string">&quot;主机地址&quot;</span>,</span><br><span class="line">  <span class="attr">user</span>: <span class="string">&quot;Mysql用户名&quot;</span>,</span><br><span class="line">  <span class="attr">password</span>: <span class="string">&quot;Mysql用户密码&quot;</span>,</span><br><span class="line">  <span class="attr">database</span>: <span class="string">&quot;数据库名称&quot;</span>,</span><br><span class="line">  <span class="attr">port</span>: <span class="string">&#x27;端口号&#x27;</span>,</span><br><span class="line">  <span class="attr">connectTimeout</span>: <span class="number">5000</span>, <span class="comment">// 连接超时</span></span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> connection = mysql.<span class="title function_">createConnection</span>(option);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//连接开始</span></span><br><span class="line">connection.<span class="title function_">connect</span>(<span class="keyword">function</span>(<span class="params">err</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(err)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;连接失败&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;连接成功&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>##增</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> userAddSql = <span class="string">&#x27;INSERT INTO userinfo(Id,UserName,UserPass) VALUES(0,?,?)&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> userAddSql_Params = [<span class="string">&#x27;Wilson&#x27;</span>,<span class="string">&#x27;abcd&#x27;</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//增</span></span><br><span class="line"> connection.<span class="title function_">query</span>(userAddSql,userAddSql_Params,<span class="keyword">function</span>(<span class="params">err,result</span>)&#123;</span><br><span class="line"> <span class="keyword">if</span>(err)&#123;</span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[INSERT ERROR] - &#x27;</span>,err.<span class="property">message</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;--------------------------INSERT----------------------------&#x27;</span>);</span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;INSERT  ID:&#x27;</span>,result);</span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-----------------------------------------------------------------\n\n&#x27;</span>);</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure><p>##改</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> userModSql = <span class="string">&#x27;UPDATE userinfo SET UserName =?,UserPass = ?  WHERE Id = ?&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> userModSql_Params = [<span class="string">&#x27;钟馗&#x27;</span>,<span class="string">&#x27;5678&#x27;</span>,<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//改</span></span><br><span class="line"></span><br><span class="line">connection.<span class="title function_">query</span>(userModSql,userModSql_Params,<span class="keyword">function</span>(<span class="params">err,result</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(err)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[UPDATE ERROR] - &#x27;</span>,err.<span class="property">message</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125; </span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;--------------------------UPDATE----------------------------&#x27;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;UPDATE affectedRows&#x27;</span>,result);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-----------------------------------------------------------------\n\n&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>##查</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> userGetSql = <span class="string">&#x27;SELECT * FROM userinfo&#x27;</span>;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">//查</span></span><br><span class="line"> connection.<span class="title function_">query</span>(userGetSql,<span class="keyword">function</span>(<span class="params">err,result</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(err)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[SELECT ERROR] - &#x27;</span>,err.<span class="property">message</span>);</span><br><span class="line"> <span class="keyword">return</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;--------------------------SELECT----------------------------&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);        </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-----------------------------------------------------------------\n\n&#x27;</span>);  </span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure><p>##删</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> userDelSql = <span class="string">&#x27;DELETE FROM userinfo&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//删</span></span><br><span class="line">connection.<span class="title function_">query</span>(userDelSql,<span class="keyword">function</span>(<span class="params">err,result</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (err) &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[DELETE ERROR] - &#x27;</span>,err.<span class="property">message</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;--------------------------DELETE----------------------------&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;DELETE affectedRows&#x27;</span>,result);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-----------------------------------------------------------------\n\n&#x27;</span>);  </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>##结束连接</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">connection.<span class="title function_">end</span>()</span><br></pre></td></tr></table></figure><p>##完整代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//引入mysql（既然要使用它，当然要引入啦）</span></span><br><span class="line"><span class="keyword">const</span> mysql = <span class="built_in">require</span>(<span class="string">&#x27;mysql&#x27;</span>); </span><br><span class="line"> </span><br><span class="line"><span class="comment">//连接mysql,option可很具情况自行配置</span></span><br><span class="line"><span class="keyword">const</span> option = &#123;</span><br><span class="line">  <span class="attr">host</span>: <span class="string">&quot;101.201.145.134&quot;</span>,</span><br><span class="line">  <span class="attr">user</span>: <span class="string">&quot;TestDB&quot;</span>,</span><br><span class="line">  <span class="attr">password</span>: <span class="string">&quot;Wa8emaaN7ShSkcyR&quot;</span>,</span><br><span class="line">  <span class="attr">database</span>: <span class="string">&quot;TestDB&quot;</span>,</span><br><span class="line">  <span class="attr">port</span>: <span class="string">&#x27;3306&#x27;</span>,</span><br><span class="line">  <span class="attr">connectTimeout</span>: <span class="number">5000</span>, <span class="comment">// 连接超时</span></span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> connection = mysql.<span class="title function_">createConnection</span>(option);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//连接开始</span></span><br><span class="line">connection.<span class="title function_">connect</span>(<span class="keyword">function</span>(<span class="params">err</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(err)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;连接失败&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;连接成功&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">//这里就是增删改查的地方啦</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">var</span> userAddSql = <span class="string">&#x27;INSERT INTO userinfo(Id,UserName,UserPass) VALUES(0,?,?)&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> userAddSql_Params = [<span class="string">&#x27;Wilson&#x27;</span>,<span class="string">&#x27;abcd&#x27;</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//增</span></span><br><span class="line">connection.<span class="title function_">query</span>(userAddSql,userAddSql_Params,<span class="keyword">function</span>(<span class="params">err,result</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(err)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[INSERT ERROR] - &#x27;</span>,err.<span class="property">message</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;--------------------------INSERT----------------------------&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;INSERT  ID:&#x27;</span>,result);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-----------------------------------------------------------------\n\n&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> <span class="keyword">var</span> userModSql = <span class="string">&#x27;UPDATE userinfo SET UserName =?,UserPass = ?  WHERE Id = ?&#x27;</span>;</span><br><span class="line"> <span class="keyword">var</span> userModSql_Params = [<span class="string">&#x27;钟馗&#x27;</span>,<span class="string">&#x27;5678&#x27;</span>,<span class="number">1</span>];</span><br><span class="line"> </span><br><span class="line"> <span class="comment">//改</span></span><br><span class="line"> </span><br><span class="line"> connection.<span class="title function_">query</span>(userModSql,userModSql_Params,<span class="keyword">function</span>(<span class="params">err,result</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(err)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[UPDATE ERROR] - &#x27;</span>,err.<span class="property">message</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125; </span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;--------------------------UPDATE----------------------------&#x27;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;UPDATE affectedRows&#x27;</span>,result);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-----------------------------------------------------------------\n\n&#x27;</span>);</span><br><span class="line"> &#125;);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> <span class="keyword">var</span> userGetSql = <span class="string">&#x27;SELECT * FROM userinfo&#x27;</span>;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">//查</span></span><br><span class="line"> connection.<span class="title function_">query</span>(userGetSql,<span class="keyword">function</span>(<span class="params">err,result</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(err)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[SELECT ERROR] - &#x27;</span>,err.<span class="property">message</span>);</span><br><span class="line"> <span class="keyword">return</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;--------------------------SELECT----------------------------&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);        </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-----------------------------------------------------------------\n\n&#x27;</span>);  </span><br><span class="line"> &#125;);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> <span class="keyword">var</span> userDelSql = <span class="string">&#x27;DELETE FROM userinfo&#x27;</span>;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">//删</span></span><br><span class="line"> connection.<span class="title function_">query</span>(userDelSql,<span class="keyword">function</span>(<span class="params">err,result</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (err) &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[DELETE ERROR] - &#x27;</span>,err.<span class="property">message</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;--------------------------DELETE----------------------------&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;DELETE affectedRows&#x27;</span>,result);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-----------------------------------------------------------------\n\n&#x27;</span>);  </span><br><span class="line"> &#125;);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> <span class="comment">//结束连接</span></span><br><span class="line"> connection.<span class="title function_">end</span>()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>学自：<em><a href="https://www.cnblogs.com/zhongweiv/p/nodejs_mysql.html">https://www.cnblogs.com/zhongweiv/p/nodejs_mysql.html</a></em></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;##连接数据库&lt;/p&gt;</summary>
    
    
    
    
    <category term="Node.js" scheme="https://kdt-g.github.io/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>字符串和Unicode互转</title>
    <link href="https://kdt-g.github.io/2022/03/28/string_to_unicode/"/>
    <id>https://kdt-g.github.io/2022/03/28/string_to_unicode/</id>
    <published>2022-03-27T16:00:00.000Z</published>
    <updated>2022-03-26T18:36:54.119Z</updated>
    
    <content type="html"><![CDATA[<h4 id="字符串转Unicode"><a href="#字符串转Unicode" class="headerlink" title="字符串转Unicode"></a>字符串转Unicode</h4><span id="more"></span><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> 字符串转Unicode</span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;source&quot;&gt;</span>源字符串<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>Unicode编码后的字符串<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">StringUnicode</span>(<span class="params"><span class="built_in">string</span> source</span>)</span></span><br><span class="line">       &#123;</span><br><span class="line">           <span class="built_in">byte</span>[] bytes = Encoding.Unicode.GetBytes(source);</span><br><span class="line">           StringBuilder stringBuilder = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">           <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; bytes.Length; i += <span class="number">2</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               stringBuilder.AppendFormat(<span class="string">&quot;\\u&#123;0&#125;&#123;1&#125;&quot;</span>, bytes[i + <span class="number">1</span>].ToString(<span class="string">&quot;x&quot;</span>).PadLeft(<span class="number">2</span>, <span class="string">&#x27;0&#x27;</span>), bytes[i].ToString(<span class="string">&quot;x&quot;</span>).PadLeft(<span class="number">2</span>, <span class="string">&#x27;0&#x27;</span>));</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">return</span> stringBuilder.ToString();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Unicode转字符串"><a href="#Unicode转字符串" class="headerlink" title="Unicode转字符串"></a>Unicode转字符串</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> Unicode转字符串</span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;source&quot;&gt;</span>经过Unicode编码的字符串<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>正常字符串<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">UnicodeString</span>(<span class="params"><span class="built_in">string</span> source</span>)</span></span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="keyword">new</span> Regex(<span class="string">@&quot;\\u([0-9A-F]&#123;4&#125;)&quot;</span>, RegexOptions.IgnoreCase | RegexOptions.Compiled).Replace(</span><br><span class="line">               source, x =&gt; <span class="built_in">string</span>.Empty + Convert.ToChar(Convert.ToUInt16(x.Result(<span class="string">&quot;$1&quot;</span>), <span class="number">16</span>)));</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;字符串转Unicode&quot;&gt;&lt;a href=&quot;#字符串转Unicode&quot; class=&quot;headerlink&quot; title=&quot;字符串转Unicode&quot;&gt;&lt;/a&gt;字符串转Unicode&lt;/h4&gt;</summary>
    
    
    
    
    <category term="c#" scheme="https://kdt-g.github.io/tags/c/"/>
    
    <category term="有趣的编程知识" scheme="https://kdt-g.github.io/tags/%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BC%96%E7%A8%8B%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>将获取到的秒数转换为年月日时分秒</title>
    <link href="https://kdt-g.github.io/2022/03/28/time_convert/"/>
    <id>https://kdt-g.github.io/2022/03/28/time_convert/</id>
    <published>2022-03-27T16:00:00.000Z</published>
    <updated>2022-03-26T18:33:05.750Z</updated>
    
    <content type="html"><![CDATA[<p>代码如下</p><span id="more"></span><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Nowtime</span>(time)&#123;</span><br><span class="line">    <span class="comment">//年=12个月  月=30天  天=24小时   小时=60分钟  分钟=60秒</span></span><br><span class="line">    <span class="comment">//12*30*24*60*60</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">var</span> y=<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>*<span class="number">30</span>*<span class="number">12</span>,m=<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>*<span class="number">30</span>,d=<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>,h=<span class="number">60</span>*<span class="number">60</span>,mm=<span class="number">60</span>;</span><br><span class="line">    <span class="comment">//年</span></span><br><span class="line">    <span class="keyword">var</span> Y =<span class="title class_">Math</span>.<span class="title function_">floor</span>(time/y);</span><br><span class="line">    <span class="comment">//月</span></span><br><span class="line">    <span class="keyword">var</span> M = <span class="title class_">Math</span>.<span class="title function_">floor</span>(time/m)-(Y*m);</span><br><span class="line">    M=M&lt;<span class="number">10</span>?<span class="string">&quot;0&quot;</span>+<span class="attr">M</span>:M;</span><br><span class="line">    <span class="comment">//日</span></span><br><span class="line">    <span class="keyword">var</span> D = <span class="title class_">Math</span>.<span class="title function_">floor</span>(time/d)-(((Y*m*d)+(M*d)));</span><br><span class="line">    D=D&lt;<span class="number">10</span>?<span class="string">&quot;0&quot;</span>+<span class="attr">D</span>:D;</span><br><span class="line">    <span class="comment">//时</span></span><br><span class="line">    <span class="keyword">var</span> H =<span class="title class_">Math</span>.<span class="title function_">floor</span>(time/h)-(((Y*m*d*h)+(M*d*h)+(D*h)));</span><br><span class="line">    H=H&lt;<span class="number">10</span>?<span class="string">&quot;0&quot;</span>+<span class="attr">H</span>:H;</span><br><span class="line">    <span class="comment">//分</span></span><br><span class="line">    <span class="keyword">var</span> <span class="title class_">Mm</span> = <span class="title class_">Math</span>.<span class="title function_">floor</span>(time/mm)-(((Y*m*d*h*mm)+(M*d*h*mm)+(D*h*mm)+(H*mm)));</span><br><span class="line">    <span class="title class_">Mm</span>=<span class="title class_">Mm</span>&lt;<span class="number">10</span>?<span class="string">&quot;0&quot;</span>+<span class="title class_">Mm</span>:<span class="title class_">Mm</span>;</span><br><span class="line">    <span class="comment">//秒</span></span><br><span class="line">    <span class="keyword">var</span> S = time%mm;</span><br><span class="line">    S=S&lt;<span class="number">10</span>?<span class="string">&quot;0&quot;</span>+<span class="attr">S</span>:S;</span><br><span class="line">    <span class="keyword">var</span> data=Y +<span class="string">&quot;年&quot;</span>+ M+<span class="string">&quot;月&quot;</span> + D +<span class="string">&quot;日&quot;</span> + H +<span class="string">&quot;:&quot;</span> + <span class="title class_">Mm</span> +<span class="string">&quot;:&quot;</span> + S;</span><br><span class="line">    <span class="keyword">return</span> data;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;代码如下&lt;/p&gt;</summary>
    
    
    
    
    <category term="c#" scheme="https://kdt-g.github.io/tags/c/"/>
    
    <category term="有趣的编程知识" scheme="https://kdt-g.github.io/tags/%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BC%96%E7%A8%8B%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>简单在Unity中使用c#扩展方法</title>
    <link href="https://kdt-g.github.io/2022/03/28/unity_kuozhanfangfa/"/>
    <id>https://kdt-g.github.io/2022/03/28/unity_kuozhanfangfa/</id>
    <published>2022-03-27T16:00:00.000Z</published>
    <updated>2022-03-26T18:29:21.828Z</updated>
    
    <content type="html"><![CDATA[<h3 id="扩展方法声明"><a href="#扩展方法声明" class="headerlink" title="扩展方法声明"></a>扩展方法声明</h3><span id="more"></span><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">MyHelp</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">MyClass</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 返回Hello World</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;x&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>Hello World<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">Print</span>(<span class="params"><span class="keyword">this</span> Transform x</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;Hello World&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="扩展方法调用"><a href="#扩展方法调用" class="headerlink" title="扩展方法调用"></a>扩展方法调用</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> MyHelp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Test</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> _Test()</span><br><span class="line">    &#123;</span><br><span class="line">        transform.Print();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;扩展方法声明&quot;&gt;&lt;a href=&quot;#扩展方法声明&quot; class=&quot;headerlink&quot; title=&quot;扩展方法声明&quot;&gt;&lt;/a&gt;扩展方法声明&lt;/h3&gt;</summary>
    
    
    
    
    <category term="c#" scheme="https://kdt-g.github.io/tags/c/"/>
    
    <category term="有趣的编程知识" scheme="https://kdt-g.github.io/tags/%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BC%96%E7%A8%8B%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>unity使用摇杆控制物体移动(取巧方式)</title>
    <link href="https://kdt-g.github.io/2022/03/28/unity%E4%BD%BF%E7%94%A8%E6%91%87%E6%9D%86%E6%8E%A7%E5%88%B6%E7%89%A9%E4%BD%93%E7%A7%BB%E5%8A%A8(%E5%8F%96%E5%B7%A7%E6%96%B9%E5%BC%8F)/"/>
    <id>https://kdt-g.github.io/2022/03/28/unity%E4%BD%BF%E7%94%A8%E6%91%87%E6%9D%86%E6%8E%A7%E5%88%B6%E7%89%A9%E4%BD%93%E7%A7%BB%E5%8A%A8(%E5%8F%96%E5%B7%A7%E6%96%B9%E5%BC%8F)/</id>
    <published>2022-03-27T16:00:00.000Z</published>
    <updated>2022-03-30T16:25:50.472Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、虚拟摇杆的建立"><a href="#一、虚拟摇杆的建立" class="headerlink" title="一、虚拟摇杆的建立"></a>一、虚拟摇杆的建立</h1><h2 id="1-创建摇杆UI"><a href="#1-创建摇杆UI" class="headerlink" title="1.创建摇杆UI"></a>1.创建摇杆UI</h2><blockquote><p>如图：建立三层(原形都是Image)</p></blockquote><blockquote><p>第一层：用于控制摇杆在界面中的位置</p></blockquote><blockquote><p>第二层：用于控制摇杆轮盘样式</p></blockquote><blockquote><p>第三层：用于显示摇杆方向</p></blockquote><span id="more"></span><p><img src="https://skyisland.feishu.cn/space/api/box/stream/download/asynccode/?code=OWE1YzU3MzBiMDk3ZmViYWIzODE3NTM0Yzk4ZWFlYzVfZWFTWkRnenF0WFBTNUpTSVhROVdiZUozM1JqN2E0UnJfVG9rZW46Ym94Y25ZcVp2N1k3dHE3aFp3V2Y2dmh3dFBoXzE2NDg2NTM1ODI6MTY0ODY1NzE4Ml9WNA" alt="img"></p><blockquote><p>其中第一层设置为透明色，而第二、三层设置为圆形，并各自设置颜色</p></blockquote><p><img src="https://skyisland.feishu.cn/space/api/box/stream/download/asynccode/?code=ZGM5MDU5MWIxZjBiY2E5ODEzNjAyNWU5NTJlNzJmODVfY2h5OUdTQUhObDJRcFd3eDd0WWJ1dXpiSW5UOUdKRjhfVG9rZW46Ym94Y240VDJieDFFdU5xeWk1MjJJMlVVbnFlXzE2NDg2NTM1ODI6MTY0ODY1NzE4Ml9WNA" alt="img"></p><h2 id="2-为摇杆添加滚动矩形-Scroll-Rect-组件"><a href="#2-为摇杆添加滚动矩形-Scroll-Rect-组件" class="headerlink" title="2.为摇杆添加滚动矩形(Scroll Rect)组件"></a>2.为摇杆添加滚动矩形(Scroll Rect)组件</h2><blockquote><p>最重要的部分：</p></blockquote><blockquote><p>1.为第一层的图片添加<strong>Scroll Rect组件(本摇杆就是利用该组件的回弹的特性)</strong></p></blockquote><blockquote><p>2.拖动第三层到<strong>Content</strong>中</p></blockquote><blockquote><p>\3. 组件中的<strong>Elasticity</strong>为回弹速度，根据个人修改</p></blockquote><blockquote><p>建议：</p></blockquote><blockquote><p>1.关闭组件中的<strong>Inertia</strong>选项</p></blockquote><blockquote></blockquote><p><strong>第一层的面板</strong></p><p><img src="https://skyisland.feishu.cn/space/api/box/stream/download/asynccode/?code=OTA4NGU4MWYyZTc4YWI0NzZiZjlhZDdhZTE0NGMxMTVfNHJDVG1ZVXZaanowQlBJVVpxS0ZNbHZnV3R0ZENYcWJfVG9rZW46Ym94Y25yVVRHd3VBUnpxMFZGalhMdVBRYmlnXzE2NDg2NTM1ODI6MTY0ODY1NzE4Ml9WNA" alt="img"></p><p><strong>Content</strong></p><p><img src="https://skyisland.feishu.cn/space/api/box/stream/download/asynccode/?code=MGZmMTIwNDg5OWIxZTQ1NzM3NmY0MGRmNTI4NjllYWJfUnpKRmlVb2pQN0Fra0JZbHFkNzFRMUl2WTcxTXZNWVFfVG9rZW46Ym94Y25veElXWThBSGU3YURRNG1Ea2xsc3NmXzE2NDg2NTM1ODI6MTY0ODY1NzE4Ml9WNA" alt="img"></p><p><strong>Inertia</strong></p><p><img src="https://skyisland.feishu.cn/space/api/box/stream/download/asynccode/?code=MjJhZDBmOGU5MjBkNzBlNGEwMjNlMDE1NmQ5Y2Q4MTBfMzNZb1NMaEY2NE5leEp3U1lMU3dKT1k3UVJWbzVuQUpfVG9rZW46Ym94Y25mWWxEakduZUM2UWhpYnlaSFBORFlnXzE2NDg2NTM1ODI6MTY0ODY1NzE4Ml9WNA" alt="img"></p><p><strong>Elasticity</strong></p><p><img src="https://skyisland.feishu.cn/space/api/box/stream/download/asynccode/?code=MTE0OTQzYzc1YjZmZWZhOWU2MzM3ZTY4MzQxNTQ4NjdfNDBhWWxSd2k1ODJpU1ljMDNwNVdMZFF0VEs3b3dEQmJfVG9rZW46Ym94Y242SVFTamU4aE90NHlKTXV4dTBoRDNjXzE2NDg2NTM1ODI6MTY0ODY1NzE4Ml9WNA" alt="img"></p><blockquote><p>此时已经完成一个简单的摇杆示例了，下面是个人编写的一个四个方向的判断代码</p></blockquote><h1 id="二、简单代码编写"><a href="#二、简单代码编写" class="headerlink" title="二、简单代码编写"></a>二、简单代码编写</h1><h2 id="1-简单的方向判断代码-仅四个方向"><a href="#1-简单的方向判断代码-仅四个方向" class="headerlink" title="1.简单的方向判断代码(仅四个方向)"></a>1.简单的方向判断代码(仅四个方向)</h2><blockquote><p>可添加**Event Trigger组件(仅适用于UI)<strong>，用其中的</strong>PointerDown(点击按下)<strong>和</strong>PointerUp(点击抬起)**来实现下列方法</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">bool IsInputDown = false;//是否按下摇杆</span><br><span class="line">Vector3 DownPoint;//按下的点</span><br><span class="line">Vector3 UpPoint;//抬起时的点</span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 鼠标按下</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">public void GetMouseDownPoint()</span><br><span class="line">&#123;</span><br><span class="line">    DownPoint = Input.mousePosition;//获取按下的点</span><br><span class="line">    IsInputDown = true;</span><br><span class="line">&#125;</span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 鼠标抬起</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">public void GetMouseUpPoint()</span><br><span class="line">&#123;</span><br><span class="line">    IsInputDown = false;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 鼠标拖动方向</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">public void MousePositon()</span><br><span class="line">&#123;</span><br><span class="line">    //抬起或拖动时的点</span><br><span class="line">    UpPoint = Input.mousePosition;</span><br><span class="line">    //计算拖动距离</span><br><span class="line">    Vector2 Offset = UpPoint - DownPoint;</span><br><span class="line">    //拖动距离</span><br><span class="line">    float distance = 20;</span><br><span class="line">    if (Mathf.Abs(Offset.x) &gt; distance || Mathf.Abs(Offset.y) &gt; distance)</span><br><span class="line">    &#123;</span><br><span class="line">        //左右平移</span><br><span class="line">        if (Mathf.Abs(Offset.x) &gt; Mathf.Abs(Offset.y))</span><br><span class="line">        &#123;</span><br><span class="line">            if (Offset.x &lt; 0)//左移</span><br><span class="line">            &#123;</span><br><span class="line">               // Debug.Log(&quot;左&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            else//右移</span><br><span class="line">            &#123;</span><br><span class="line">               // Debug.Log(&quot;右&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        else//上下平移</span><br><span class="line">        &#123;</span><br><span class="line">            if (Offset.y &gt; 0)</span><br><span class="line">            &#123;</span><br><span class="line">               // Debug.Log(&quot;前&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">               // Debug.Log(&quot;下&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="原文参考链接"><a href="#原文参考链接" class="headerlink" title="原文参考链接:"></a>原文参考链接:</h1><p><a href="https://blog.csdn.net/xinzhilinger/article/details/108647567">https://blog.csdn.net/xinzhilinger/article/details/108647567</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;一、虚拟摇杆的建立&quot;&gt;&lt;a href=&quot;#一、虚拟摇杆的建立&quot; class=&quot;headerlink&quot; title=&quot;一、虚拟摇杆的建立&quot;&gt;&lt;/a&gt;一、虚拟摇杆的建立&lt;/h1&gt;&lt;h2 id=&quot;1-创建摇杆UI&quot;&gt;&lt;a href=&quot;#1-创建摇杆UI&quot; class=&quot;headerlink&quot; title=&quot;1.创建摇杆UI&quot;&gt;&lt;/a&gt;1.创建摇杆UI&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;如图：建立三层(原形都是Image)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;第一层：用于控制摇杆在界面中的位置&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;第二层：用于控制摇杆轮盘样式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;第三层：用于显示摇杆方向&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="c#" scheme="https://kdt-g.github.io/tags/c/"/>
    
    <category term="Unity" scheme="https://kdt-g.github.io/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>unity修改UI层级的方法</title>
    <link href="https://kdt-g.github.io/2022/03/28/unity%E4%BF%AE%E6%94%B9UI%E5%B1%82%E7%BA%A7%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>https://kdt-g.github.io/2022/03/28/unity%E4%BF%AE%E6%94%B9UI%E5%B1%82%E7%BA%A7%E7%9A%84%E6%96%B9%E6%B3%95/</id>
    <published>2022-03-27T16:00:00.000Z</published>
    <updated>2022-03-30T16:38:30.192Z</updated>
    
    <content type="html"><![CDATA[<p>代码如下：</p><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">//需要调整层级的对象</span><br><span class="line">Transform A;</span><br><span class="line"></span><br><span class="line">//注：层级越大，显示越前</span><br><span class="line"></span><br><span class="line">//设置到UI层级第一个，即显示最底层</span><br><span class="line">A.SetAsFirstSibling();</span><br><span class="line">//设置到UI层级最后一个，即显示最前层</span><br><span class="line">A.SetAsLastSibling();</span><br><span class="line">//设置到指定索引的层级</span><br><span class="line">A.SetSiblingIndex(int index);</span><br><span class="line">//获取对象层级</span><br><span class="line">A.GetSiblingIndex();</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;代码如下：&lt;/p&gt;</summary>
    
    
    
    
    <category term="c#" scheme="https://kdt-g.github.io/tags/c/"/>
    
    <category term="Unity" scheme="https://kdt-g.github.io/tags/Unity/"/>
    
  </entry>
  
</feed>
